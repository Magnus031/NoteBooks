{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to Magnus \u7684\u5c0f\u7ad9","text":"You must not be afraid of dreaming a bit bigger! <p>\u5f88\u559c\u6b22\u7684\u4e00\u53e5\u8bdd\uff0c\u795d\u4f60\u4e5f\u795d\u6211</p>"},{"location":"about/","title":"About Me","text":""},{"location":"about/#introduce","title":"Introduce","text":"<ul> <li>\ud83d\udc4b Hi, I\u2019m @Magnus031</li> <li>\ud83d\udc40 I\u2019m a 2022 undergraduate student major in CS in Zhejiang University,China!</li> <li>\ud83c\udf31 I\u2019m currently learning ComputerScience and Economic!</li> </ul> <p>\ud83d\udceb How to reach me</p> <ul> <li>You can reach me at my E-mail zhouweizhan031@gmail dot com</li> <li>Also you can reach me at My qq 1478380198</li> </ul>"},{"location":"about/#language","title":"Language","text":"<ul> <li>\u524d\u7aef :<ul> <li>\u8bed\u8a00 : <ul> <li>HTML </li> <li>CSS </li> <li>TypeScript  </li> </ul> </li> <li>\u6280\u672f\u6808 : <ul> <li>Vue3 </li> <li>React </li> </ul> </li> </ul> </li> <li>\u540e\u7aef<ul> <li>\u8bed\u8a00 : <ul> <li>Java</li> <li>go ...</li> </ul> </li> <li>\u6280\u672f\u6808 : <ul> <li>SpringBoot</li> <li>Mybatis Mybatis-plus</li> </ul> </li> </ul> </li> </ul>"},{"location":"about/#plan","title":"Plan","text":"<ul> <li>\u76ee\u524d\u5728\u51c6\u5907\u8981\u996d</li> <li>Learn all kinds of CS and Economic Lectures</li> <li>\u559c\u6b22\u5199\u6587\u5b57</li> <li>\u6e38\u904d\u6bcf\u4e2a\u57ce\u5e02</li> </ul>"},{"location":"CS-courses/CN/EasytoMistake/","title":"\u8ba1\u7f51\u8003\u8bd5\u603b\u7ed3","text":"<p>\u6b64\u90e8\u5206\u4ec5\u4e3a\u7b14\u8005\u590d\u4e60 \u6d59\u6c5f\u5927\u5b66 \u8ba1\u7b97\u673a\u7f51\u7edc\u90e8\u5206\u7684\u603b\u7ed3\uff0c\u4ec5\u4f9b\u590d\u4e60\u4f7f\u7528\u3002</p>"},{"location":"CS-courses/CN/EasytoMistake/#_2","title":"\u8003\u8bd5\u91cd\u70b9","text":"<p>From \u6263\u6839\u54e5</p> <p></p>"},{"location":"CS-courses/CN/EasytoMistake/#chapter1","title":"Chapter1","text":"<p>\u4f1a\u907f\u514d\u8003 OSI \u6a21\u578b\uff0c\u4e3b\u8981\u8003\u7684\u662fhybrid model \u6df7\u5408\u6a21\u578b</p> <ul> <li> <p><code>protocol</code> <code>service</code> <code>interface</code> \u662f\u4e03\u5c42\u6a21\u578b\u7684\u4e09\u4e2a\u91cd\u8981\u7684\u6982\u5ff5</p> </li> <li> <p>\u4e94\u4e2a\u670d\u52a1\u539f\u8bed</p> <ul> <li><code>CONNECT</code> <code>DISCONNECT</code> <code>SEND</code> <code>RECEIVE</code> <code>ERROR</code></li> </ul> </li> <li> <p><code>P2P</code> model \u662f peer to peer \u800c\u4e0d\u662f point to point \u540e\u8005\u662fPPP.</p> <ul> <li><code>peer to peer</code> \u662f\u6307\u5bf9\u7b49\u7f51\u7edc\uff0c\u662f\u6307\u5728\u7f51\u7edc\u4e2d\u6ca1\u6709\u4e2d\u5fc3\u8282\u70b9\uff0c\u6bcf\u4e2a\u8282\u70b9\u90fd\u662f\u5bf9\u7b49\u7684\uff0c\u53ef\u4ee5\u662f\u5ba2\u6237\u7aef\u4e5f\u53ef\u4ee5\u662f\u670d\u52a1\u5668\u3002</li> </ul> </li> </ul>"},{"location":"CS-courses/CN/EasytoMistake/#chapter6","title":"Chapter6","text":""},{"location":"CS-courses/CN/EasytoMistake/#62","title":"6.2","text":"<ul> <li>MSS : Maximum Segment Size</li> <li>MTU : Maximum Transmission Unit</li> </ul> <p>\u9898 : </p> <p>\u89e3\u7b54 20 + 20 + 536(payload) = 576 bytes</p> <p>\u51e0\u4e2a\u5e38\u89c1\u7684 Headers \u7684\u5927\u5c0f\uff1a</p> <ul> <li>IP Header : 20 bytes</li> <li>TCP Header : 20 bytes</li> <li>UDP Header : 8 bytes</li> <li>Ethernet Header : 14 bytes</li> </ul> <p>\u5e38\u89c1\u7684\u7aef\u53e3\u53f7\uff1a</p> <ul> <li>HTTP : 80</li> <li>SMTP : 25</li> <li>FTP : 21</li> <li>Telnet : 23</li> </ul> <p>0~1023 : Well-Known Ports 1024~49151 : Registered Ports 49152~65535 : Dynamic Ports (used for the client side)</p>"},{"location":"CS-courses/CN/EasytoMistake/#65-tcp","title":"6.5 TCP","text":""},{"location":"CS-courses/CN/EasytoMistake/#_3","title":"\u6709\u5173\u6ed1\u52a8\u7a97\u53e3","text":"<ul> <li>the window size of the acknowledgement TCP segment : \u6307\u7684\u662f\u63a5\u6536\u7aef\u7684\u7f13\u51b2\u533a\u5927\u5c0f</li> <li>congestion window size : \u6307\u7684\u662f\u53d1\u9001\u7aef\u7684\u7f13\u51b2\u533a\u5927\u5c0f \u4e8c\u8005\u53d6\u6700\u5c0f\u503c</li> </ul>"},{"location":"CS-courses/CN/EasytoMistake/#slow-start-mechanism","title":"Slow Start mechanism","text":"<p>\u6162\u542f\u52a8\u673a\u5236</p> <p>\u4e5f\u5c31\u662f\u8bf4\uff0c\u5f53\u4e00\u4e2a\u8fde\u63a5\u5efa\u7acb\u7684\u65f6\u5019\uff0c\u53d1\u9001\u7aef\u4f1a\u5148\u53d1\u9001\u4e00\u4e2a\u5305\uff0c\u7136\u540e\u7b49\u5f85\u63a5\u6536\u7aef\u7684\u786e\u8ba4\uff0c\u786e\u8ba4\u4e4b\u540e\uff0c\u53d1\u9001\u7aef\u4f1a\u53d1\u9001\u4e24\u4e2a\u5305\uff0c\u7136\u540e\u56db\u4e2a\u5305\uff0c\u7136\u540e\u516b\u4e2a\u5305\uff0c\u4e00\u76f4\u5230\u8fbe\u5230\u4e00\u4e2a\u9608\u503c\uff0c\u8fd9\u4e2a\u9608\u503c\u5c31\u662f\u6162\u542f\u52a8\u7684\u9608\u503c\uff0c\u5f53\u8fbe\u5230\u8fd9\u4e2a\u9608\u503c\u4e4b\u540e\uff0c\u5c31\u4f1a\u8fdb\u5165\u62e5\u585e\u907f\u514d\u9636\u6bb5\uff0c\u8fd9\u4e2a\u9636\u6bb5\u7684\u9608\u503c\u5c31\u662f\u6162\u542f\u52a8\u7684\u9608\u503c\u7684\u4e00\u534a\u3002 \u8bf4\u4eba\u8bdd\u5c31\u662f\uff0c\u7a97\u53e3\u5927\u5c0f\u4f1a\u4ee5\u6307\u6570\u7ea7\u522b\u589e\u957f\uff0c\u76f4\u5230\u8fbe\u5230\u4e00\u4e2a\u9608\u503c\uff0c\u7136\u540e\u4f1a\u4ee5\u7ebf\u6027\u589e\u957f\u3002</p> <p></p> <ul> <li>1-&gt;2 (2KB-&gt;4KB)</li> <li>2-&gt;4 (4KB-&gt;8KB)</li> <li>4-&gt;8 (8KB-&gt;16KB)</li> <li>8-&gt;16 (16KB-&gt;24KB) \u6240\u4ee5\u9700\u8981\u56db\u8f6e\u7684\u65f6\u95f4\u3002</li> </ul>"},{"location":"CS-courses/CN/EasytoMistake/#_4","title":"\u5b9e\u9a8c\u90e8\u5206","text":"<p>\u56e0\u4e3a\u6bcf\u4e2a\u73ed\u7684\u5b9e\u9a8c\u4e0d\u4e00\u6837\uff0c\u6709\u6559\u6539\u7684\u90e8\u5206\uff0c\u6240\u4ee5\u8fd9\u8fb9\u53c8\u8bf4\u53ef\u80fd\u8981\u8003\u5b9e\u9a8c\uff0c\u6240\u4ee5\u53ea\u653e\u4e00\u4e0b\u5e74\u7ea7\u5404\u4e2a\u6559\u5b66\u73ed\u7684\u552f\u4e8c\u76f8\u540c\u7684\u5b9e\u9a8c\u4e4b\u4e00\u7684 <code>socket</code> \u5b9e\u9a8c</p> <p></p>"},{"location":"CS-courses/CN/EasytoMistake/#_5","title":"\u4f1a\u600e\u4e48\u8003","text":"<p>1 . Which socket primitive is used to block the caller until a connection attempt arrives? </p> <ul> <li>Answer : <code>accept()</code></li> </ul>"},{"location":"CS-courses/CN/EasytoMistake/#_6","title":"\u6613\u9519\u70b9","text":""},{"location":"CS-courses/CN/Http/","title":"HTTP\u534f\u8bae","text":"<p>\u9274\u4e8e\u8fd9\u4e00\u7ae0\u662f \u8ba1\u7b97\u673a\u7f51\u7edc\u4e2d\u7684\u9ad8\u9891\u8003\u70b9\uff0c\u6211\u8fd9\u91cc\u4e13\u95e8\u5217\u51fa HTTP\u76f8\u5173\u7684\u77e5\u8bc6\u8fdb\u884c\u6574\u7406\uff0c\u65b9\u4fbf\u81ea\u5df1\u590d\u4e60</p>"},{"location":"CS-courses/CN/Http/#_1","title":"\u57fa\u7840\u77e5\u8bc6","text":""},{"location":"CS-courses/CN/Http/#ssl-tls","title":"\u4ec0\u4e48\u662f <code>SSL</code> / <code>TLS</code> \u5462\uff1f","text":"<ul> <li> <p><code>SSL</code>(Secure Sockets Layer) \u5b89\u5168\u5957\u63a5\u5c42\uff0c\u662f\u4e3a\u7f51\u7edc\u901a\u4fe1\u63d0\u4f9b\u5b89\u5168\u53ca\u6570\u636e\u5b8c\u6574\u6027\u7684\u4e00\u79cd\u5b89\u5168\u534f\u8bae\u3002\u5b83\u662f\u5728\u5e94\u7528\u5c42\u548c\u4f20\u8f93\u5c42\u4e4b\u95f4\u7684\u4e00\u79cd\u534f\u8bae\uff0c\u7528\u4e8e\u5728\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u4e4b\u95f4\u5efa\u7acb\u4e00\u4e2a\u5b89\u5168\u7684\u8fde\u63a5\u3002<code>SSL</code> \u534f\u8bae\u7684\u4e3b\u8981\u529f\u80fd\u662f\u4fdd\u62a4\u7f51\u7edc\u901a\u4fe1\u7684\u5b89\u5168\u6027\uff0c\u4fdd\u8bc1\u6570\u636e\u5728\u4f20\u8f93\u8fc7\u7a0b\u4e2d\u4e0d\u88ab\u7a83\u53d6\u6216\u7be1\u6539\u3002</p> </li> <li> <p><code>TLS</code> (Transport Layer Security) \u5b89\u5168\u4f20\u8f93\u5c42\u534f\u8bae\uff0c\u662f<code>SSL</code>\u7684\u7ee7\u4efb\u8005\uff0c\u5b83\u662f\u4e00\u4e2a\u5b89\u5168\u534f\u8bae\uff0c\u7528\u4e8e\u5728\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u4e4b\u95f4\u5efa\u7acb\u4e00\u4e2a\u5b89\u5168\u7684\u8fde\u63a5\u3002<code>TLS</code> \u534f\u8bae\u7684\u4e3b\u8981\u529f\u80fd\u662f\u4fdd\u62a4\u7f51\u7edc\u901a\u4fe1\u7684\u5b89\u5168\u6027\uff0c\u4fdd\u8bc1\u6570\u636e\u5728\u4f20\u8f93\u8fc7\u7a0b\u4e2d\u4e0d\u88ab\u7a83\u53d6\u6216\u7be1\u6539\u3002</p> </li> </ul> <p><code>SSL</code> \u5df2\u7ecf\u88ab\u5f03\u7528\u4e86\u3002\u73b0\u5728\u7684\u5b89\u5168\u534f\u8bae\u90fd\u662f\u57fa\u4e8e <code>TLS</code> \u7684\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u73b0\u5728\u7684\u6d4f\u89c8\u5668\u90fd\u5f3a\u5236\u4f7f\u7528<code>TLS1.2</code>\u53ca\u4ee5\u4e0a\u7684\u7248\u672c\u534f\u8bae\u4e86</p>"},{"location":"CS-courses/CN/Http/#tls","title":"TLS \u7684\u63e1\u624b\u8fc7\u7a0b","text":"<p><code>TLS shakehand</code> \u662f\u5efa\u7acb\u5b89\u5168\u8fde\u63a5\u7684\u8fc7\u7a0b\uff0c\u5728\u63e1\u624b\u7684\u8fc7\u7a0b\u4e2d\u4f1a\u6709\u4ee5\u4e0b\u7684\u51e0\u79cd\u989d\u5916\u7684\u64cd\u4f5c:</p> <ul> <li>\u534f\u5546\u52a0\u5bc6\u7b97\u6cd5</li> <li>\u9a8c\u8bc1\u8eab\u4efd</li> <li>\u4ea4\u6362\u5bc6\u94a5</li> </ul> <ul> <li>\u8eab\u4efd\u9a8c\u8bc1 (Authentication) : \u670d\u52a1\u5668\u5411\u5ba2\u6237\u7aef\u8bc1\u660e\u81ea\u5df1\u7684\u8eab\u4efd\u7684\u771f\u4f2a\u5408\u6cd5\u6027</li> <li>\u5bc6\u94a5\u4ea4\u6362 (Key Exchange) : \u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u4e4b\u95f4\u4ea4\u6362\u5bc6\u94a5\uff0c\u7528\u4e8e\u52a0\u5bc6\u548c\u89e3\u5bc6\u6570\u636e</li> <li>\u5b89\u5168\u52a0\u5bc6 (Secure Encryption) : \u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u4e4b\u95f4\u7684\u901a\u4fe1\u662f\u52a0\u5bc6\u7684\uff0c\u4fdd\u8bc1\u6570\u636e\u7684\u5b89\u5168\u6027</li> <li>\u6570\u636e\u5b8c\u6574\u6027 (Data Integrity) : \u4fdd\u8bc1\u6570\u636e\u5728\u4f20\u8f93\u7684\u8fc7\u7a0b\u4e2d\u4e0d\u88ab\u7be1\u6539</li> </ul>"},{"location":"CS-courses/CN/Http/#_2","title":"\u9762\u8bd5\u771f\u9898","text":""},{"location":"CS-courses/CN/Http/#q1-http","title":"Q1 HTTP\u4e3a\u4ec0\u4e48\u4e0d\u5b89\u5168?","text":"<p><code>HTTP(HyperText Transfer Protocol)</code> \u8d85\u6587\u672c\u4f20\u8f93\u534f\u8bae\uff0c\u5b83\u662f\u660e\u6587\u4f20\u8f93\u7684\uff0c\u7f3a\u4e4f\u4e86\u52a0\u5bc6\u548c\u8eab\u4efd\u9a8c\u8bc1\u673a\u5236\u3002\u6240\u4ee5\u5728\u4f20\u8f93\u7684\u8fc7\u7a0b\u4e2d\u53ef\u80fd\u4f1a\u51fa\u73b0\u4ee5\u4e0b\u7684\u51e0\u79cd\u60c5\u51b5:</p> <ul> <li>\u7a83\u542c : \u56e0\u4e3a\u662f\u660e\u6587\u4f20\u8f93\uff0c\u5b83\u7684\u5185\u5bb9\u90fd\u4f1a\u66b4\u9732\u5728\u7f51\u7edc\u4e0a\uff0c\u6240\u4ee5\u6709\u53ef\u80fd\u88ab\u7a83\u542c</li> <li>\u7be1\u6539 : \u4f20\u8f93\u8fc7\u7a0b\u4e2d\uff0c\u6709\u53ef\u80fd\u88ab\u7be1\u6539\uff0c\u6bd4\u5982\u5728\u4f20\u8f93\u8fc7\u7a0b\u4e2d\uff0c\u6709\u4eba\u628a\u4f60\u7684\u8bf7\u6c42\u6216\u8005\u54cd\u5e94\u7ed9\u7be1\u6539\u4e86\u3002\u5c31\u6bd4\u5982\u8bf4\u5f3a\u884c\u7684\u5f80\u5185\u5bb9\u4e2d\u63d2\u5165\u75c5\u6bd2\u5e7f\u544a</li> <li>\u5192\u5145 : \u6bd4\u5982\u5192\u5145\u6dd8\u5b9d\u7f51\u7ad9 <code>https://www.taobao.com</code> \u548c <code>http://www.taobao.com</code> \u4e24\u4e2a\u7f51\u7ad9\uff0c\u8fd9\u4e24\u4e2a\u7f51\u7ad9\u7684\u5185\u5bb9\u662f\u4e00\u6837\u7684\uff0c\u4f46\u662f\u4e00\u4e2a\u662f\u5047\u7684\uff0c\u4e00\u4e2a\u662f\u771f\u7684\u3002\u8fd9\u6837\u5c31\u4f1a\u9020\u6210\u7528\u6237\u7684\u4fe1\u606f\u6cc4\u9732\u3002</li> </ul> <p>\u4e0b\u9762\u4e3e\u4e86\u4e00\u4e2a\u5173\u4e8e <code>http</code> \u5bb9\u6613\u88ab\u5192\u5145\u7684\u4f8b\u5b50:</p> <p>\u5047\u8bbe\u5c0f\u660e\u60f3\u8bbf\u95ee\u6dd8\u5b9d\uff0c\u7136\u540e\u641c\u7d22\u4e86<code>http://www.taobao.com</code> \u8fd9\u4e2a\u7f51\u5740\u3002\u7531\u4e8e\u662f\u660e\u6587\u4f20\u8f93\u7684\uff0c\u4f60\u53d1\u8d77\u7684\u7f51\u7edc\u8bf7\u6c42\u5c31\u4f1a\u88ab\u622a\u83b7\uff0c\u7136\u540e\u88ab\u7be1\u6539\u3002\u8fd9\u6837\u5c31\u4f1a\u9020\u6210\u7528\u6237\u7684\u4fe1\u606f\u6cc4\u9732\u3002\u653b\u51fb\u8005\u8fdb\u884c\u4e86 <code>DNS\u52ab\u6301</code>,\u628a\u7528\u6237\u7684\u8bf7\u6c42\u6307\u5411\u4e86\u4e00\u4e2a\u5047\u8bbe\u7684\u6dd8\u5b9d\u7f51\u7ad9\uff0c\u8fd9\u6837\u5c31\u4f1a\u9020\u6210\u7528\u6237\u7684\u4fe1\u606f\u6cc4\u9732\u3002 \u8fd9\u91cc\u5176\u5b9e\u53ef\u4ee5\u6bd4\u8f83\u597d\u7406\u89e3\u7684\u4e3a\u4e00\u79cd\u91cd\u5b9a\u5411(redirect)\u5230\u4e86\u4e00\u4e2a\u5047\u7684\u8d2d\u7269\u7f51\u7ad9\uff0c\u53ef\u4ee5\u548c\u6dd8\u5b9d\u5f88\u50cf\uff0c\u6240\u4ee5\u7528\u6237\u5c31\u4f1a\u88ab\u9a97\u3002</p>"},{"location":"CS-courses/CN/Http/#q2-https-http","title":"Q2 HTTPS \u548c HTTP \u7684\u533a\u522b?","text":"<p>\u6211\u4eec\u8fd9\u91cc\u63d0\u4e00\u4e0b <code>HTTPS</code>\uff0c\u5176\u5b9e\u5c31\u662f\u5728 <code>HTTP</code> \u534f\u8bae\u7684\u57fa\u7840\u4e0a\u52a0\u4e0a\u4e86 <code>SSL</code> \u6216\u8005 <code>TLS</code> \u534f\u8bae\uff0c\u4e5f\u5c31\u662f\u8bf4\u5728 <code>HTTP</code> \u7684\u57fa\u7840\u4e0a\u52a0\u4e0a\u4e86\u52a0\u5bc6\u548c\u8eab\u4efd\u9a8c\u8bc1\u673a\u5236\u3002\u8fd9\u6837\u5c31\u53ef\u4ee5\u89e3\u51b3 <code>HTTP</code> \u660e\u6587\u4f20\u8f93\u7684\u95ee\u9898\u3002  </p> <p>\u7b2c\u4e00\u70b9\uff0c<code>HTTPS</code> \u8fdb\u884c\u4e86\u76f8\u5bf9\u5e94\u7684\u4fdd\u62a4</p> <p>\u9488\u5bf9\u4e0a\u8ff0\u8bb2\u7684\u4e09\u70b9\uff0c\u6211\u4eec\u7684<code>HTTPS</code>\u63d0\u4f9b\u4e86\u76f8\u5bf9\u5e94\u7684\u4fdd\u62a4 :</p> <ul> <li>\u4fe1\u606f\u52a0\u5bc6: \u4ea4\u4e92\u7684\u4fe1\u606f\u65e0\u6cd5\u88ab\u7a83\u53d6\uff0c\u56e0\u4e3a\u662f\u8fdb\u884c\u79d8\u6587\u8fdb\u884c\u4f20\u8f93\u7684</li> <li>\u6821\u9a8c\u673a\u5236: \u56e0\u4e3a\u6211\u4eec\u4e0a\u9762\u63d0\u5230\u4e86\u53ef\u80fd\u4f1a\u88ab\u6076\u610f\u7be1\u6539\u5185\u5bb9\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u6821\u9a8c\u673a\u5236\uff0c\u6765\u786e\u4fdd\u5185\u5bb9\u7684\u5b8c\u6574\u6027</li> <li>\u8eab\u4efd\u9a8c\u8bc1: \u901a\u8fc7\u8bc1\u4e66\u7684\u65b9\u5f0f\u6765\u9a8c\u8bc1\u670d\u52a1\u5668\u7684\u8eab\u4efd\uff0c\u786e\u4fdd\u662f\u771f\u5b9e\u7684\u670d\u52a1\u5668\uff0c\u800c\u4e0d\u662f\u5192\u5145\u7684\u3002</li> </ul> <p>\u7b2c\u4e8c\u70b9\uff0c\u4e8c\u8005\u7684\u9ed8\u8ba4\u7aef\u53e3\u662f\u4e0d\u4e00\u6837\u7684 :</p> <ul> <li><code>http</code> \u7684\u9ed8\u8ba4\u7aef\u53e3\u662f <code>80</code></li> <li><code>https</code> \u7684\u9ed8\u8ba4\u7aef\u53e3\u662f <code>443</code></li> </ul> <p>\u7b2c\u4e09\u70b9\uff0c\u5728\u4f20\u8f93\u7684\u8fc7\u7a0b\u4e2d\uff0c<code>HTTPS</code> \u4e0d\u4ec5\u4ec5\u9700\u8981<code>TCP</code>\u7684\u4e09\u6b21\u63e1\u624b\uff0c\u8fd8\u9700\u8981<code>SSL</code>\u7684\u63e1\u624b\uff0c\u624d\u80fd\u8fdb\u5165\u62a5\u6587\u7684\u52a0\u5bc6\u9636\u6bb5, \u6240\u4ee5\u5728\u5efa\u7acb\u8fde\u63a5\u7684\u65f6\u5019\uff0c\u4f1a\u6bd4<code>HTTP</code>\u6162\u4e00\u4e9b\u3002</p> <p>\u7b2c\u56db\u70b9 <code>HTTPS</code> \u9700\u8981\u5411 <code>CA</code> \u673a\u6784\u7533\u8bf7\u8bc1\u4e66\uff0c\u800c\u4e14\u9700\u8981\u4e00\u5b9a\u7684\u8d39\u7528\uff0c\u6240\u4ee5\u76f8\u5bf9\u6765\u8bf4\uff0c<code>HTTPS</code> \u7684\u6210\u672c\u4f1a\u6bd4\u8f83\u9ad8\u4e00\u4e9b\u3002</p>"},{"location":"CS-courses/CN/TCP/","title":"TCP/IP","text":""},{"location":"CS-courses/CN/TCP/#introduction-tcpip","title":"Introduction TCP/IP \u534f\u8bae","text":"<p>\u5176\u5b9e\u6307\u4ee3\u7684\u662f\u5229\u7528IP\u8fdb\u884c\u901a\u4fe1\u65f6\u5019\u6240\u5fc5\u987b\u4f7f\u7528\u7684\u534f\u8bae\u7fa4\u7684\u7edf\u79f0 - \u5b9a\u4e49\uff1a \u5177\u4f53\u6765\u8bf4\uff0cIP \u6216 ICMP \uff0cTCP \u6216 UDP\uff0cTELNET \u6216FTP\uff0c\u4ee5\u53caHTTP\u7b49\u90fd\u662f\u5c5e\u4e8eTCP/IP\u7684\u534f\u8bae\uff0c\u4ed6\u4eec\u4e0eTCP\u6216IP\u5173\u7cfb\u7d27\u5bc6\uff0c\u56e0\u6b64\u4e5f\u6709\u53eb\u505a TCP/IP\u4e3a\u7f51\u9645\u534f\u8bae\u65cf\u3002</p> <p></p> <ul> <li>\u4f20\u8f93\u5c42 -&gt; It is called Segment</li> <li>\u7f51\u7edc\u5c42 -&gt;It is called Packet </li> <li>\u6570\u636e\u94fe\u8def\u5c42 -&gt; It is called Frame</li> </ul>"},{"location":"CS-courses/CN/TCP/#_1","title":"\u7f51\u7edc\u5c42","text":""},{"location":"CS-courses/CN/TCP/#ip","title":"IP","text":"<p>IP \u5730\u5740 \u6307\u7684\u662f\u5bf9\u65b9\u4e3b\u673a\u7684\u6807\u8bc6\u7b26</p> <ul> <li>\u7531\u4e8e\u8ba1\u7b97\u673a\u7f51\u7edc\u7684\u8bbe\u8ba1\u662f\u5206\u5c42\u8bbe\u8ba1\uff0c\u6781\u5176\u7684\u62bd\u8c61\u4e0e\u5c01\u88c5\uff0c\u8fd9\u5bfc\u81f4\u65e0\u8bba\u6570\u636e\u94fe\u8def\u5c42\u662f\u600e\u4e48\u4f20\u64ad\u7684\uff0c\u90fd\u4e0d\u4f1a\u5f71\u54cd\u5230\u4e24\u4e2a\u5229\u7528IP\u5730\u5740\u4f20\u8f93\u7684\u8bbe\u5907\u4f20\u8f93\u8fc7\u7a0b\u3002</li> </ul>"},{"location":"CS-courses/CN/TCP/#_2","title":"\u7279\u70b9","text":"<ul> <li>\u4e0d\u5177\u6709\u91cd\u53d1\u673a\u5236\uff0c\u5373\u4f7f\u662f\u5206\u7ec4\u6570\u636e\u5305\u672a\u80fd\u5230\u8fbe\u5bf9\u7aef\u4e3b\u673a\uff0c\u4e5f\u4e0d\u4f1a\u8fdb\u884c\u91cd\u53d1\uff0c\u56e0\u6b64\u662f \u975e\u53ef\u9760\u6027\u4f20\u8f93\u534f\u8bae</li> </ul>"},{"location":"CS-courses/CN/TCP/#icmp","title":"ICMP","text":"<p>Internet Control Message Protocol \u4e92\u8054\u7f51\u63a7\u5236\u4fe1\u606f\u534f\u8bae</p> <p>\u4f5c\u7528\u662f\u53d1\u9001\u7aef\u7684IP\u6570\u636e\u5728\u53d1\u9001\u9014\u4e2d\u5982\u679c\u9047\u5230\u4e86\u5f02\u5e38\uff0c\u65e0\u6cd5\u6700\u7ec8\u5230\u8fbe\u5bf9\u7aef\uff0c\u90a3\u4e48\u9700\u8981\u7ed9\u53d1\u9001\u7aef\u53d1\u9001ICMP\u7684\u53d1\u751f\u5f02\u5e38\u7684\u901a\u77e5\u3002\u6709\u65f6\u4e5f\u7528\u6765\u8fdb\u884c\u7f51\u7edc\u8bca\u65ad\u5065\u5eb7\u72b6\u51b5\u3002</p> <p>\u56e0\u4e3aIP\u534f\u8bae\u662f\u4e0d\u53ef\u91cd\u4f20\u7684\u534f\u8bae\uff0c\u90a3\u4e48\u5728\u53d1\u751f\u6545\u969c\u65f6\uff0c\u5f88\u81ea\u7136\u7684\u8054\u60f3\u5230\u9700\u8981\u8ba9\u5bf9\u65b9\u77e5\u9053\u6211\u4eec\u54ea\u91cc\u51fa\u9519\u4e86\uff0cICMP\u5c31\u626e\u6f14\u4e86\u8fd9\u4e2a\u89d2\u8272\u3002</p>"},{"location":"CS-courses/CN/TCP/#_3","title":"\u4f20\u8f93\u5c42","text":"<p>\u4f20\u8f93\u5c42\u6700\u91cd\u8981\u7684\u529f\u80fd\u5c31\u662f\u80fd\u591f\u8ba9\u5e94\u7528\u7a0b\u5e8f\u4e4b\u95f4\u5b9e\u73b0\u901a\u4fe1\u3002\u56e0\u4e3a\u53cc\u65b9\u7684\u8ba1\u7b97\u673a\u4e0a\u8fd0\u884c\u7740\u8bb8\u8bb8\u591a\u591a\u7684\u7a0b\u5e8f\uff0c\u90a3\u4e48\u8981\u5206\u6e05\u695a\u6211\u4eec\u662f\u54ea\u51e0\u4e2a\u7a0b\u5e8f\u4e4b\u95f4\u8fdb\u884c\u901a\u4fe1\u5c31\u663e\u5f97\u5c24\u4e3a\u91cd\u8981\u3002\u6240\u4ee5\u7aef\u53e3\u51fa\u73b0\u4e86\u3002</p> <p>\u540c\u65f6\u4f20\u8f93\u5c42\u6709\u4e24\u79cd\u4f20\u8f93\u534f\u8bae TCP (transfer control protocol)\u4f20\u8f93\u63a7\u5236\u534f\u8bae \u4e0e UDP (User Datagram protocol) \u7528\u6237\u6570\u636e\u4f20\u8f93\u534f\u8bae</p> <p>\u53ef\u4ee5\u7b80\u5355\u7684\u7406\u89e3\u4e3a\u9001\u4fe1\u5458\u7ed9A\u5bb6\u9001\u4fe1\uff0c\u7136\u540eA\u5bb6\u4e2d\u6709\u5c0fB\uff0c\u5c0fC\uff0c\u5c0fD \u9001\u4fe1\u5458\u8981\u77e5\u9053\u5b83\u8981\u628a\u90ae\u4ef6\u9001\u7ed9\u8c01\u3002  </p>"},{"location":"CS-courses/CN/TCP/#port","title":"Port \u7aef\u53e3\u53f7","text":"<p>\u4e3a\u4e86\u5206\u6e05\u8fd9\u4e2a\u6570\u636e\u5305\u662f\u53d1\u9001\u7ed9\u8c01/\u8c01\u9700\u8981\u63a5\u6536\uff0c\u5728\u4e00\u4e2a\u5bbf\u4e3b\u673ahost\u4e2d\u7684\u5404\u4e2a\u5e94\u7528\u7a0b\u5e8f\u4e5f\u5c31\u88ab\u5206\u914d\u4e86\u5bf9\u5e94\u7684\u7aef\u53e3\u53f7\u4fbf\u4e8e\u533a\u5206\u3002</p> <p> \u7528\u4e0a\u56fe\u6765\u7b80\u5355\u7684\u8bf4\u660e\uff0c\u5728\u53d1\u9001\u6765\u7684package\u88ab\u63a5\u6536\u4e86\uff0c\u5728\u67d0\u4e2adestination host\u63a5\u6536\u4e86\u8fd9\u4e2a\u6570\u636e\u5305\u7684\u65f6\u5019\uff0c\u4f1a\u89e3\u6784\u5f97\u5230TCPheader\u6587\u4ef6\u4e2d\u7684destination port 80\uff0c\u77e5\u9053\u662f\u53d1\u9001\u7ed980\u7aef\u53e3\u7684SYN\u5305\uff0c\u5c06\u6570\u636e\u8f6c\u53d1\u7ed980\u7aef\u53e3\uff0c\u7136\u540e\u4e00\u76f4\u76d1\u542c\u7740httpd\u7a0b\u5e8f\u5373\u53ef\u3002 \u8fd9\u4e9b\u670d\u52a1\u5668\u7a0b\u5e8f\u5728UNIX\u7cfb\u7edf\u4e2d\u88ab\u79f0\u4e3a\u662f\u5b88\u62a4\u8fdb\u7a0b\uff0c httpd sshd \u542f\u52a8\u4e00\u4e2a\u5c31\u8868\u793a\u5b83\u4eec\u63a5\u6536\u5ba2\u6237\u7aef\u8bf7\u6c42\u7684inetd\uff08\u4e92\u8054\u7f51\u5b88\u62a4\u8fdb\u7a0b\uff09\uff0c\u8d85\u7ea7\u5b88\u62a4\u8fdb\u7a0b\u4f1a\u5728\u63a5\u6536\u5230\u5ba2\u6237\u7aef\u8bf7\u6c42\u4ee5\u540e\u521b\u5efa\u65b0\u7684\u8fdb\u7a0b\u5e76\u8f6c\u5316\u4e3a\u5176\u4ed6\u7684\u5b88\u62a4\u8fdb\u7a0b\u3002</p> <p>TCP \u548c UDP \u4e24\u8005\u5404\u6709\u5229\u5f0a\uff0c\u6ca1\u6709\u8c01\u8bf4\u6709\u7edd\u5bf9\u7684\u4f18\u4e0e\u52a3\uff0c\u53ea\u662f\u5b9e\u7528\u573a\u666f\u4e0d\u540c\uff0c\u7528\u5230\u7684\u65f6\u5019\u4e5f\u4e0d\u540c\u3002</p>"},{"location":"CS-courses/CN/TCP/#_4","title":"\u6570\u636e\u7684\u533a\u5206","text":"<p>\u56e0\u4e3a\u53ef\u80fd\u51fa\u73b0\u4e24\u4e2a\u6570\u636e\u5305\u7684 source port\u548cdestination port \u5b8c\u5168\u76f8\u540c\u7684\u60c5\u51b5\uff0c\u5c31\u4e0d\u80fd\u7b80\u5355\u7684\u901a\u8fc7\u7aef\u53e3\u53f7\u6765\u533a\u5206\uff0c\u6709\u7684\u65f6\u5019\u751a\u81f3\u4e24\u4e2aIP\u5730\u5740\u4e5f\u90fd\u662f\u5b8c\u5168\u4e00\u6837\u7684\uff0c\u4f46\u662f\u6240\u7528\u7684\u4f20\u8f93\u534f\u8bae\u4e0d\u4e00\u6837\uff0c\u53ef\u80fd\u662fTCP\u4e5f\u53ef\u80fd\u662fUDP\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u8981\u4fdd\u8bc15\u6837\u4e1c\u897f\u5b8c\u5168\u4e00\u6837\uff0c\u624d\u80fd\u8bf4\u660e\u662f\u4e00\u4e2a\u901a\u4fe1\u3002</p> <ul> <li>\u6e90IP\u5730\u5740</li> <li>\u76ee\u6807IP\u5730\u5740</li> <li>\u534f\u8bae\u53f7 TCP/UDP</li> <li>\u6e90\u7aef\u53e3\u53f7</li> <li>\u76ee\u6807\u7aef\u53e3\u53f7</li> </ul>"},{"location":"CS-courses/CN/TCP/#_5","title":"\u5982\u4f55\u5b9a\u4e49\u7aef\u53e3\u53f7","text":""},{"location":"CS-courses/CN/TCP/#_6","title":"\u6807\u51c6\u65e2\u5b9a\u7aef\u53e3\u53f7","text":"<p>\u4e5f\u5c31\u662f\u8bf4\u6bcf\u4e2a\u5e94\u7528\u7a0b\u5e8f\u90fd\u662f\u6709\u5b83\u65e2\u5b9a\u7684\u7aef\u53e3\u53f7\uff0c\u5c24\u5176\u662f\u4e00\u4e9bHTTP,TELNET,FTP\u7b49\u7684\u7aef\u53e3\u53f7\u90fd\u662f\u56fa\u5b9a\u7684\u3002(Well-Known Port Number)</p>"},{"location":"CS-courses/CN/TCP/#_7","title":"\u65f6\u5e8f\u5206\u914d\u6cd5","text":"<p>\u5982\u679c\u8bf4\u4e0a\u9762\u7684\u5206\u914d\u65b9\u6cd5\u662f\u9759\u6001\u7684\uff0c\u90a3\u4e48\u8fd9\u79cd\u65b9\u6cd5\u5c31\u662fDynamic\u52a8\u6001\u5206\u914d\u3002\u6b64\u65f6\u670d\u52a1\u7aef\u6709\u5fc5\u8981 \u786e\u5b9a\u76d1\u542c\u7aef\u53e3\u53f7\uff0c\u4f46\u662f\u63a5\u6536\u670d\u52a1\u7684\u5ba2\u6237\u7aef\u6ca1\u5fc5\u8981\u786e\u5b9a\u7aef\u53e3\u53f7\u3002\u53ef\u4ee5\u7b49\u7740\u8ba9\u64cd\u4f5c\u7cfb\u7edf\u6765\u5206\u914d\uff0c\u8fd9\u6837\u64cd\u4f5c\u7cfb\u7edf\u5c31\u53ef\u4ee5\u52a8\u6001\u7684\u7ba1\u7406\u7aef\u53e3\u53f7\u4e86\u3002</p>"},{"location":"CS-courses/CN/TCP/#tcp","title":"TCP","text":"<p>Transfer Control Protocol</p> <p>TCP\u534f\u8bae\u662f\u4e00\u79cd\u9762\u5411\u6709\u8fde\u63a5\u7684\u4f20\u8f93\u5c42\u534f\u8bae\uff0c\u4ec0\u4e48\u662f\u6709\u8fde\u63a5\u5462\uff1f\u5c31\u662f\u8868\u793a\u7684\u662f\u6211\u4eec\u8981\u65f6\u523b\u8ddf\u8e2a\u4fe1\u606f\u7684\u4f20\u8f93\uff0c\u8981\u4e0d\u65ad\u7684\u7ed9\u53d1\u9001\u7aef\u8fdb\u884c\u76f8\u5e94 \u4e5f\u5c31\u662f sender \u548c receiver \u4e4b\u95f4\u662f\u9700\u8981\u4e92\u76f8\u53d1\u9001\u6d88\u606f\u786e\u8ba4\u8ddf\u8fdb\u6d88\u606f\u8fdb\u5ea6\u7684\u3002\u53ef\u4ee5\u6b63\u786e\u7684\u5904\u7406\u4e22\u5305/\u4e71\u5e8f/\u91cd\u4f20\u7684\u95ee\u9898\u3002\u4f46\u662f\u4e3a\u4e86\u5efa\u7acb\u4e0e\u65ad\u5f00\u94fe\u63a5\uff0c\u9700\u8981\u81f3\u5c117\u6b21\u7684\u53d1\u5305\u548c\u6536\u5305\uff0c\u5bfc\u81f4\u7f51\u7edc\u6d41\u7684\u6d6a\u8d39\uff0c\u56e0\u6b64\u4e0d\u592a\u9002\u5408\u7528\u5728\u89c6\u9891\u4f1a\u8bae\u8fd9\u79cd\u65b9\u9762\u3002</p>"},{"location":"CS-courses/CN/TCP/#_8","title":"\u7279\u70b9","text":"<ul> <li>\u53ef\u9760</li> <li>\u9762\u5411\u8fde\u63a5\u7684\u4f20\u8f93</li> <li>\u81ea\u63a7\u5236\uff0c\u6307\u7684\u662f\u4e0d\u9700\u8981\u5e94\u7528\u7a0b\u5e8f\u8003\u8651\uff0c\u5e94\u7528\u7a0b\u5e8f\u5728\u63a5\u6536\u6570\u636epackage\u7684\u65f6\u5019\u5c31\u5df2\u7ecf\u9ed8\u8ba4\u662f\u6b63\u786e\u5904\u7406\u8fc7\u7684\u6570\u636e\u4e86\u3002</li> <li>\u4f46\u662f\u6162\uff0c\u4e0d\u80fd\u7528\u4e8e\u5373\u65f6\u6027\u5f88\u9ad8\u7684\u4fe1\u606f\u4f20\u8f93</li> </ul>"},{"location":"CS-courses/CN/TCP/#tcp_1","title":"TCP\u673a\u5236","text":"<p>ack \u786e\u8ba4\u5e94\u7b54 (acknowledge)</p> <p>\u4e5f\u5c31\u662f\u8bf4\uff0cTCP\u5728\u4e24\u4e2a\u5bf9\u8c61\u5efa\u7acb\u8d77\u901a\u4fe1\u7684\u65f6\u5019\uff0c\u4f1a\u5f62\u6210\u7c7b\u4f3c\u5bf9\u8bdd\u4e00\u6837\u7684\u534f\u8bae\uff0c\u4f60\u53d1\u4ec0\u4e48\uff0c\u5bf9\u65b9\u5c31\u8981\u7ed9\u4f60\u5e94\u7b54\u4ec0\u4e48\uff0c\u76f4\u5230\u4f60\u63a5\u6536\u5230\u4e86\u8fd9\u4e2aack\u6807\u5fd7\uff0c\u8bf4\u660e\u4e4b\u524d\u7684\u4fe1\u606f\u5df2\u7ecf\u6210\u529f\u7684\u63a5\u6536\u5230\u4e86\u3002\u5728\u4e00\u6bb5\u65f6\u95f4\u5185\u6ca1\u6709\u6536\u5230\u4fe1\u606f\u56de\u590d\uff0c\u5c31\u8bf4\u660e\u9700\u8981\u91cd\u65b0\u53d1\u9001(RTO)\u3002\u8fd9\u91ccCS144\u7684lab\u91cc\u505a\u8fc7\u3002\u5177\u4f53\u673a\u5236\u4e0d\u7ec6\u8bb2</p>"},{"location":"CS-courses/CN/TCP/#_9","title":"\u5982\u4f55\u786e\u8ba4\u91cd\u53d1\u8d85\u65f6\u5462\uff1f","text":"<p>\u91cd\u53d1\u8d85\u65f6\u662f\u6307\u5728\u91cd\u53d1\u6570\u636e\u4e4b\u524d\uff0c\u7b49\u5f85\u786e\u8ba4\u5e94\u7b54\u5230\u6765\u7684\u90a3\u4e2a\u7279\u5b9a\u7684\u65f6\u95f4\u95f4\u9694\uff08RTO\uff09\uff0c\u5f53\u65f6\u95f4\u8d85\u8fc7\u4e86RTO\u5219\u8bf4\u660e\u8981\u91cd\u65b0\u53d1\u9001\u8fd9\u4e2a\u6570\u636e\uff0c\u5f53\u91cd\u53d1\u7684\u6b21\u6570\u8d85\u8fc7\u4e00\u5b9a\u6570\u91cf\uff0c\u5c31\u4f1a\u81ea\u52a8\u7684\u505c\u6b62\u8fde\u63a5\uff0c\u5e76\u4e14\u901a\u77e5\u5e94\u7528\u901a\u4fe1\u5f02\u5e38\u5f3a\u5236\u7ec8\u6b62\u3002</p>"},{"location":"CS-courses/CN/TCP/#tcp_2","title":"TCP\u8fde\u63a5\u7684\u4e09\u6b21\u63e1\u624b","text":"<p>Tips\uff1a \u4e09\u6b21\u63e1\u624b\u6307\u7684\u662f\uff0c\u6211\u4eec\u5728\u5efa\u7acbTCP\u8fde\u63a5\u7684\u8fc7\u7a0b\uff0c\u9700\u8981\u53d1\u90013\u4e2a\u5305 (\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u4e4b\u95f4\u7684\u4e92\u76f8\u53d1\u9001\u603b\u5171\u4e09\u6b21)\uff0c\u5206\u522b\u662f SYN,SYN+ACK,ACK \u6765\u786e\u5b9a\uff0c\u5728\u6b64\u671f\u95f4\uff0c\u6211\u4eec\u90fd\u9700\u8981\u7b49\u5f85\u670d\u52a1\u5668\u7ed9\u4f60acknowledge\u6765\u786e\u8ba4\u662f\u5426\u6210\u529f\u63a5\u53d7\u3002\u5b8c\u6210\u4e86\u4e09\u6b21\u63e1\u624b\u624d\u7b97\u771f\u6b63\u7684\u5b8c\u6210\u4e86TCP\u4e00\u4e2a\u5b8c\u6574\u7684\u8fc7\u7a0b\u3002 \u5728\u4e09\u6b21\u63e1\u624b\u7684\u8fc7\u7a0b\u4e2d\uff0c\u4e0d\u4ec5\u4ec5\u662f\u544a\u8bc9\u4e86\u5b8c\u6210\u4e86TCP\u8fde\u63a5\u7684\u5efa\u7acb\uff0c\u5176\u5b9e\u4e5f\u662f\u4f1a\u5305\u542b\u4e00\u4e9b\u5143\u4fe1\u606f\uff0c\u6bd4\u5982MSS(Maximum Segment Size)\u6700\u5927\u6d88\u606f\u957f\u5ea6\u7b49\u7b49\uff0c\u4e00\u4e9b\u8fde\u63a5\u4e4b\u95f4\u7684\u6d88\u606f\u4f20\u8f93\u89c4\u8303\u90fd\u4f1a\u5305\u542b\u5728\u670d\u52a1\u5668\u53d1\u6765\u7684\u5305\u4e2d</p> <p></p>"},{"location":"CS-courses/CN/TCP/#tcp_3","title":"TCP\u8fde\u63a5\u7684\u56db\u6b21\u6325\u624b","text":"<p>TCP\u7684\u56db\u6b21\u6325\u624b\u548c\u4e09\u6b21\u63e1\u624b\u672c\u8d28\u4e00\u6837\uff0c\u5176\u5b9e\u5c31\u662f\u5e94\u7b54\u4ea4\u4e92\u3002\u90a3\u4e48\u56db\u6b21\u6325\u624b\u5c31\u662f\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u7aef\u4e4b\u95f4\u53d1\u90014\u4e2a\u5305\u8fdb\u884c\u65ad\u5f00\u8fde\u63a5\u7684\u786e\u8ba4\u3002</p> <ul> <li>FIN \u7b2c\u4e00\u6b21\u6325\u624b\uff0c\u662f\u5ba2\u6237\u7aef\u5411\u670d\u52a1\u7aef\u8fdb\u884c\u6325\u624b\u3002\u53d1\u51fa\u65ad\u5f00\u8fde\u63a5\u7684\u8bf7\u6c42</li> <li>ACK \u7b2c\u4e8c\u6b21\u6325\u624b\uff0c\u662f\u670d\u52a1\u5668\u7aef\u5411\u5ba2\u6237\u7aef\u8fdb\u884c\u7684\u6325\u624b\uff0c\u53d1\u51fa\u8bf7\u6c42\u7684\u5e94\u7b54\uff0c\u540c\u610f\u65ad\u5f00\u8fde\u63a5\u3002</li> <li>FIN \u7b2c\u4e09\u6b21\u6325\u624b\uff0c\u662f\u670d\u52a1\u5668\u5411\u5ba2\u6237\u7aef\u7684\u6325\u624b\uff0c\u53d1\u51fa\u8bf7\u6c42\uff0c\u8ba9\u5ba2\u6237\u7aef\u53ef\u4ee5\u8fdb\u884c\u65ad\u5f00\u8fde\u63a5\u4e86\u3002</li> <li>ACK \u7b2c\u56db\u6b21\u6325\u624b\uff0c\u662f\u5ba2\u6237\u7aef\u5411\u670d\u52a1\u5668\u7aef\u8fdb\u884c\u7684\u6325\u624b\uff0c\u8868\u793a\u7684\u662f\u540c\u610f\u4e86\u8bf7\u6c42\uff0c\u6b63\u5f0f\u65ad\u5f00\u8fde\u63a5\u3002</li> </ul>"},{"location":"CS-courses/CN/TCP/#_10","title":"\u6ed1\u52a8\u7a97\u53e3\u673a\u5236","text":"<p>\u56e0\u4e3a\u5982\u679c\u6211\u4eec\u6bcf\u6b21\u53ea\u53d1\u4e00\u4e2a\u6bb5\uff0c\u8fd8\u8981\u7b49\u5f85\u5b8c\u6210\u5e94\u7b54\u4e4b\u540e\u624d\u80fd\u7ee7\u7eed\u53d1\u9001\uff0c\u8fd9\u6837\u4f1a\u5728\u7f51\u7edc\u62e5\u5835\u7684\u65f6\u5019\u9020\u6210\u6027\u80fd\u5927\u5e45\u4e0b\u964d\u3002\u56e0\u4e3a\u4f1a\u7531\u4e8e\u7b49\u5f85\u7684\u65f6\u95f4\u5ef6\u957f\u800c\u4e0b\u964d\u3002\u6211\u4eec\u8fd9\u91cc\u8003\u8651\u5f00\u4e2a\u7a97\u53e3\u65e0\u9700\u7b49\u5f85\u786e\u8ba4\u5e94\u7b54\u800c\u53ef\u4ee5\u7ee7\u7eed\u53d1\u9001\u6570\u636e\u7684\u6700\u5927\u503c\uff0c\u540c\u65f6\u7a97\u53e3\u4e2d\u8981\u8bb0\u5f97\u4fdd\u7559\u7a97\u53e3\u5185\u7684\u6570\u636e\u76f4\u5230\u63a5\u6536\u5230\u4e86\u6210\u529f\u4f20\u8f93\u7684\u5e94\u7b54\u7684\u65f6\u5019\u624d\u53ef\u4ee5\u505c\u6b62\u3002</p> <p>\u6bd4\u5982\u4e0a\u56fe\uff0c\u6211\u4eec\u8bbe\u7f6e\u4e86\u4e00\u4e2a\u7a97\u53e3\uff0c\u5b83\u67094\u4e2a\u6bb5\u3002\u6bcf\u6210\u529f\u63a5\u6536\u5230\u4e86\u4e00\u4e2a\u6570\u636e\u5e94\u7b54\u7684\u65f6\u5019\u5c31\u8fdb\u884c\u6ed1\u52a8\u7a97\u53e3\u3002</p>"},{"location":"CS-courses/CN/TCP/#_11","title":"\u6ed1\u52a8\u7a97\u53e3\u7684\u7a97\u53e3\u63a7\u5236\u4e0e\u91cd\u53d1","text":"<ul> <li> <p>case1 \u5e94\u7b54\u672a\u80fd\u8fd4\u56de\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u6570\u636e\u5df2\u7ecf\u8fbe\u5230\u4e86\u5bf9\u7aef\uff0c\u90a3\u4e48\u6211\u4eec\u4e5f\u4e0d\u9700\u8981\u91cd\u53d1\u3002\u5728\u5229\u7528\u4e86\u7a97\u53e3\u63a7\u5236\u4e4b\u540e\uff0c\u6709\u4e9b\u6570\u636e\u6ca1\u6709\u5f97\u5230\u5e94\u7b54\u4e5f\u4e0d\u7528\u91cd\u53d1\uff0c\u56e0\u4e3a\u5728TCP\u534f\u8bae\u4e2d\uff0c\u6211\u4eec\u4f1a\u6709\u4e00\u4e2areassembler\u90e8\u5206\uff0c\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u5f97\u5230\u7684\u662f\u670d\u52a1\u5668\u5df2\u7ecf\u63a5\u6536\u5230\u7684\u6570\u636e\u6210\u529f\u987a\u5e8f\u6392\u5e8f\u7684\u7ed3\u679c\uff0c\u6bd4\u5982\u6ca1\u6709\u6536\u52301001\u7684\u6570\u636e\u5e94\u7b54\uff0c\u4f46\u662f\u6536\u5230\u4e862001\u7684\u6570\u636e\u5e94\u7b54\uff0c\u5c31\u8bf4\u660e\u670d\u52a1\u7aef\u5df2\u7ecf\u63a5\u6536\u5230\u4e861001\uff0c\u53ea\u662f\u56e0\u4e3a\u67d0\u79cd\u539f\u56e0\uff0c\u53d1\u56de\u7684\u5e94\u7b54\u6ca1\u6709\u6536\u5230\uff0c\u8fd9\u79cd\u65f6\u5019\u5c31\u5e94\u8be5\u76f4\u63a5\u628a2001\u4e4b\u524d\u7684buffer\u4e2d\u7684\u6570\u636e\u8fdb\u884c\u6e05\u9664\u3002</p> </li> <li> <p>case2 \u5f53\u7a97\u53e3\u6bd4\u8f83\u5927\u7684\u65f6\u5019\uff0c\u8fd9\u65f6\u5019\u6211\u4eec\u7684\u63a5\u6536\u5230\u7684\u5e94\u7b54\u5982\u679c\u8d85\u8fc7\u4e863\u6b21\uff0c\u90fd\u9700\u89811001\u7684\u62a5\u6587\u8fdb\u884c\u91cd\u53d1\uff0c\u8fd9\u65f6\u5019\u5c31\u9700\u8981\u5c061001\u5e8f\u53f7\u7684\u62a5\u6587\u8fdb\u884c\u91cd\u53d1\u4e86\u3002</p> </li> </ul>"},{"location":"CS-courses/CN/TCP/#udp","title":"UDP","text":"<p>User Datagram Protocol</p>"},{"location":"CS-courses/CN/TCP/#introduction","title":"Introduction","text":"<p>UDP\u6709\u522b\u4e8eTCP\uff0c\u662f\u4e00\u79cd\u9762\u5411\u65e0\u8fde\u63a5\u7684\u4f20\u8f93\u534f\u8bae\uff0c\u4e0d\u4f1a\u8003\u8651\u5bf9\u65b9\u662f\u5426\u771f\u7684\u6536\u5230\u4e86\u53d1\u9001\u8fc7\u53bb\u7684\u6570\u636e\uff0c\u53ea\u8d1f\u8d23\u53d1\u9001\u3002\u90a3\u4e48\u68c0\u9a8c\u7684\u5de5\u4f5c\u5c31\u4ea4\u7ed9\u5e94\u7528\u7a0b\u5e8f\u89e3\u51b3\uff0c\u5c31\u662f\u7b80\u5355\u7684\u6765\u8bf4\u5b83\u5f88\u7eaf\u7cb9\uff0c\u4e00\u6b21\u53ea\u5e72\u4e00\u4ef6\u4e8b\uff0c\u90a3\u5c31\u662f\u8d1f\u8d23\u628a\u6570\u636e\u4f20\u51fa\u53bb\uff0c\u5c31OK\u4e86\u3002</p>"},{"location":"CS-courses/CN/TCP/#_12","title":"\u7279\u70b9","text":"<ul> <li>\u7b80\u5355\u9ad8\u6548</li> <li>\u9762\u5411\u65e0\u8fde\u63a5</li> <li>\u53ef\u4ee5\u968f\u65f6\u7684\u53d1\u9001\u6570\u636e</li> </ul>"},{"location":"CS-courses/CN/TCP/#_13","title":"\u4f7f\u7528\u573a\u666f \uff08\u5305\u5c11/\u5373\u65f6\uff09","text":"<ul> <li>\u5305\u603b\u91cf\u8f83\u5c11\u7684\u901a\u4fe1DNS,SNMP</li> <li>\u89c6\u9891/\u97f3\u9891\u7b49\u591a\u5a92\u4f53\u5373\u65f6\u901a\u4fe1</li> <li>\u9650\u5b9a\u4e8eLAN\u7b49\u7279\u5b9a\u7f51\u7edc\u4e2d\u7684\u5e94\u7528\u901a\u4fe1</li> <li>\u5e7f\u64ad\u901a\u4fe1</li> </ul>"},{"location":"CS-courses/CN/TCP/#tcp-header-file-format","title":"TCP \u9996\u90e8\u683c\u5f0f(header file format)","text":"<p>\u9996\u5148\u662f\u4e3a\u4ec0\u4e48\u662f32\u4f4d\uff1f</p> <p>\u56e0\u4e3a\uff0c\u5018\u82e5\u662f64\u4f4d\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u8fd1\u4f3c\u65e0\u9650\u5927\uff0c\\(2^{64}\\)\u6765\u8868\u793a\u5b57\u8282\u7684\u7d22\u5f15\u5b9e\u5728\u662f\u6709\u70b9\u6d6a\u8d39\u4e86\uff0c\u56e0\u4e3a\u5bf9\u4e8eTCP\u7684\u9996\u90e8\u6765\u8bf4\u7a7a\u95f4\u662f\u5f88\u5b9d\u8d35\u7684\u3002\u56e0\u6b64\u6211\u4eec\u8003\u8651\u4e86\u4e00\u79cd\\(wrap \\ number\\)\u4e5f\u5c31\u662f32\u4f4d\u3002\u7136\u540e\u8d77\u59cb\u7684\\(SYN\\)\u662f\u968f\u673a\u6570<code>uint32_t</code>\uff0c\u7136\u540e\u8fdb\u884c\u5faa\u73af\u8868\u793a\u7c7b\u4f3c\u4e0b\u56fe\u7684\u8868\u6765\u8868\u793a\u6bd4\u8f83\u6613\u61c2\u3002 </p> <ul> <li>sequence number \u5e8f\u5217\u53f7 \u8868\u793a\u7684\u662f\u53d1\u9001\u6570\u636e\u7684\u4f4d\u7f6e\uff0c\u4e5f\u5c31\u662f\u6ed1\u52a8\u7a97\u53e3\u7684\u5de6\u8fb9\u7f18\u3002</li> <li>Acknowledgement Number \u786e\u8ba4\u5e94\u7b54\u53f7 \u8868\u793a\u7684\u662f\u4e0b\u4e00\u6b21\u5e94\u8be5\u6536\u5230\u7684\u6570\u636e\u7684\u5e8f\u5217\u53f7</li> <li> <p>Data Offset \u6570\u636e\u504f\u79fb \u8868\u793a\u7684\u662fTCP\u6240\u4f20\u8f93\u7684\u6570\u636e\u90e8\u5206\u5e94\u8be5\u4eceTCP\u5305\u7684\u54ea\u4e00\u4f4d\u5f00\u59cb\u8ba1\u7b97\uff0c\u4e5f\u53ef\u4ee5\u770b\u6210\u662fTCP\u9996\u90e8\u957f\u5ea6\u3002</p> </li> <li> <p>checkSum \u6821\u9a8c\u548c \u4f5c\u7528\u662f\u4e00\u79cd\u8fdb\u884c\u8def\u7531\u5668\u5185\u5b58\u6545\u969c\u6216\u7a0b\u5e8f\u6f0f\u6d1e\u5bfc\u81f4\u7684\u6570\u636e\u662f\u5426\u88ab\u7834\u574f\u7684\u4e00\u79cd\u68c0\u67e5\u3002\u56e0\u4e3a\u6570\u636e\u94fe\u8def\u7684FCS\u5df2\u7ecf\u53ef\u4ee5\u68c0\u67e5\u4e86\u5728\u566a\u58f0\u5e72\u6270\u7684\u901a\u4fe1\u9014\u4e2d\u51fa\u73b0\u7684\u4f4d\u9519\u8bef\uff0c\u90a3\u4e48\u8fd9\u91cc\u7684\u6821\u9a8c\u548c\u5c31\u662f\u770b\u534f\u8bae\u9996\u90e8\u548c\u6570\u636e\u662f\u5426\u88ab\u7834\u574f\u3002 \u8fd9\u91cc\u53c2\u8003\u4e0a\u9762\u7684UDPCheckSum</p> </li> <li> <p>Control Flag\u63a7\u5236\u4f4d \u6bcf\u4e00\u4f4d\u90fd\u6709\u4e0d\u540c\u7684\u4f5c\u7528 </p> </li> </ul>"},{"location":"CS-courses/CN/TCP/#udp_1","title":"UDP \u9996\u90e8\u6587\u4ef6","text":"<p>\u5c31\u7b80\u5355\u7684\u6765\u8bf4\uff0cUDP\u7684\u9996\u90e8header\u4e2d\u7684checksum\u662f\u53ef\u9009\u7684\u3002\u5982\u679c\u4e0d\u60f3\u68c0\u67e5\u5c31\u5199\u51680.\u5018\u82e5\u60f3\u68c0\u67e5\uff0c\u90a3\u4e48\u5f88\u7b80\u5355\uff0c\u6211\u4eec\u5c31\u628achecksum\u5b9a\u4e49\u4e3a\u524d\u9762\u6240\u6709segments\u4e4b\u548c\u53d6\u4f59\u4e4b\u540e\u7684\u8865\u7801\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u8ba9\u6240\u6709\u52a0\u8d77\u6765\u7684\u548c\u4e3a\\(4'hFFFF\\)\u4e5f\u5c31\u662f\u5168\u90e8\u4e3a1.\u5728\u68c0\u9a8c\u7684\u65f6\u5019\uff0c\u5982\u679c\u53d1\u73b0\u6709\u4e00\u4f4d\u4e0d\u4e3a1\uff0c\u90a3\u4e48\u5c31\u8bf4\u660e\u5dee\u51fa\u73b0\u4e86\u9519\u8bef\u3002</p> <ul> <li>\u4e3a\u4ec0\u4e48\u8981\u8ba1\u7b97UDP\u4f2a\u9996\u90e8\u7684\u7406\u7531\uff1f \u56e0\u4e3a\u5bf9\u4e8eTCP/IP\u4e2d\u8bc6\u522b\u4e00\u4e2a\u8fdb\u884c\u901a\u4fe1\u7684\u5e94\u7528\u9700\u89815\u5927\u8981\u7d20\uff0c\u4ed6\u4eec\u5206\u522b\u662f<ul> <li>source IP </li> <li>destination IP</li> <li>source Port</li> <li>destination Port</li> <li>protocol number TCP/UDP</li> </ul> </li> </ul>"},{"location":"CS-courses/CN/TCP/#_14","title":"\u5e94\u7528\u5c42","text":"<p>The Application layer here included 3 layers in the OSI </p>"},{"location":"CS-courses/CN/TCP/#www","title":"WWW","text":"<p>\u6d4f\u89c8\u5668\u4e0e\u670d\u52a1\u7aef\u4e4b\u95f4\u901a\u4fe1\u6240\u7528\u7684\u534f\u8bae\u662fHTTP(HyperText Transfer Protocol)\u8d85\u6587\u672c\u4f20\u8f93\u534f\u8bae\uff0c\u800c\u4f20\u8f93\u6570\u636e\u7684\u4e3b\u8981\u683c\u5f0f\u5c31\u662fHTML(HyperText Markup Language)\u8d85\u6587\u672c\u6807\u8bc6\u8bed\u8a00\u3002WWW\u4e2d\u7684HTTP\u5c5e\u4e8eOSI\u5e94\u7528\u5c42\u7684\u534f\u8bae\uff0c\u800cHTML\u5c5e\u4e8e\u8868\u793a\u5c42\u7684\u534f\u8bae\u3002</p>"},{"location":"CS-courses/CN/TCP/#e-mail","title":"E-Mail","text":"<p>SMTP Simple Mail Transfer Protocol</p> <p>\u800c\u7535\u5b50\u90ae\u4ef6\u534f\u8bae\u5728MIME\u534f\u8bae\u7684\u62d3\u5c55\u4e4b\u540e\uff0c\u53ef\u4ee5\u53d1\u9001\u51fa\u4e86\u6587\u672c\u683c\u5f0f\u7684\u7535\u5b50\u90ae\u4ef6\u4e86\uff0c\u800cMIME\u534f\u8bae\u4e5f\u5c5e\u4e8eOSI\u53c2\u8003\u6a21\u578b\u7684\u7b2c\u516d\u5c42----\u8868\u793a\u5c42\u3002</p>"},{"location":"CS-courses/CN/TCP/#ftp","title":"FTP","text":"<p>File Transfer Protocol\u6587\u4ef6\u4f20\u8f93\u534f\u8bae</p> <p>FTP\u8fdb\u884c\u6587\u4ef6\u4f20\u8f93\u7684\u65f6\u5019\u4f1a\u5efa\u7acb\u4e24\u4e2aTCP\u8fde\u63a5\uff0c\u5206\u522b\u662f\u53d1\u51fa\u4f20\u8f93\u8bf7\u6c42\u65f6\u6240\u9700\u8981\u7528\u5230\u7684\u63a7\u5236\u8fde\u63a5\u548c\u5b9e\u9645\u4f20\u8f93\u6240\u8981\u7528\u5230\u7684\u6570\u636e\u8fde\u63a5\uff0c\u5176\u5b9e\u4e5f\u5c31\u662f\u5148\u8981\u53d1\u9001\u4e00\u4e2arequest\u8bf7\u6c42\u548c\u5b9e\u9645\u4f20\u8f93\u3002</p>"},{"location":"CS-courses/CN/TCP/#telnet-ssh","title":"TELNET \u548c SSH","text":"<p>\u8fdc\u7a0b\u767b\u5f55</p>"},{"location":"CS-courses/CN/TCP/#package","title":"Package \u5305\u4f20\u8f93","text":"<p> \u6211\u4eec\u7684\u6570\u636e\u5305\u5176\u5b9e\u662f\u6570\u636e + \u82e5\u5e72\u5934\u6587\u4ef6\uff0c\u56e0\u4e3a\u8ba1\u7b97\u673a\u7f51\u7edc\u662f\u5206\u5c42\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u5728\u6bcf\u4e2a\u5206\u5c42\u4e2d\u90fd\u4f1a\u4e3a\u6570\u636e\u52a0\u4e00\u4e2aheader\u5934\u6587\u4ef6\uff0c\u5305\u542b\u4e86\u8be5\u5c42\u7684\u5fc5\u8981\u6e90\u4fe1\u606f\uff0c\u5982\u53d1\u9001\u76ee\u6807\u5730\u5740\u4ee5\u53ca\u534f\u8bae\u76f8\u5173\u7684\u4fe1\u606f\u3002\u4ece\u4e0b\u4e00\u5c42\u6765\u770b\uff0c\u4e0a\u4e00\u5c42\u6536\u5230\u7684\u5305\u5168\u90e8\u90fd\u88ab\u8ba4\u4e3a\u662f\u672c\u5c42\u7684\u6570\u636e\uff0c\u5305\u62ec\u5176\u4ed6\u5c42\u672a\u89e3\u6784\u7684\u5934\u6587\u4ef6\u3002</p> <p></p>"},{"location":"CS-courses/Courses/CMU-15445/Project0/","title":"Project0 \u5b9e\u9a8c\u62a5\u544a","text":"<p>\u5b9e\u9a8c\u7f51\u5740</p> <p>Do not cheat!</p> <p>My Code for General HLL</p> <p>My Code for Improved HLL</p>"},{"location":"CS-courses/Courses/CMU-15445/Project0/#problem-description","title":"Problem description","text":"<p>This is a problem that we run across in our daily life. We want to count for the number of unique users in the website. The natural method is to list all the users in one list, and check for the duplicates. But it is impossible for the website which we have millions of users. So we need to find a more efficient way to solve this problem.</p>"},{"location":"CS-courses/Courses/CMU-15445/Project0/#problem-introduction","title":"Problem introduction","text":"<p>So this project, we will implement a data structure, HLL(HyperLogLog) to help us solve this problem. The following is the basic idea of the HLL algorithm.</p> <p>From the webiste wiki : The HyperLogLog(HLL) is a probablistic data structure that tracks the cardinality of large data sets. HyperLogLog is suited for scenarios like the above, where the goal is to count the number of unique items in a massive data stream without explicitly storing every item. HLL relies on a clever hashing mechanism and a compact data structure to provide accurate estimates of unique users while using only a fraction of the memory required by traditional methods. This makes HLL an essential tool in modern database analytics.</p> <p>We can clearly know that we must use the Hashing to get the unique users, with the fastest speed and the least memory.</p>"},{"location":"CS-courses/Courses/CMU-15445/Project0/#project-implementaion","title":"Project Implementaion","text":"<p>This Project mainly wanted us to implement the HLL algorithm with 2 versions:</p> <ul> <li>General HLL</li> <li>Improved HLL</li> </ul>"},{"location":"CS-courses/Courses/CMU-15445/Project0/#general-hll","title":"General HLL","text":"<p>This part is easy, the difficult point is to understand the HLL algorithm.</p> <p></p> <p>See the above picture, we can know that for the given object which convert to the hash value. We just use the hash value to get a register index, and get the register value use the remaining bits.</p>"},{"location":"CS-courses/Courses/CMU-15445/Project0/#the-main-steps-of-the-general-hll-algorithm","title":"The main steps of the General HLL algorithm","text":"<ul> <li> <p>Step1 : For the given <code>KeyType object</code>, we use the <code>CalculateHash</code> function to get the hash value.</p> </li> <li> <p>Step2 : We use the first <code>b</code> bits, (<code>b</code> is a positive number), to get the register index.</p> </li> <li> <p>Step3 : For the remaining bits, we use the <code>PositionOfLeftmostOne</code> function to get the position of the leftmost one.(The left most zero number plus 1).</p> </li> <li> <p>Step4 : We update the register value with the maximum value of the current register value and the position of the leftmost one. <code>register[index] = max(register[index], position)</code></p> </li> <li> <p>Step5 : Repeat the above steps for <code>n</code> times. </p> </li> <li> <p>Step6 : We use the <code>CalculateCardinality</code> function to get the cardinality of the unique users.</p> </li> </ul> \\[ Cardinality = \\frac{CONSTANT*m^2}{\\sum_{i=1}^{m}2^{-register[i]}} \\] <p>CONSTANT here we view it as <code>0.79402</code>, m is the number of registers.</p>"},{"location":"CS-courses/Courses/CMU-15445/Project0/#improved-hll","title":"Improved HLL","text":"<p>\u7b97\u6cd5\u7f51\u5740</p> <p>This algorithm has some differences with the General HLL.</p> <ol> <li>It doesn't compute for the <code>leftmost</code> Position, but it computes for the <code>rightmost</code> zero. </li> <li>Every registers must be updated with the <code>rightmost</code> zero. And the ranges of the register value is about <code>[0,15]</code>, so we can use 4 bits to store the register value. And for the overflow, we have to use the <code>unordered_map overflow</code> to store the overflow value.</li> <li>The <code>CalculateCardinality</code> function is the same as the General HLL. And do not forget to use the <code>overflow</code> in the calculation.</li> </ol> <p>Warning: </p> <p>Actually, the project description provided has not say in detail for the when register value has been replace. So I spend some time on watching for the test files to know that If the register value is <code>0</code>. Then you do not need to upgrate, otherwise, every value you run across need to update.</p> <p></p>"},{"location":"CS-courses/Courses/CMU-15445/Project0/#test-and-result","title":"Test and Result","text":"<p>This project has no code meaningful. So I do not want to place the code here.</p> <p>This is the local test result of the Project0.</p> <p></p> <p>The result of project0 in the Gradescope. AC! No hidden test.</p> <p></p>"},{"location":"CS-courses/DesignPattern/DesignPattern/","title":"DesignPattern","text":""},{"location":"CS-courses/DesignPattern/DesignPattern/#introduce","title":"Introduce","text":"<p>From wiki :</p> <p>Software design pattern refers to a reusable, proven solution to a specific, recurring problem typically focused on component-level design, though they can sometimes span multiple components. Design patterns address specific issues related to object creation, interaction, or behavior.</p>"},{"location":"CS-courses/DesignPattern/DesignPattern/#factory-design-pattern","title":"Factory Design Pattern","text":"<p>\u5de5\u5382\u8bbe\u8ba1\u6a21\u5f0f</p> <p>\u662f\u4e00\u79cd\u521b\u5efa\u578b\u7684\u8bbe\u8ba1\u6a21\u5f0f\uff0c\u7528\u4e8e\u89e3\u51b3\u5bf9\u8c61\u7684\u521b\u5efa\u95ee\u9898\uff0c\u65e8\u5728\u901a\u8fc7\u8bb2\u5bf9\u8c61\u5b9e\u4f8b\u5316\u8fc7\u7a0b\u5c01\u88c5\u5230\u4e86\u4e00\u4e2a\u72ec\u7acb\u7684\u7c7b/\u65b9\u6cd5\u4e2d\u4ece\u800c\u5b9e\u73b0\u66f4\u9ad8\u7684\u7075\u6d3b\u6027\u548c\u53ef\u7ef4\u62a4\u6027\u3002</p>"},{"location":"CS-courses/DesignPattern/DesignPattern/#simple-factory","title":"Simple Factory","text":"<p>\u7b80\u5355\u5de5\u5382\u7684\u8bbe\u8ba1\u6a21\u5f0f\uff0c\u901a\u8fc7\u4e00\u4e2a\u5de5\u5382\u7c7b\uff0c\u6839\u636e\u4e0d\u540c\u6761\u4ef6\u521b\u5efa\u5e76\u8fd4\u56de\u5177\u4f53\u7684\u5b9e\u4f8b</p>"},{"location":"CS-courses/DesignPattern/DesignPattern/#factory-method","title":"Factory Method","text":"<p>\u5b9a\u4e49\u4e00\u4e2a\u63a5\u53e3\u6216\u62bd\u8c61\u7c7b\uff0c\u7531\u5b50\u7c7b\u51b3\u5b9a\u5b9e\u4f8b\u5316\u54ea\u79cd\u4ea7\u54c1\u3002</p> <ul> <li>\u6bcf\u4e2a\u5177\u4f53\u4ea7\u54c1\u90fd\u6709\u4e00\u4e2a\u5bf9\u5e94\u7684\u5de5\u5382\u7c7b</li> <li>\u65b0\u589e\u4ea7\u54c1\u65f6\u53ea\u9700\u8981\u62d3\u5c55\u5de5\u5382\u7c7b\uff0c\u9075\u5faa\u5f00\u95ed\u539f\u5219</li> </ul>"},{"location":"CS-courses/DesignPattern/DesignPattern/#singleton-design-pattern","title":"Singleton Design Pattern","text":"<p>\u63a5\u4e0b\u6765\u6211\u4eec\u4ecb\u7ecd\u5355\u4f8b\u6a21\u5f0f </p> <p>from wiki Introduction: In object-oriented programming, the singleton pattern is a software design pattern that restricts the instantiation of a class to a singular instance. It is one of the well-known \"Gang of Four\" design patterns, which describe how to solve recurring problems in object-oriented software.[1] The pattern is useful when exactly one object is needed to coordinate actions across a system. </p> <p>\u4f9d\u65e7\u662f\u901a\u8fc7 <code>RPC</code> \u9879\u76ee\u7684\u4f8b\u5b50\u6765\u8fdb\u884c\u9610\u8ff0\u3002\u9996\u5148\uff0c\u7531\u4e8e\u6211\u4eec\u7684\u9879\u76ee\u662f\u4e00\u4e2a<code>RPC</code>\u6846\u67b6\uff0c\u76ee\u7684\u662f\u80fd\u591f\u63d0\u4f9b\u7ed9\u4e0d\u540c\u7684consumer\u8fdb\u884c\u4f7f\u7528\uff0c\u6240\u4ee5\u6211\u4eec\u53c8\u4e0d\u80fd\u8ba9\u6bcf\u4e2aconsumer\u8fdb\u884c\u5355\u72ec\u7684\u914d\u7f6e\u6587\u4ef6\u7684\u914d\u7f6e\u3002\u90a3\u4e48\u6211\u4eec\u5c31\u9700\u8981\u4e00\u4e2a\u5355\u4f8b\u6a21\u5f0f\u6765\u8fdb\u884c\u914d\u7f6e\u6587\u4ef6\u7684\u8bfb\u53d6\u3002\u5728\u5f15\u5165 <code>RPC</code> \u6846\u67b6\u542f\u52a8\u7684\u65f6\u5019\uff0c\u4ece\u914d\u7f6e\u6587\u4ef6\u4e2d\u8bfb\u53d6\u914d\u7f6e\u5e76\u521b\u5efa\u5bf9\u8c61\u5b9e\u4f8b\uff0c\u4e4b\u540e\u5c31\u96c6\u4e2d\u5730\u4ece\u8fd9\u4e2a\u5bf9\u8c61\u4e2d\u83b7\u53d6\u914d\u7f6e\u4fe1\u606f\u3002\u51cf\u5c11\u4e86\u6027\u80fd\u7684\u5f00\u9500</p>"},{"location":"CS-courses/DesignPattern/DesignPattern/#property","title":"property","text":"<ul> <li>Advantages : <ul> <li>\u4fdd\u8bc1\u4e86\u7cfb\u7edf\u5185\u5b58\u4e2d\u53ea\u6709\u4e00\u4e2a\u5b9e\u4f8b\uff0c\u51cf\u5c11\u4e86\u5185\u5b58\u7684\u5f00\u9500</li> <li>\u53ef\u4ee5\u907f\u514d\u5bf9\u8d44\u6e90\u7684\u591a\u91cd\u5360\u7528</li> <li>\u8bbe\u7f6e\u5168\u5c40\u8bbf\u95ee\u70b9\uff0c\u4e25\u683c\u63a7\u5236\u8bbf\u95ee</li> </ul> </li> <li>Disadvantages : <ul> <li>\u4e0d\u65b9\u4fbf\u8fdb\u884c\u6d4b\u8bd5\uff0c\u56e0\u4e3a\u53ea\u6709\u4e00\u4e2a\u5168\u5c40\u5b9e\u4f8b</li> <li>\u91cd\u70b9\u5173\u6ce8\u5e76\u53d1\u8bbf\u95ee\u7684\u60c5\u51b5\uff0c\u56e0\u4e3a\u6709\u53ef\u80fd\u4f1a\u5b58\u5728\u91cd\u590d\u521b\u5efa\u5355\u4e2a\u5b9e\u4f8b\u7684\u60c5\u51b5</li> </ul> </li> </ul>"},{"location":"CS-courses/DesignPattern/DesignPattern/#_1","title":"\u5e76\u53d1\u5904\u7406\u7684\u51e0\u79cd\u89e3\u51b3\u65b9\u5f0f","text":""},{"location":"CS-courses/DesignPattern/DesignPattern/#_2","title":"\u53cc\u91cd\u9501\u68c0\u67e5","text":"<pre><code>public class Singleton {\n    private static volatile Singleton instance;\n\n    private Singleton() {\n    }\n\n    public static Singleton getInstance() {\n        if (instance == null) {                         // \u7b2c\u4e00\u6b21\u68c0\u67e5\n            synchronized (Singleton.class) {\n                if (instance == null) {                 // \u7b2c\u4e8c\u6b21\u68c0\u67e5\n                    instance = new Singleton();\n                }\n            }\n        }\n        return instance;\n    }\n}\n</code></pre> <p>\u5b57\u9762\u610f\u601d\uff0c\u5c31\u662f\u5982\u679c\u5df2\u7ecf\u5b58\u5728\u4e86\u8fd9\u4e2a\u5b9e\u4f8b\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u76f4\u63a5\u8fd4\u56de <code>instance</code> \u8fd9\u4e2a\u5b9e\u4f8b\u5bf9\u8c61\u3002\u5018\u82e5\u6ca1\u6709\u521b\u5efa\u8fc7\u8fd9\u4e2a\u5b9e\u4f8b\u5bf9\u8c61\uff0c\u90a3\u4e48\u6211\u4eec\u8fdb\u884c\u53cc\u91cd\u9501\u68c0\u67e5\u7684\u76ee\u7684\u5c31\u662f\u4e3a\u4e86\u4fdd\u8bc1\u5728\u591a\u7ebf\u7a0b\u7684\u60c5\u51b5\u4e0b\uff0c\u53ea\u6709\u4e00\u4e2a\u7ebf\u7a0b\u80fd\u591f\u521b\u5efa\u8fd9\u4e2a\u5b9e\u4f8b\u5bf9\u8c61\u3002\u9996\u5148\u7b2c\u4e00\u6b21\u8fdb\u884c\u9501\u68c0\u67e5 <code>instance == null</code> \u5982\u679c\u4e3a<code>true</code> \u5219\u8bf4\u660e\u6211\u4eec\u5f53\u524d\u8fd8\u6ca1\u6709\u6210\u529f\u7684\u521b\u5efa\u51fa\u6765<code>instace</code> \u5b9e\u4f8b\uff0c\u53ef\u4ee5\u8fdb\u5165\u63a5\u4e0b\u6765\u7684\u540c\u6b65\u5757\u3002\u7b2c\u4e8c\u6b21\u8fdb\u884c\u9501\u68c0\u67e5\uff0c\u6211\u4eec\u4f7f\u7528\u4e86 <code>synchronized</code> \u5173\u952e\u5b57\uff0c\u76ee\u7684\u662f\u4e3a\u4e86\u4fdd\u8bc1\u5728\u591a\u7ebf\u7a0b\u7684\u60c5\u51b5\u4e0b\uff0c\u53ea\u6709\u4e00\u4e2a\u7ebf\u7a0b\u80fd\u591f\u8fdb\u5165\u8fd9\u4e2a\u540c\u6b65\u5757\uff0c\u7136\u540e\u8fdb\u884c\u5b9e\u4f8b\u7684\u521b\u5efa\u3002</p> <p>\u51e0\u70b9\u6ce8\u610f\u4e8b\u9879 :</p> <ol> <li><code>volatile</code> : \u5173\u952e\u5b57\u7684\u76ee\u7684\u662f\u4e3a\u4e86\u4fdd\u8bc1\u53ef\u89c1\u6027\uff0c\u9632\u6b62\u6307\u4ee4\u91cd\u6392\uff0c\u4ece\u800c\u5f71\u54cd\u5230\u591a\u7ebf\u7a0b\u5e76\u53d1\u5bf9\u4e8e<code>instance</code>\u521b\u5efa\u4ea7\u751f\u7684\u5f71\u54cd\u3002</li> <li><code>synchronized(Singleton.class)</code> \u662f\u7ed9<code>Singleton.class</code>\u8fd9\u4e2a\u7c7b\u7684\u5bf9\u8c61\u8fdb\u884c\u52a0\u9501\u3002 <p>\u4e3a\u4ec0\u4e48\u4e0d\u80fd\u76f4\u63a5\u4f7f\u7528 <code>synchronized(this)</code> ?     \u7b54\u6848\u662f\u56e0\u4e3a\uff0c\u5f53\u524d <code>instance</code> \u8fd9\u4e2a\u5bf9\u8c61\u8fd8\u672a\u88ab\u6210\u529f\u7684\u521b\u5efa\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u5bf9<code>Singleton.class</code>\u8fd9\u4e2a\u7c7b\u7684\u5bf9\u8c61\u8fdb\u884c\u52a0\u9501\uff0c\u4fdd\u8bc1\u5728\u591a\u7ebf\u7a0b\u7684\u60c5\u51b5\u4e0b\uff0c\u53ea\u6709\u4e00\u4e2a\u7ebf\u7a0b\u80fd\u591f\u8fdb\u5165\u8fd9\u4e2a\u540c\u6b65\u5757\u3002</p> </li> </ol> <p>\u4ee5\u4e0a\u5c31\u662f\u5bf9\u4e8e\u5355\u4f8b\u6a21\u5f0f\u7684\u7b80\u5355\u4ecb\u7ecd</p>"},{"location":"Interview/InExperience/Java/Java/","title":"Java","text":""},{"location":"Interview/InExperience/Java/Java/#_1","title":"\u5e38\u89c1\u516b\u80a1\u9898","text":""},{"location":"Interview/InExperience/Java/Java/#q1-stringstringbuilderstringbuffer","title":"Q1: <code>String</code>,<code>StringBuilder</code>,<code>StringBuffer</code> \u4e09\u8005\u7684\u533a\u522b\u662f\u4ec0\u4e48\uff1f","text":"<p>\u4e24\u53e5\u8bdd\u8bb2\u6e05\u695a\u5c31\u662f <code>String</code> \u662f\u4e0d\u53ef\u53d8\u7684\uff0c\u4f46\u540e\u9762\u7684\u4e24\u8005\u662f\u53ef\u53d8\u7684\u5b57\u7b26\u4e32\u5bf9\u8c61\uff0c<code>StringBuilder</code> \u662f\u7ebf\u7a0b\u4e0d\u5b89\u5168\u7684\uff0c<code>StringBuffer</code> \u662f\u7ebf\u7a0b\u5b89\u5168\u7684\u3002\u6240\u4ee5\u5728\u5355\u7ebf\u7a0b\u7684\u65f6\u5019\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 <code>StringBuilder</code> \u6765\u4ee3\u66ff <code>StringBuffer</code>\u3002\u8fd9\u6837\u7684\u6027\u80fd\u4f1a\u66f4\u9ad8\uff0c\u56e0\u4e3a\u7701\u53bb\u4e86\u52a0\u9501\u7684\u8fc7\u7a0b\u3002</p> <p>\u6211\u4eec\u770b\u6e90\u7801\u6765\u8fa8\u6790\uff0c\u4e0a\u9762\u7684\u4e00\u6bb5\u662f <code>StringBuilder</code>,\u800c\u4e0b\u9762\u90a3\u4e00\u6bb5\u662f<code>StringBuffer</code>\u7684 <code>append()</code> \u65b9\u6cd5</p> <p><pre><code>// AbstractStringBuilder append()\npublic AbstractStringBuilder append(String str) {\n        if (str == null) {\n            return appendNull();\n        }\n        int len = str.length();\n        ensureCapacityInternal(count + len);\n        putStringAt(count, str);\n        count += len;\n        return this;\n    }\n\n// StringBuilder append()\n    @Override\n    public StringBuilder append(String str) {\n        super.append(str);\n        return this;\n    }\n\n\n// StringBuffer append()\n    @Override\n    public synchronized StringBuffer append(Object obj) {\n        toStringCache = null;\n        super.append(String.valueOf(obj));\n        return this;\n    }\n</code></pre> \u6211\u4eec\u53ef\u4ee5\u5f88\u663e\u7136\u7684\u770b\u5230\uff0c\u4e8c\u8005\u90fd\u5b9e\u73b0\u4e86<code>AbstractStringBuilder</code>\u63a5\u53e3\u4e2d\u7684<code>append()</code> \u65b9\u6cd5\uff0c\u4f46\u662f<code>StringBuffer</code>\u4e2d\u7684<code>append()</code>\u65b9\u6cd5\u662f\u52a0\u4e86<code>synchronized</code>\u5173\u952e\u5b57\u7684\uff0c\u6240\u4ee5\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\u3002</p>"},{"location":"Interview/InExperience/Java/concurrency/","title":"\u5e76\u53d1","text":""},{"location":"Interview/InExperience/Java/concurrency/#_2","title":"\u9762\u8bd5\u9898","text":""},{"location":"Interview/InExperience/Java/concurrency/#q1-java","title":"Q1 : Java \u5982\u4f55\u5f00\u542f\u7ebf\u7a0b\uff0c\u600e\u4e48\u4fdd\u8bc1\u7ebf\u7a0b\u5b89\u5168\u5462\uff1f","text":"<p>\u9996\u5148\uff0c\u6211\u4eec\u8fd9\u91cc\u63d0\u4e00\u4e0b\u7ebf\u7a0b\u4e0e\u8fdb\u7a0b\u7684\u533a\u522b\uff1a</p> <p>\u8fdb\u7a0b\u662f\u64cd\u4f5c\u7cfb\u7edf\u7684\u8d44\u6e90\u5206\u914d\u7684\u6700\u5c0f\u5355\u5143\uff0c\u7ebf\u7a0b\u662f\u64cd\u4f5c\u7cfb\u7edf\u7684\u4efb\u52a1\u8c03\u5ea6\u7684\u6700\u5c0f\u5355\u5143\u3002\u4e00\u4e2a\u8fdb\u7a0b\u53ef\u4ee5\u5305\u542b\u591a\u4e2a\u7ebf\u7a0b\uff0c\u7ebf\u7a0b\u5171\u4eab\u8fdb\u7a0b\u7684\u8d44\u6e90\u3002</p> <p>\u6211\u4eec\u5728 Java \u4e2d\u7684\u65f6\u5019\uff0c\u6211\u4eec\u4e00\u822c\u60c5\u51b5\u4e0b\u6709\u4e24\u79cd\u65b9\u6cd5\u5f00\u542f\u7ebf\u7a0b:</p> <ul> <li>\u4f7f\u7528 <code>Thread</code> \u7c7b\uff0c\u6211\u4eec\u53ea\u9700\u8981\u7ee7\u627f<code>Thread</code>,\u91cd\u5199 <code>run()</code> \u65b9\u6cd5\u5373\u53ef</li> <li> <p>\u4f7f\u7528 <code>Runnable</code> \u63a5\u53e3\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5b9e\u73b0 <code>Runnable</code> \u63a5\u53e3\uff0c\u91cd\u5199 <code>run()</code> \u65b9\u6cd5\u5373\u53ef</p> </li> <li> <p>\u5b9e\u73b0 <code>Callable</code> \u63a5\u53e3\uff0c\u91cd\u5199 <code>call()</code> \u65b9\u6cd5\uff0c\u53ef\u4ee5\u6709\u8fd4\u56de\u503c</p> </li> <li> <p>\u6211\u4eec\u4f7f\u7528\u7ebf\u7a0b\u6c60\u6765\u8fdb\u884c\u7ebf\u7a0b\u7684\u7ba1\u7406\uff0c\u8fd9\u6837\u53ef\u4ee5\u51cf\u5c11\u7ebf\u7a0b\u7684\u521b\u5efa\u548c\u9500\u6bc1\u7684\u5f00\u9500</p> </li> </ul> <p>\u4ee5\u4e0a\u6211\u4eec\u63d0\u5230\u4e86\u6709\u56db\u79cd\u65b9\u6cd5\u6765\u5f00\u542f\u7ebf\u7a0b\uff0c\u5176\u4e2d\u6700\u524d\u9762\u7684\u4e24\u79cd\u662f\u6700\u5e38\u89c1\u7684\u529e\u6cd5\u3002</p> <p>\u6211\u4eec\u4e0b\u9762\u6765\u770b\u4e00\u4e0b\u5982\u4f55\u4fdd\u8bc1\u7ebf\u7a0b\u5b89\u5168\uff1a</p> <p>\u4e00\u6837\u7684\uff0c\u601d\u8def\u6709\u4e24\u79cd:</p> <ul> <li>\u4f7f\u7528 <code>Java</code> \u7684 <code>Synchornized</code> \u5173\u952e\u5b57\uff0c\u5bf9\u67d0\u5bf9\u8c61\u8fdb\u884c\u540c\u6b65\u9501\u4fdd\u62a4\uff0c\u59cb\u7ec8\u4fdd\u6301\u53ea\u6709\u4e00\u4e2a\u7ebf\u7a0b\u5728\u6267\u884c</li> <li>\u4f7f\u7528 <code>Java</code> \u5185\u7f6e\u7684 <code>Lock</code> \u63a5\u53e3\uff0c\u5b83\u63d0\u4f9b\u4e86\u66f4\u591a\u7684\u65b9\u6cd5\u6765\u63a7\u5236\u7ebf\u7a0b\u7684\u540c\u6b65 </li> </ul>"},{"location":"Interview/InExperience/mysql/mysql/","title":"DB","text":""},{"location":"Interview/InExperience/mysql/mysql/#_1","title":"\u6570\u636e\u5e93\u7684\u5206\u7c7b","text":"<ol> <li> <p>\u5173\u7cfb\u578b\u6570\u636e\u5e93</p> <ul> <li>Mysql </li> <li>PostgreSQL </li> <li>Oracle </li> <li>SQLServer</li> </ul> </li> <li> <p>\u975e\u5173\u7cfb\u578b\u6570\u636e\u5e93 Nosql </p> <ul> <li>Redis  </li> <li>MongoDB</li> </ul> </li> </ol>"},{"location":"Interview/InExperience/mysql/mysql/#_2","title":"\u6570\u636e\u5e93\u7684\u7279\u5f81","text":"<p>\u540c\u65f6\u9700\u8981\u77e5\u9053\u7684\u662f\uff0c\u5bf9\u4e8e\u5173\u7cfb\u6570\u636e\u5e93\u548c\u975e\u5173\u7cfb\u6570\u636e\u5e93\u7684\u9009\u62e9\u6765\u8bf4\uff0c\u5982\u679c\u5f3a\u70c8\u9700\u8981\u7684\u662f\u4fdd\u8bc1ACID\u7684\u7279\u6027\u7684\uff0c\u90a3\u4e48\u6211\u4eec\u901a\u5e38\u4f1a\u9009\u62e9\u5173\u7cfb\u578b\u6570\u636e\u5e93\uff0c\u53cd\u4e4b\u6211\u4eec\u4f1a\u9009\u62e9\u975e\u5173\u7cfb\u578b\u6570\u636e\u5e93\u3002</p> <p>ACID \u662f\u6570\u636e\u5e93\u4e8b\u52a1\u7684\u56db\u4e2a\u7279\u6027\uff0c\u6307\u7684\u662f\u539f\u5b50\u6027\uff08Atomicity\uff09\u3001\u4e00\u81f4\u6027\uff08Consistency\uff09\u3001\u9694\u79bb\u6027\uff08Isolation\uff09\u548c\u6301\u4e45\u6027\uff08Durability\uff09\u3002</p> <p>\u4e0b\u9762\u4ee5\u4e00\u4e2a\u4f8b\u5b50\u6765\u8fdb\u884c\u9610\u8ff0\u6570\u636e\u5e93\u4e8b\u52a1\u7684\u56db\u4e2a\u7279\u6027\uff1a</p> <p></p>"},{"location":"Interview/InExperience/mysql/mysql/#atomicity","title":"Atomicity \u539f\u5b50\u6027","text":"<p>\u53ef\u4ee5\u8fd9\u6837\u7684\u7406\u89e3\uff0c\u6211\u4eec\u628a\u4e00\u6b21\u4e8b\u52a1\u770b\u6210\u662f\u73b0\u5b9e\u4e16\u754c\u4e2d\u7684\u4e00\u6b21 \u72b6\u6001\u5207\u6362 </p> <p>\u539f\u5b50\u6027\uff0c\u4e5f\u5c31\u662f\u5b57\u9762\u610f\u601d\uff0c\u8981\u6c42\u7684\u662f\u8ba9\u67d0\u4e2a\u5355\u4f4d\u4e8b\u52a1\u4e2d\u7684\u591a\u4e2a\u5b50\u64cd\u4f5c\u90fd\u770b\u6210\u4e00\u4e2a\u6574\u4f53\uff0c\u8981\u4e48\u90fd\u6210\u529f\uff0c\u8981\u4e48\u90fd\u5931\u8d25\u3002</p> <p>\u5047\u8bbe \u4e0a\u9762\u56fe\u4e2d\u7684\u7528\u6237A \u8981\u7ed9\u7528\u6237B \u8f6c\u8d26 <code>10</code> r\u3002\u90a3\u4e48\u5c31\u4f1a\u7ecf\u5386\u4e0b\u9762\u8fd9\u4e2a\u8fc7\u7a0b:</p> <p></p> <p>\u6211\u4eec\u9700\u8981\u4fdd\u8bc1\u7684\u662f\uff0c\u8fd9\u4e2a\u4e8b\u52a1\u662f\u4e00\u6574\u4e2a\u5b8c\u6210\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4 \u65e2\u6709\u524d\u8005\u6263\u6b3e\u6210\u529f\uff0c\u53c8\u6709\u540e\u8005\u7684\u5230\u8d26\u3002\u5426\u5219\u7684\u8bdd\u5c31\u4f1a\u51fa\u73b0\u4e2d\u9014\u4e22\u5931\u7684\u72b6\u51b5\uff0c\u8fd9\u5e76\u4e0d\u7b97\u4e00\u4e2a\u4e8b\u52a1\u7684\u5b8c\u6210\u3002</p> <p>\u5f53\u7136\u6211\u4eec\u73b0\u5728\u4e5f\u53ea\u662f\u5728\u903b\u8f91\u7684\u5c42\u9762\u8fdb\u884c\uff0c\u5176\u5b9e\u5177\u4f53\u5230\u6570\u636e\u5e93\u7684\u5b9e\u73b0\u7ec6\u8282\uff0c\u53ef\u80fd\u8fd8\u6709<code>buffer pool</code> \u4e2d\u7684\u4e00\u4e9b\u5b9e\u73b0\u7ec6\u8282\uff0c\u6bd4\u5982\u5148\u4fee\u6539\u5230\u7f13\u5b58\u9875\uff0c\u518d\u5199\u5165\u78c1\u76d8\uff0c\u6291\u6216\u662f\u6709\u5173\u810f\u9875\u7684\u5199\u4e0e\u8bfb\u7b49\u7b49\uff0c\u662f\u4e00\u7cfb\u5217\u7684\u64cd\u4f5c\u3002</p>"},{"location":"Interview/InExperience/mysql/mysql/#isolation","title":"Isolation \u9694\u79bb\u6027","text":"<p>\u9694\u79bb\u6027\u7684\u5b57\u9762\u610f\u601d\u5c31\u662f\u9694\u79bb\uff0c\u4e5f\u5c31\u662f\u8bf4\u5728\u4e00\u4e2a\u4e8b\u52a1\u4e2d\u7684\u64cd\u4f5c\u4e0d\u4f1a\u5f71\u54cd\u5230\u5176\u4ed6\u4e8b\u52a1\u7684\u64cd\u4f5c\u3002</p> <p>\u6bcf\u4e2a\u4e8b\u52a1\u4e4b\u95f4\u662f\u72ec\u7acb\u7684\uff0c\u540c\u65f6\u4e8b\u52a1\u4e0e\u4e8b\u52a1\u4e4b\u95f4\u4e0d\u4f1a\u5f71\u54cd\u5230\u5176\u4ed6\u4e8b\u52a1\u7684\u64cd\u4f5c\u3002 \u7b80\u5355\u7684\u4f8b\u5b50\uff0c\u6211\u4eec\u60f3\u8ba9\u521a\u521a\u7684\u4e00\u6b21\u6027\u8f6c\u8d2610r\u5206\u6210\u4e86\u4e24\u6b21\u8fdb\u884c\u64cd\u4f5c\uff0c\u6bcf\u6b21\u90fd\u53ea\u8f6c5r\uff0c\u90a3\u4e48\u5c31\u4ea7\u751f\u4e86\u4e24\u4e2a\u4e8b\u52a1\u3002</p> <p></p> <p>\u4f46\u4e8b\u5b9e\u4e0a\uff0c\u4ee5\u4e0a\u7684\u64cd\u4f5c\u5176\u5b9e\u5e76\u4e0d\u662f\u8fd9\u6837\u7684\u90a3\u4e48\u7b80\u5355\u7684\u5355\u4e2a\u8fdb\u884c\u5b8c\u624d\u4f1a\u8f6e\u5230\u4e0b\u4e00\u4e2a\u8fdb\u884c\u7684\u3002\u5982\u679c\u662f\u8fd9\u6837\u7684\u8bdd\uff0c\u6548\u7387\u592a\u4f4e\u4e86\uff0c\u4e8b\u5b9e\u4e0a\u662f\u5f88\u591a\u64cd\u4f5c\u53ef\u80fd\u4f1a\u5e76\u53d1\u7684\u8fdb\u884c\u3002\u5c31\u50cf\u4f53\u7cfb\u7ed3\u6784\u7684\u6d41\u6c34\u7ebf\u4e2d\u7684\u4e71\u5e8f\u4e00\u6837\uff0c\u5f88\u591a\u6307\u4ee4\u7684\u539f\u5355\u4f4d\u64cd\u4f5c\u4f1a\u6709\u4e71\u5e8f\u7684\u5e76\u5165\uff0c\u800c\u6211\u4eec\u7684\u9694\u79bb\u6027\u8981\u4fdd\u8bc1\u7684\u662f\uff0c\u5c31\u7b97\u662f\u4e71\u5e8f\u7684\u5e76\u5165\uff0c\u4e5f\u8981\u4fdd\u8bc1\u6700\u7ec8\u7ed3\u679c\u7684\u6b63\u786e\u3002</p> <p>\u6211\u4eec\u770b\u4e0b\u9762\u8fd9\u4e2a\u4f8b\u5b50\uff0c\u5c31\u4f1a\u53d1\u73b0\u8fd9\u6837\u7684\u4e00\u4e2a\u95ee\u9898\uff0c\u5982\u679c\u6211\u4eec\u7684\u9694\u79bb\u6027\u4e0d\u591f\u597d\uff0c\u90a3\u4e48\u5c31\u4f1a\u51fa\u73b0\u8fd9\u6837\u7684\u4e00\u4e2a\u95ee\u9898\uff0c\u5c31\u662f\u6211\u4eec\u7684\u4e8b\u52a1\u4e4b\u95f4\u4f1a\u76f8\u4e92\u5f71\u54cd\u3002\u672c\u6765A\u5e94\u8be5\u53ea\u5269\u4e0b\u4e861r\uff0c\u56e0\u4e3a\u8fdb\u884c\u4e86\u4e24\u6b21\u7684\u8f6c\u8d26\uff0c\u4f46\u662fA\u7684\u94b1\u53d8\u6210\u4e866r\u3002\u6709\u4e00\u6b21\u8f6c\u8d26\u7684\u64cd\u4f5c\uff0c\u4f46\u662fA\u5c11\u6263\u94b1\u4e86\u3002\u8fd9\u4e2a\u5c31\u662f\u4e00\u6b21\u6bd4\u8f83\u5931\u8d25\u7684\u9694\u79bb\u3002 </p>"},{"location":"Interview/InExperience/mysql/mysql/#_3","title":"\u4e0d\u8003\u8651\u9694\u79bb\u6027\u7684\u60c5\u51b5\uff0c\u4f1a\u51fa\u73b0\u7684\u95ee\u9898","text":"<ul> <li>\u810f\u8bfb(Dirty Read)\uff1a\u4e00\u4e2a\u4e8b\u52a1\u8bfb\u53d6\u5230\u4e86\u53e6\u4e00\u4e2a\u4e8b\u52a1\u672a\u63d0\u4ea4\u7684\u6570\u636e</li> </ul> <p>\u6bd4\u5982\u4e8b\u52a1A\u8bfb\u5230\u4e86\u4e00\u4e2a\u6570\u636e\u5e93\u4e2d\u7684\u6570\u636e\uff0c\u4f46\u662f\u7531\u4e8e\u67d0\u79cd\u539f\u56e0\uff0c\u4e8b\u52a1B\u56de\u6eda\u4e86\uff0c\u5bfc\u81f4\u4e8b\u52a1A\u8bfb\u5230\u4e86\u4e00\u4e2a\u4e0d\u6b63\u786e\u7684\u6570\u636e\u3002</p> <ul> <li>\u4e0d\u53ef\u91cd\u590d\u8bfb(Nonrepeated Read)\uff1a\u4e00\u4e2a\u4e8b\u52a1\u8bfb\u53d6\u5230\u4e86\u53e6\u4e00\u4e2a\u4e8b\u52a1\u5df2\u7ecf\u63d0\u4ea4\u7684\u6570\u636e</li> </ul> <p>\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff0c\u6bd4\u5982\u4e8b\u52a1A\u8bfb\u53d6\u4e86\u4e00\u4e2a\u6570\u636e\uff0c\u7136\u540e\u4e8b\u52a1B\u4fee\u6539\u4e86\u8fd9\u4e2a\u6570\u636e\uff0c\u7136\u540e\u4e8b\u52a1A\u518d\u6b21\u8bfb\u53d6\u8fd9\u4e2a\u6570\u636e\uff0c\u53d1\u73b0\u6570\u636e\u5df2\u7ecf\u53d1\u751f\u4e86\u53d8\u5316\u3002</p> <ul> <li>\u5e7b\u8bfb(Phantom Read)\uff1a\u4e00\u4e2a\u4e8b\u52a1\u8bfb\u53d6\u5230\u4e86\u53e6\u4e00\u4e2a\u4e8b\u52a1\u63d2\u5165\u7684\u6570\u636e</li> </ul> <p>\u4e8b\u52a1A\u5bf9\u8868\u4e2d\u7684\u6240\u6709\u884c\u7684\u67d0\u4e2a\u6570\u636e\u8fdb\u884c\u4e86\u4fee\u6539\u64cd\u4f5c\uff0c\u4f46\u662f\u6b64\u65f6\u4e8b\u52a1B\u7684\u67d0\u9879\u64cd\u4f5c\uff0c\u5bfc\u81f4\u53c8\u63d2\u5165\u4e86\u4e00\u884c\u6570\u636e\uff0c\u8fd9\u4e2a\u65f6\u5019\u4e8b\u52a1A\u518d\u6b21\u8bfb\u53d6\u8fd9\u4e2a\u8868\uff0c\u53d1\u73b0\u591a\u4e86\u4e00\u884c\u6570\u636e\u3002\u6216\u8005\u662f\u53d1\u73b0\u53c8\u56de\u5230\u4e86\u81ea\u5df1\u66f4\u6539\u4e4b\u524d\u7684\u60c5\u51b5\uff0c\u8fd9\u4e2a\u5c31\u662f\u5e7b\u8bfb\u3002</p> <p>\u524d\u8005\u548c\u540e\u9762\u4e24\u8005\u7684\u533a\u522b\u662f whether the data is commited. \u524d\u8005\u810f\u8bfb\u53ea\u662f\u8bfb\u53d6\u4e86\u672a\u63d0\u4ea4\u7684\u6570\u636e\uff0c\u4f46\u662f\u540e\u8005\u662f\u8bfb\u53d6\u4e86\u5df2\u7ecf\u63d0\u4ea4\u7684\u6570\u636e\u3002</p>"},{"location":"Interview/InExperience/mysql/mysql/#consistency","title":"Consistency \u4e00\u81f4\u6027","text":"<p>\u8fd9\u91cc\u7684\u4e00\u81f4\u6027\u5176\u5b9e\u5c31\u662f\u6307\u7684\u662f\uff0c\u6211\u4eec\u6570\u636e\u5e93\u4e2d\u7684\u6570\u636e\u8981\u548c\u73b0\u5b9e\u4e16\u754c\u7684\u6570\u636e\u7ea6\u675f\u662f\u4e00\u81f4\u7684\u3002(All defined rule) \u4e00\u4e2a\u6700\u7b80\u5355\u7684\u4f8b\u5b50\u5c31\u662f\u94f6\u884c\u8d26\u6237\u7684<code>balance</code> \u4e0d\u80fd\u4e3a\u8d1f\u6570\u3002    </p> <p>Mysql \u5728\u4fdd\u8bc1\u4e00\u81f4\u6027\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u505a\u51fa\u4ee5\u4e0b\u52aa\u529b\uff1a</p> <ol> <li>\u5728\u5efa\u7acb\u8868\u7684\u65f6\u5019\uff0c\u5c31\u89c4\u5b9a\u5982 <code>NOT NULL</code> \u8fd9\u6837\u7684\u91cf\u8bcd\u9650\u5b9a</li> <li> <p>\u6211\u4eec\u53ef\u4ee5\u6dfb\u52a0 <code>Check</code> \u8bed\u6cd5\u6765\u81ea\u5b9a\u4e49\u7ea6\u675f    <pre><code>CREATE TABLE account (\n id INT NOT NULL AUTO_INCREMENT COMMENT '\u81ea\u589eid',\n name VARCHAR(100) COMMENT '\u5ba2\u6237\u540d\u79f0',\n balance INT COMMENT '\u4f59\u989d',\n PRIMARY KEY (id),\n CHECK (balance &gt;= 0) \n );\n</code></pre> \u4f46\u8fd9\u91cc\u6709\u4e2a\u4e0d\u8db3\u7684\u5730\u65b9\u5c31\u662f\uff0c\u867d\u7136\u6211\u4eec\u4ee5 <code>Check</code> \u5b50\u53e5\u6765\u9650\u5b9a\u4e86<code>account</code>\u8868\uff0c\u4f46\u662f\u5728\u540e\u7eed\u63d2\u5165\u6216\u8005\u66f4\u65b0\u8bb0\u5f55\u7684\u65f6\u5019\uff0c\u5c31\u4e0d\u4f1a\u53bb\u68c0\u67e5\u8fd9\u4e2a\u7ea6\u675f\u4e86\u3002\u8fd9\u4e2a\u65f6\u5019\u5c31\u9700\u8981\u6211\u4eec\u81ea\u5df1\u6765\u8fdb\u884c\u68c0\u67e5\u4e86\u3002</p> </li> <li> <p>\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u89e6\u53d1\u5668\u6765\u8fdb\u884c\u7ea6\u675f\u6761\u4ef6\u7684\u68c0\u67e5\uff0c\u6765\u4fdd\u8bc1\u4e00\u81f4\u6027\u3002    <pre><code>CREATE TRIGGER check_balance\nBEFORE INSERT ON account\nFOR EACH ROW\nBEGIN\n IF NEW.balance &lt; 0 THEN\n     SIGNAL SQLSTATE '45000'\n     SET MESSAGE_TEXT = 'balance must be &gt;= 0';\n END IF;\nEND;\n</code></pre></p> </li> </ol> <p>\u53ef\u4ee5\u8fd9\u4e48\u8bf4\uff0c\u539f\u5b50\u6027\u548c\u9694\u79bb\u6027\u90fd\u662f\u4fdd\u8bc1\u4e00\u81f4\u6027\u7684\u4e00\u4e2a\u624b\u6bb5\u3002</p>"},{"location":"Interview/InExperience/mysql/mysql/#durability","title":"Durability \u6301\u4e45\u6027","text":"<p>\u5b57\u9762\u610f\u601d\u5c31\u662f\u6301\u4e45\u6027\uff0c\u4e5f\u5c31\u662f\u8bf4\u4e00\u65e6\u4e8b\u52a1\u5b8c\u6210\uff0c\u90a3\u4e48\u5b83\u7684\u7ed3\u679c\u5c31\u662f\u6c38\u4e45\u7684\u3002 </p> <p>\u4e0d\u4f1a\u56e0\u4e3a\u7cfb\u7edf\u7684\u5d29\u6e83\u800c\u4e22\u5931\u3002\u8be5\u4e8b\u52a1\u7684\u8f6c\u6362\u6570\u636e\u5e93\u64cd\u4f5c\u6240\u4fee\u6539\u7684\u6570\u636e\u4f1a\u5728\u78c1\u76d8\u4e0a\u4fdd\u7559\u4e0b\u6765\uff0c\u65e0\u8bba\u53d1\u751f\u4e86\u4ec0\u4e48\u4e8b\u6545\uff0c\u672c\u6b21\u8f6c\u6362\u7684\u7ed3\u679c\u90fd\u4e0d\u4f1a\u4e22\u5931\u3002\u4ee5\u4fbf\u540e\u7eed\u7684undo\u548credo\u64cd\u4f5c\u3002</p>"},{"location":"Interview/InExperience/mysql/mysql/#_4","title":"\u6570\u636e\u5e93\u7684\u4e09\u5927\u8303\u5f0f","text":""},{"location":"Interview/InExperience/mysql/mysql/#1nf","title":"\u7b2c\u4e00\u8303\u5f0f 1NF","text":"<p>\u8981\u4fdd\u8bc1\u6bcf\u4e00\u5217\u7684\u539f\u5b50\u6027\uff0c\u4e5f\u5c31\u662f\u8bf4\u6bcf\u4e00\u5217\u7684\u503c\u90fd\u662f\u4e0d\u53ef\u518d\u5206\u7684\u3002</p>"},{"location":"Interview/InExperience/mysql/mysql/#_5","title":"\u771f\u9898","text":""},{"location":"Interview/InExperience/mysql/mysql/#1","title":"1. \u4ec0\u4e48\u662f\u6570\u636e\u5e93\u7684\u9694\u79bb\u7ea7\u522b?","text":"<p>\u8fd9\u9898\u8981\u5728\u7406\u89e3\u8fc7 AICD \u4e4b\u540e\u518d\u56de\u6765\u770b\u4f1a\u6bd4\u8f83\u597d\u7406\u89e3</p> <p>\u6570\u636e\u5e93\u7684\u9694\u79bb\u7ea7\u522b\u5c31\u662f\u6307\u7684\u662f\u6570\u636e\u5e93\u4e8b\u52a1\u7684\u9694\u79bb\u7a0b\u5ea6\uff0c\u4e5f\u5c31\u662f\u8bf4\u5728\u4e00\u4e2a\u4e8b\u52a1\u4e2d\u7684\u64cd\u4f5c\u5bf9\u4e8e\u5176\u4ed6\u4e8b\u52a1\u7684\u5f71\u54cd\u7a0b\u5ea6\u3002\u4e0a\u9762\u7684\u7b14\u8bb0\u4e2d\u63d0\u53ca\u4e86\u6709\u5173\u4e8b\u52a1\u5982\u679c\u6ca1\u6709\u9694\u79bb\u6027\u4f1a\u53d1\u751f\u7684\u95ee\u9898\uff0c\u73b0\u5728\u6211\u4eec\u5c31\u5229\u7528\u56db\u79cd\u9694\u79bb\u7ea7\u522b\u6765\u89e3\u51b3\u95ee\u9898\u3002</p>"},{"location":"Interview/InExperience/mysql/mysql/#read-uncommitted","title":"Read Uncommitted \u672a\u63d0\u4ea4\u8bfb","text":""},{"location":"Interview/InExperience/mysql/mysql/#read-committed","title":"Read Committed \u8bfb\u63d0\u4ea4","text":""},{"location":"Interview/InExperience/mysql/mysql/#repeatable-read","title":"Repeatable Read \u53ef\u91cd\u590d\u8bfb","text":""},{"location":"Interview/InExperience/mysql/mysql/#serializable","title":"Serializable \u5e8f\u5217\u5316","text":""},{"location":"Interview/LeetCode/2-Week1/","title":"2-Week1","text":"<p>\u4ee5 2\u67081\u65e5 - 2\u67087\u65e5 \u4e3a\u5468\u671f</p> <p>\u7531\u4e8e\u53c2\u52a0\u4e86\u5b57\u8282\u7684\u9752\u8bad\u8425\uff0c\u6240\u4ee5\u8fd9\u4e00\u4e2a\u6708\u9700\u8981\u6bcf\u5929\u575a\u6301\u6253\u53611\u9898+LeetCode1\u9898\uff0c\u5e76\u4e14\u5199\u9898\u89e3.</p>"},{"location":"Interview/LeetCode/2-Week1/#21","title":"2\u67081\u65e5","text":""},{"location":"Interview/LeetCode/2-Week1/#1","title":"\u9898 1 : \u6c42\u77e9\u5f62\u7684\u6700\u5927\u9762\u79ef","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"Interview/LeetCode/2-Week1/#_1","title":"\u9898\u89e3","text":"<p>\u7b80\u5355\u7684 DP \u95ee\u9898\u3002\u6211\u4eec\u8bbe\u7f6e\u4e86\u4e00\u4e2a <code>visited[][]</code> \u4e8c\u7ef4\u6570\u7ec4\uff0c\u7528\u6765\u5b58\u653e<code>i,j</code> \u4e4b\u95f4\u7684\u6700\u5927\u9ad8\u5ea6,\u7136\u540e\u7ef4\u62a4\u4e00\u4e2a <code>maxSquare</code> \u6700\u5927\u9762\u79ef\u53d8\u91cf\u3002</p>"},{"location":"Interview/LeetCode/2-Week1/#code","title":"Code","text":"<pre><code>public class Main {\n    public static int solution(int n, int[] array) {\n        // Edit your code here\n        int [][] visited = new int[n][n];\n        // visited[i][j] represents that from i to j highth;\n        int maxSquare = 0;\n        // initialization;\n        for(int i=0;i&lt;n;i++){\n            visited[i][i] = array[i];\n            if(array[i]&gt;maxSquare)\n                maxSquare = array[i];\n        }\n        // DP;\n        for(int i=0;i&lt;n;i++){\n            for(int j=i+1;j&lt;n;j++){\n                visited[i][j] = Math.min(array[j],visited[i][j-1]);\n                int tempSquare = (j-i+1) * visited[i][j];\n                if(tempSquare &gt; maxSquare)\n                    maxSquare = tempSquare;\n            }\n        }\n        return maxSquare;\n    }\n\n    public static void main(String[] args) {\n        // Add your test cases here\n\n        System.out.println(solution(5, new int[]{1, 2, 3, 4, 5}) == 9);\n    }\n}\n</code></pre>"},{"location":"Interview/LeetCode/2-Week1/#2","title":"\u9898 2:","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"Interview/LeetCode/2-Week1/#_2","title":"\u9898\u89e3","text":"<p>\u8fd9\u9898\u662f\u9700\u8981\u6211\u4eec\u8fdb\u884c\u6c42\u89e3\u6700\u5927\u7684\u6709\u6548\u62ec\u53f7\u957f\u5ea6\uff0c\u6211\u4eec\u5c31\u628a\u5b83\u8f6c\u5316\u4e3a\u6700\u5927\u7684\u8fde\u7eed\u5b50\u533a\u95f4\u957f\u5ea6\u95ee\u9898\u3002</p> <ol> <li>\u9996\u5148\u5229\u7528\u6808\u6765\u8bb0\u5f55\u4e0b\u5408\u6cd5\u7684\u62ec\u53f7\u7d22\u5f15\u5bf9</li> <li>\u627e\u5230\u6700\u5927\u7684\u8fde\u7eed\u5b50\u533a\u95f4\uff0c\u5e76\u4e14\u7ef4\u62a4\u4e00\u4e2a <code>maxLen</code> \u53d8\u91cf\u5373\u53ef</li> </ol>"},{"location":"Interview/LeetCode/2-Week1/#code_1","title":"Code","text":"<pre><code>class Solution {\npublic:\n    int longestValidParentheses(string s) {\n        if(s.empty())\n            return 0;\n        int len = s.length();\n        int maxLen = 0;\n        stack&lt;int&gt; charStack;\n        set&lt;pair&lt;int,int&gt;&gt; charSet;\n        for(int i=0;i&lt;len;i++){\n            if(s[i] == '('){\n                charStack.push(i);\n            }else{\n                if(charStack.empty()){\n                    continue;\n                }else{\n                    int index = charStack.top();\n                    charStack.pop();\n                    charSet.insert(make_pair(index,i));\n                }\n            }\n        }\n\n        int prevL = -2;\n        int prevR = -2;\n        for(pair&lt;int,int&gt; p : charSet){\n            int l = p.first;\n            int r = p.second;\n\n            int distance = r-l+1;\n\n            if(l&gt;prevL&amp;&amp;r&lt;prevR)\n                continue;\n            else if(l == prevR+1){\n                prevR = r;\n                int temp = (r-prevL+1);\n                if(temp &gt; maxLen)\n                    maxLen = temp;\n            }else{\n                prevL = l;\n                prevR = r;\n                maxLen = (maxLen &lt; distance) ? distance : maxLen;\n            }\n        }\n\n\n        return maxLen;\n    }\n};\n</code></pre>"},{"location":"Interview/LeetCode/2-Week1/#22","title":"2\u67082\u65e5","text":""},{"location":"Interview/LeetCode/2-Week1/#1_1","title":"\u98981 \u6700\u4f73\u4eba\u9009","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"Interview/LeetCode/2-Week1/#_3","title":"\u9898\u89e3","text":"<p>\u8fd9\u9898\u5f88\u7b80\u5355\uff0c\u5c31\u662f\u7b80\u5355\u7684\u904d\u5386\u5373\u53ef\u3002\u6211\u4eec\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5982\u679c\u6ca1\u6709\u627e\u5230\u5408\u9002\u7684\u4eba\u9009\uff0c\u6211\u4eec\u5c31\u8fd4\u56de<code>\"None\"</code>\u5373\u53ef\u3002\u8fd9\u4e2a\u662f\u9898\u76ee\u91cc\u6ca1\u6709\u8bf4\u660e\u7684\uff0c\u4f46\u662f\u6d4b\u8bd5\u7528\u4f8b\u4e2d\u51fa\u73b0\u7684\u4e86\u7684\uff0c\u9700\u8981\u6ce8\u610f\u3002</p>"},{"location":"Interview/LeetCode/2-Week1/#code_2","title":"Code","text":"<pre><code>public class Main {\n\n    public static String solution(int m, int n, String target, String[] array) {\n        // Edit your code here\n        int [] totalSum = new int[n];\n        int min = 1000;\n        for(int i = 0; i &lt; n; i ++){\n            int diff = PersonalityMatching(target, array[i]);\n            if(diff == -1){\n                totalSum[i] = -1;\n            }else{\n                if(diff &lt; min){\n                    min = diff;\n                }\n                totalSum[i] = diff;\n            }\n        }\n\n        StringBuilder stringBuilder = new StringBuilder(\"\");\n        int count = 0;\n        for(int i=0;i&lt;n;i++){\n            if(totalSum[i] == min){\n                if(count ==0){\n                    stringBuilder.append(array[i]);\n                    count ++;\n                }else{\n                    stringBuilder.append(\" \").append(array[i]);\n            }\n            }\n        }\n        if(count == 0)\n            return \"None\";\n\n        return stringBuilder.toString();\n    }\n\n    /**\n     * Return the difference value of 2 personality;\n     * @param l\n     * @param r\n     * @return\n     */\n    private static int PersonalityMatching(String l,String r){\n        int len = l.length();\n        int diff = 0;\n        for(int i=0;i&lt;len;i++){\n            char lc = l.charAt(i);\n            char rc = r.charAt(i);\n            if(checkUnmatch(lc, rc)==false){\n                diff += Math.abs(lc - rc);\n            }else{\n                return -1;\n            }\n        }\n        return diff;\n    }\n\n    private static boolean checkUnmatch(char c1,char c2){\n        if(c2 == 'E' &amp;&amp; (c1=='A'||c1 =='B'||c1 =='C'))\n            return true;\n        else if(c1 == 'E' &amp;&amp; (c2=='A'||c2 =='B'||c2 =='C'))\n            return true;\n        else if(c1 == 'B' &amp;&amp; c2 == 'D')\n            return true;\n        else if(c2 == 'B' &amp;&amp; c1 == 'D')\n            return true;\n        return false;\n    }\n\n    public static void main(String[] args) {\n        // Add your test cases here\n        String[] matrix = {\n            \"AAAAAA\", \"BBBBBB\", \"ABDDEB\"\n        };\n        System.out.println(solution(6,3,\"ABCDEA\",matrix));\n        System.out.println(solution(6, 3, \"ABCDEA\", matrix).equals(\"ABDDEB\"));\n    }\n}\n</code></pre>"},{"location":"Interview/LeetCode/2-Week1/#2_1","title":"\u98982 \u4e8c\u53c9\u6811\u5c55\u5f00\u4e3a\u94fe\u8868","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"Interview/LeetCode/2-Week1/#_4","title":"\u9898\u89e3","text":"<p>\u8fd9\u9898\u5f88\u7b80\u5355\uff0c\u5c31\u662f\u6811\u7684\u524d\u5e8f\u904d\u5386\uff0c\u8fd9\u91cc\u6211\u7528\u4e00\u4e2a<code>queue</code>\u961f\u5217\u6765\u8bb0\u5f55\u904d\u5386\u7684\u987a\u5e8f\uff0c\u7136\u540e\u6309\u7167\u987a\u5e8f\u8f93\u51fa\u5373\u53ef\u3002</p>"},{"location":"Interview/LeetCode/2-Week1/#code_3","title":"Code","text":"<pre><code>/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void flatten(TreeNode* root) {  \n        if(root == nullptr)\n            return;\n        queue&lt;TreeNode*&gt; q;\n        traversalQueue(root,q);\n        TreeNode* ptr = root;\n        q.pop();\n        while(!q.empty()){\n            auto node = q.front();\n            q.pop();\n            ptr-&gt;right = node;\n            ptr-&gt;left = nullptr;\n            ptr = node;\n        }\n    }\n\nprivate :\n    void traversalQueue(TreeNode* node, queue&lt;TreeNode*&gt; &amp;q){\n        q.push(node);\n        if(node-&gt;left!=nullptr)\n            traversalQueue(node-&gt;left,q);\n        if(node-&gt;right!=nullptr)\n            traversalQueue(node-&gt;right,q);\n        return ;\n    }\n};\n</code></pre>"},{"location":"Interview/LeetCode/2-Week1/#23","title":"2\u67083\u65e5","text":""},{"location":"Interview/LeetCode/2-Week1/#1_2","title":"\u98981 \u6e38\u620f\u961f\u53cb\u641c\u7d22","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"Interview/LeetCode/2-Week1/#_5","title":"\u9898\u89e3","text":"<p>\u8fd9\u9898\u6ca1\u4ec0\u4e48\u597d\u8bb2\u7684\uff0c\u6211\u7684\u601d\u8def\u5c31\u662f\u8bb0\u5f55\u4e0b target id\u7684\u6240\u6709\u53c2\u4e0e\u8fc7\u7684\u6bd4\u8d5b\u573a\u6b21\uff0c\u7136\u540e\u770b\u6709\u6ca1\u6709\u5176\u4ed6\u7684\u961f\u53cb\u53c2\u4e0e\u8fc7\u8fd9\u4e2a\u6bd4\u8d5b\u573a\u6b21\u5373\u53ef\u3002</p>"},{"location":"Interview/LeetCode/2-Week1/#code_4","title":"Code","text":"<pre><code>import java.util.*;\n\npublic class Main {\n    public static void main(String[] args) {\n        // Add your test cases here\n        System.out.println(\n                Arrays.equals(\n                        solution(1, 10,\n                                new int[][] {\n                                        { 1, 1 }, { 1, 2 }, { 1, 3 }, { 2, 1 }, { 2, 4 }, { 3, 2 },\n                                        { 4, 1 }, { 4, 2 }, { 5, 2 }, { 5, 3 }\n                                }),\n                        new int[] { 4, 5 }));\n    }\n\n    public static int[] solution(int id, int num, int[][] array) {\n        // Edit your code here\n        int len = array.length;\n        // we need to orders;\n        Set&lt;Integer&gt; set = new TreeSet&lt;&gt;();\n        Set&lt;Integer&gt; idSet = new HashSet&lt;&gt;();\n        Map&lt;Integer,Integer&gt; mp = new HashMap&lt;&gt;();\n        // Here we record all the pair of the id;\n        for(int i=0;i&lt;len;i++){\n            if(array[i][0] == id){\n                idSet.add(array[i][1]);\n            }        \n        }\n\n        for(int i=0;i&lt;len;i++){\n             if(array[i][0]!=id &amp;&amp; idSet.contains(array[i][1])){\n                if(mp.containsKey(array[i][0])){\n                     set.add(array[i][0]);       \n                }else{\n                        mp.put(array[i][0], 1);\n                }\n             }\n        }\n\n        int [] temp = new int[set.size()];\n        int index = 0;\n        for(Integer it : set){\n           temp[index++] = it;\n        }\n        return temp;\n    }\n}\n</code></pre>"},{"location":"Interview/LeetCode/2-Week1/#2_2","title":"\u98982 \u628a\u4e8c\u53c9\u641c\u7d22\u6811\u8f6c\u5316\u4e3a\u7d2f\u52a0\u6811","text":"<p>\u9898\u76ee\u94fe\u63a5</p>"},{"location":"Interview/LeetCode/2-Week1/#_6","title":"\u9898\u89e3","text":"<p>\u8fd9\u9898\u6211\u7528\u4e24\u79cd\u601d\u8def\u6765\u5b9e\u73b0\uff0c\u867d\u7136\u90fd\u662f\u9012\u5f52\uff0c\u4e00\u79cd\u662f\u4ece\u6700\u53f3\u8fb9\u7684\u8282\u70b9\u5f00\u59cb\u9010\u6b65\u7d2f\u52a0\uff0c\u8fd8\u6709\u4e00\u79cd\u601d\u8def\u5c31\u662f\u7528\u6574\u4e2a\u6811\u7684\u8282\u70b9\u4e4b\u548c\uff0c\u51cf\u53bb\u5de6\u5b50\u6811\u7684\u8282\u70b9\u4e4b\u548c\u5373\u53ef\u3002\u603b\u7684\u601d\u8def\u90fd\u662f\u7ef4\u62a4\u4e00\u4e2a <code>sum</code> \u5168\u5c40\u53d8\u91cf\u3002</p>"},{"location":"Interview/LeetCode/2-Week1/#code-1","title":"Code 1","text":"<pre><code>class Solution {\npublic:\n    TreeNode* convertBST(TreeNode* root) { \n        if(root == nullptr)\n            return nullptr;\n        int sum = sumBST(root);   \n        travelBST(root, sum);\n        return root;\n    }\n\nprivate:\n    void travelBST(TreeNode* root,int &amp;sum){\n        if(root-&gt;left == nullptr &amp;&amp; root-&gt;right == nullptr){\n            int temp = root-&gt;val;\n            root-&gt;val = sum;\n            sum -= temp;\n            return ; \n        }\n        if(root-&gt;left!=nullptr){\n            travelBST(root-&gt;left,sum);\n        }\n        int temp = root-&gt;val;\n        root-&gt;val = sum;\n        sum -= temp;\n        if(root-&gt;right !=nullptr){\n            travelBST(root-&gt;right,sum);\n        }\n        return ;\n    }\n\n    /**\n     * Return the right sum of the node;\n     */\n    int sumBST(TreeNode* root){\n        if(root-&gt;left == nullptr &amp;&amp; root-&gt;right == nullptr)\n            return root-&gt;val;\n        int sum = root-&gt;val;\n        if(root-&gt;right !=nullptr)\n            sum += sumBST(root-&gt;right);\n        if(root-&gt;left !=nullptr)\n            sum += sumBST(root-&gt;left);\n        return sum; \n    }\n};\n</code></pre> <p>\u6211\u8fd9\u4e2a\u89e3\u6cd5\u662f\u7ef4\u62a4\u4e00\u4e2a <code>sum</code> \u53d8\u91cf\uff0c\u7136\u540e\u9012\u5f52\u7684\u53bb\u904d\u5386\u6574\u4e2a\u6811\uff0c\u7136\u540e\u9010\u6b65\u7d2f\u52a0\u5373\u53ef\u3002\u7c7b\u4f3c\u5df2\u7ecf\u6709\u4e00\u4e2a\u6240\u6709\u8282\u70b9\u7684\u96c6\u5408\uff0c\u7136\u540e\u5728\u5229\u7528\u524d\u5e8f\u904d\u5386\u7684\u601d\u8def\uff0c\u9010\u6b65\u5220\u53bb\u5df2\u7ecf\u904d\u5386\u7684\u8282\u70b9\u5373\u53ef\u3002\u4f46\u8fd8\u662f\u4e0d\u591f\u7b80\u6d01\uff0c\u56e0\u4e3a\u904d\u5386\u4e86\u4e24\u6b21\u6811\u3002</p>"},{"location":"Interview/LeetCode/2-Week1/#code-2","title":"Code 2","text":"<pre><code>class Solution {\npublic:\n    TreeNode* convertBST(TreeNode* root) { \n        dfs(root);\n        return root;\n    }\n\nprivate:\n    int sum = 0;\n    void dfs(TreeNode* root){\n        if(root == nullptr)\n            return ;\n        if(root-&gt;right!=nullptr){\n            dfs(root-&gt;right);\n        }\n\n        sum += root-&gt;val;\n        root-&gt;val = sum;\n\n        if(root-&gt;left!=nullptr){\n            dfs(root-&gt;left);\n        }\n    }\n};\n</code></pre> <p>\u8fd9\u4e2a\u601d\u8def\u5c31\u66f4\u7b80\u5355\u4e86\uff0c\u800c\u4e14\u53ea\u9700\u8981\u904d\u5386\u4e00\u6b21\u6811\u5373\u53ef\u3002\u6211\u4eec\u8981\u505a\u7684\u5c31\u662f\u4ece\u6700\u53f3\u8fb9\u7684\u6700\u4e0b\u9762\u7684\u8282\u70b9\u5f00\u59cb\u7d2f\u52a0\uff0c\u7136\u540e\u9010\u6b65\u5411\u4e0a\u7d2f\u52a0\u5373\u53ef\u3002</p>"},{"location":"Interview/LeetCode/2-Week1/#24","title":"2\u67084\u65e5","text":""},{"location":"Interview/LeetCode/2-Week1/#1_3","title":"\u98981 \u4e8c\u53c9\u6811\u4f9b\u6696\u5668","text":"<p>\u8fd9\u9898\u6bd4\u8f83\u56f0\u96be\uff0c\u56f0\u4f4f\u6211\u6bd4\u8f83\u4e45,\u4e3b\u8981\u662f\u81ea\u5df1\u4e00\u5f00\u59cb\u628a\u95ee\u9898\u60f3\u7684\u8fc7\u7b80\u5355\u4e86</p> <p>\u9898\u76ee\u94fe\u63a5 </p>"},{"location":"Interview/LeetCode/2-Week1/#_7","title":"\u9898\u89e3","text":"<p>\u8fd9\u9898\u7684\u601d\u8def\u4e3b\u8981\u662f\u5206\u4e3a\u4e24\u90e8\u5206:</p> <ul> <li>\u5efa\u6811\uff0c\u901a\u8fc7\u7ed9\u7684\u5c42\u5e8f\u904d\u5386\u7684\u6570\u7ec4\u8fdb\u884c\u4e8c\u53c9\u6811\u7684\u5efa\u7acb</li> <li>\u5229\u7528\u8d2a\u5fc3\u6765\u8fdb\u884c\u9012\u5f52\u7684\u4f9b\u6696\u5668\u7684\u653e\u7f6e</li> </ul>"},{"location":"Interview/LeetCode/2-Week1/#_8","title":"\u5efa\u6811","text":"<p>\u9996\u5148\u662f\u5c42\u5e8f\u904d\u5386\u6765\u8fdb\u884c\u5efa\u6811\uff0c\u6211\u4eec\u4f7f\u7528 <code>BFS</code> \u6765\u6a21\u62df\u5c42\u5e8f\u904d\u5386\uff0c\u6839\u636e\u63d0\u4f9b\u7684\u6570\u7ec4\u6765\u5efa\u7acb\u4e8c\u53c9\u6811\u3002\u53ea\u9700\u8981\u4e00\u4e2a<code>index</code> \u6765\u4f5c\u4e3a\u6570\u7ec4\u7684\u7d22\u5f15\u5373\u53ef\u3002\u7136\u540e\u4e00\u4e2a\u961f\u5217\u6765\u5b58\u653e\u5f53\u524d\u8bbf\u95ee\u5230\u7684\u8282\u70b9\u5373\u53ef\u3002\u6211\u4eec\u90fd\u8ba9\u9ed8\u8ba4\u7684\u8282\u70b9\u503c\u4e3a <code>0</code>\u3002\u56e0\u4e3a\u540e\u7eed\u8282\u70b9\u503c\u662f\u6709\u7528\u7684\uff0c\u4f1a\u8fdb\u884c\u7edf\u4e00\u7684\u8bbe\u7f6e\u3002</p>"},{"location":"Interview/LeetCode/2-Week1/#_9","title":"\u4f9b\u6696\u5668\u7684\u653e\u7f6e","text":"<p>\u9996\u5148\uff0c\u6211\u4eec\u8981\u77e5\u9053\u7684\u662f\uff0c\u4f9b\u6696\u671f\u7684\u6027\u8d28 \u53ef\u4ee5\u8ba9\u81ea\u5df1\u7684\u8282\u70b9\uff0c\u81ea\u5df1\u7684\u7236\u8282\u70b9\uff0c\u4ee5\u53ca\u4e24\u4e2a\u81ea\u5df1\u7684\u5b50\u8282\u70b9\u90fd\u80fd\u63a5\u6536\u5230\u4f9b\u6696\u3002\u90a3\u4e48\u6211\u4eec\u9996\u5148\u5bf9 <code>val</code> \u503c\u8fdb\u884c\u8bbe\u7f6e</p> <ul> <li><code>val == 0</code> \u8868\u793a\u7684\u662f\u8fd9\u4e2a\u8282\u70b9\uff0c\u6211\u4eec\u8fdb\u884c\u4e86\u5e03\u7f6e\u4f9b\u6696\u5668</li> <li><code>val == 1</code> \u8868\u793a\u7684\u662f\u8fd9\u4e2a\u8282\u70b9\uff0c\u6211\u4eec\u6ca1\u6709\u5e03\u7f6e\u4f9b\u6696\u5668 , \u4f46\u662f\u4f9b\u6696\u4eab\u53d7\u5230\u4e86</li> <li><code>val == 2</code> \u8868\u793a\u7684\u662f\u8fd9\u4e2a\u8282\u70b9\uff0c\u6ca1\u6709\u4eab\u53d7\u5230\u4f9b\u6696\uff0c\u4e5f\u6ca1\u6709\u5e03\u7f6e\u4f9b\u6696\u5668</li> </ul> <p>\u7136\u540e\u6211\u4eec\u8981\u8003\u8651\u5230\u662f\u6700\u5c0f\u7684\u6570\u76ee\uff0c\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a\u8d2a\u5fc3\u7684\u601d\u60f3\u3002\u6211\u4eec\u9996\u5148\u77e5\u9053\uff0c\u4e00\u4e2a\u8282\u70b9\u5982\u679c\u5b89\u88c5\u4e86\u4f9b\u6696\uff0c\u90a3\u4e48\u5b83\u53ef\u4ee5\u8ba9\u4e0e\u81ea\u5df1\u94fe\u63a5\u6709\u5173\u7684\u6700\u76f4\u63a5\u7684\u4e09\u5c42\u90fd\u80fd\u4eab\u53d7\u5230\u4f9b\u6696\u3002\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u5229\u7528\u8fd9\u4e2a\u6027\u8d28\u6765\u8fdb\u884c\u9012\u5f52\u7684\u5224\u65ad\u3002\u9996\u5148\uff0c\u6211\u4eec\u7684\u60f3\u6cd5\u5c31\u662f \u53f6\u5b50 \u8282\u70b9\u4e0d\u63d0\u4f9b\u4f9b\u6696\u3002\u53cd\u800c\u8ba9\u7236\u8282\u70b9\u6765\u63d0\u4f9b\u3002\u5982\u679c\u8ba9\u53f6\u8282\u70b9\u6765\u63d0\u4f9b\u4f9b\u6696\u7684\u8bdd\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u4f1a\u727a\u7272\u4e86\u4e00\u5c42\u7684\u4f9b\u6696\u3002\u6240\u4ee5\u6211\u4eec\u7684\u601d\u8def\u5c31\u662f\uff0c\u4ece\u53f6\u8282\u70b9\u5f00\u59cb\uff0c\u9010\u6b65\u5411\u4e0a\u8fdb\u884c\u9012\u5f52\u7684\u5224\u65ad\u3002 \u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u6211\u4eec\u8fd9\u91cc\u9009\u62e9\u540e\u5e8f\u904d\u5386\u6811\uff0c\u6700\u540e\u518d\u5224\u65ad \u6839\u8282\u70b9</p> <p>\u63a5\u4e0b\u6765\u7684\u5c31\u662f\u7b80\u5355\u7684 case \u5224\u65ad:</p> <ul> <li>Step1: \u8c03\u7528 <code>postorderTree</code> \u51fd\u6570\u6765\u83b7\u53d6 \u5de6\u53f3\u5b50\u6811\u7684\u4f9b\u6696\u60c5\u51b5\uff0c\u5982\u679c\u662f\u7a7a\u7684\u8282\u70b9\uff0c\u6211\u4eec\u90fd\u9ed8\u8ba4\u5b83\u4eec\u5df2\u7ecf\u88ab\u4f9b\u6696\u4e86\u3002</li> <li> <p>Step2:  </p> <ul> <li>Case 1: <code>left == 1 &amp;&amp; right == 1</code> \u8868\u793a\u7684\u662f\u5de6\u53f3\u5b50\u6811\u90fd\u88ab\u4f9b\u6696\u4e86\uff0c\u4f46\u662f\u6ca1\u6709\u4f9b\u6696\u5668\u3002\u56e0\u4e3a\u6211\u4eec\u662f\u4ece\u53f6\u8282\u70b9\u5f00\u59cb\u7684\u904d\u5386\uff0c\u6240\u4ee5\u8fd9\u91cc\u5c31\u4e0d\u53ef\u80fd\u662f\u7531\u7236\u8282\u70b9\u6765\u63d0\u4f9b\u7684\u4f9b\u6696\uff0c\u4e5f\u5c31\u662f\u8bf4\u8fd9\u4e24\u4e2a\u8282\u70b9\u4eab\u53d7\u5230\u7684\u4f9b\u6696\u90fd\u662f\u7531\u81ea\u5df1\u7684\u5b50\u8282\u70b9\u6765\u63d0\u4f9b\u7684\u3002\u6240\u4ee5\u6211\u4eec\u5c31\u8bbe\u7f6e <code>root.val = 2</code>;\u8868\u793a\u7684\u662f\u8fd9\u4e2a\u8282\u70b9\u6ca1\u6709\u88ab\u4f9b\u6696\u3002</li> <li>Case 2: <code>left == 2 || right == 2</code> \u8868\u793a\u7684\u662f\u5de6\u53f3\u5b50\u6811\u6709\u4e00\u4e2a\u6ca1\u6709\u88ab\u4f9b\u6696\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u9700\u8981\u5728\u8fd9\u4e2a\u8282\u70b9\u4e0a\u5b89\u88c5\u4f9b\u6696\u5668\u3002\u6240\u4ee5\u6211\u4eec\u5c31\u8bbe\u7f6e <code>root.val = 0</code> \u8868\u793a\u7684\u662f\u8fd9\u4e2a\u8282\u70b9\u88ab\u4f9b\u6696\u4e86\u3002\u540c\u65f6\u9700\u8981 <code>result++</code> \u8868\u793a\u7684\u662f\u6211\u4eec\u5b89\u88c5\u4e86\u4e00\u4e2a\u4f9b\u6696\u5668\u3002</li> <li>Case 3: <code>left == 0 || right == 0</code> \u8868\u793a\u7684\u662f\u5de6\u53f3\u5b50\u6811\u6709\u4e00\u4e2a\u8282\u70b9\u88ab\u4f9b\u6696\u4e86\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u4e0d\u9700\u8981\u5728\u8fd9\u4e2a\u8282\u70b9\u4e0a\u5b89\u88c5\u4f9b\u6696\u5668\u3002\u6240\u4ee5\u6211\u4eec\u5c31\u8bbe\u7f6e <code>root.val = 1</code> \u8868\u793a\u7684\u662f\u8fd9\u4e2a\u8282\u70b9\u6ca1\u6709\u88ab\u4f9b\u6696\uff0c\u4f46\u662f\u4eab\u53d7\u5230\u4e86\u4f9b\u6696\u3002</li> </ul> </li> <li> <p>Step3 : \u8fd4\u56de\u503c\u3002\u6211\u4eec\u5728\u5bf9 <code>postorderTree(root)</code> \u7684\u65f6\u5019\uff0c\u4e5f\u8981\u6700\u540e\u5224\u65ad\u4e00\u4e0b\u6211\u4eec\u7684<code>root</code>\u7684\u53d7\u5230\u4f9b\u6696\u7684\u60c5\u51b5\uff0c\u5982\u679c\u662f <code>2</code> \u7684\u8bdd\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u9700\u8981\u5b89\u88c5\u4e00\u4e2a\u4f9b\u6696\u5668\u3002\u6240\u4ee5\u6211\u4eec\u5c31\u9700\u8981 <code>result++</code> \u8868\u793a\u7684\u662f\u6211\u4eec\u5b89\u88c5\u4e86\u4e00\u4e2a\u4f9b\u6696\u5668\u3002 </p> </li> </ul> <p>\u5176\u5b9e\u903b\u8f91\u662f\u7b80\u5355\u7684\uff0c\u4f46\u662f\u81ea\u5df1\u597d\u50cf\u628a\u95ee\u9898\u60f3\u7684\u53e6\u4e00\u79cd\u60c5\u51b5\uff0c\u5bfc\u81f4\u4e86\u81ea\u5df1\u7684\u601d\u8def\u4e0d\u591f\u6e05\u6670\u3002</p>"},{"location":"Interview/LeetCode/2-Week1/#code_5","title":"Code","text":"<pre><code>import java.util.LinkedList;\nimport java.util.Queue;\nimport java.util.Stack;\n\nclass Node{\n        int val;\n        Node left;\n        Node right;\n        public Node(int val){\n            this.val = val;\n            left = null;\n            right = null;\n        }\n    }\n\npublic class Main {\n\n    public static int solution(int[] nodes) {\n        // Please write your code here\n        result = 0;\n        Node root = buildTree(nodes);\n\n        if(postorderTree(root) == 2){\n            result++;\n        }\n        return result;\n    }\n\n    static int result = 0;\n    public static Node buildTree(int[] nodes){\n        // Base case\n        if(nodes == null || nodes[0] == 0)\n            return null;\n\n        Node root = new Node(0);\n        Queue&lt;Node&gt; queue = new LinkedList&lt;&gt;();\n        queue.offer(root);\n\n        int i = 1;    \n        int len = nodes.length;\n        while(!queue.isEmpty()&amp;&amp; i &lt; len){\n            Node current = queue.peek();\n            queue.poll();\n\n            // we find the node has left node;\n            if(i&lt;len &amp;&amp; nodes[i] == 1){\n                current.left = new Node(0);\n                queue.offer(current.left);\n            }\n            i++;\n\n            // we find the node has right node;\n            if(i&lt;len&amp;&amp;nodes[i] ==1){\n                current.right = new Node(0);\n                queue.offer(current.right);\n            }\n            i++;\n        }\n        return root;\n    }\n\n    /**\n     * 3 state:\n     * 0 -&gt; \u5df2\u7ecf\u5b89\u88c5\u4e0a\u4f9b\u6696;\n     * 1 -&gt; \u8e6d\u5230\u4e86\uff0c\u672a\u5b89\u88c5;\n     * 2 -&gt; \u672a\u4f9b\u6696;\n     * @param root\n     * @return\n     */\n    public static int postorderTree(Node root){\n        // The null node represents it has been offered warm;\n        if(root == null)\n            return 1;\n\n        int left = postorderTree(root.left);\n\n        int right = postorderTree(root.right);\n\n        // it turns to the root;\n        if(left == 1 &amp;&amp; right == 1){\n            return 2;\n        }\n\n        if(left == 2 || right == 2){\n            result++;\n            return 0;\n        }\n\n        if(left == 0 || right == 0 )\n            return 1;\n\n        return 1;\n    }\n\n\n\n    public static void main(String[] args) {\n        //  You can add more test cases here\n        int[] nodes1 = {1, 1, 0, 1, 1};\n        int[] nodes2 = {1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1};\n        int[] nodes3 = {1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1};\n\n        System.out.println(solution(nodes1) == 1);\n        System.out.println(solution(nodes2) == 3);\n        System.out.println(solution(nodes3) == 3);\n    }\n}\n</code></pre>"},{"location":"Interview/Project/RPCFrameWork/Introduce/","title":"\u624b\u5199RPC\u6846\u67b6","text":"<p>\u9879\u76ee\u94fe\u63a5</p>"},{"location":"Interview/Project/RPCFrameWork/Introduce/#introduce","title":"Introduce","text":"<p>RPC (Remote Procedure Call) \u8fdc\u7a0b\u8fc7\u7a0b\u8c03\u7528\uff0c\u662f\u4e00\u79cd\u901a\u8fc7\u7f51\u7edc\u4ece\u8fdc\u7a0b\u8ba1\u7b97\u673a\u7a0b\u5e8f\u4e0a\u8bf7\u6c42\u670d\u52a1\uff0c\u800c\u4e0d\u9700\u8981\u4e86\u89e3\u5e95\u5c42\u7f51\u7edc\u6280\u672f\u7684\u534f\u8bae\u3002RPC\u534f\u8bae\u5047\u5b9a\u67d0\u4e9b\u4f20\u8f93\u534f\u8bae\u7684\u5b58\u5728\uff0c\u5982TCP\u6216UDP\uff0c\u4e3a\u901a\u4fe1\u7a0b\u5e8f\u4e4b\u95f4\u643a\u5e26\u4fe1\u606f\u6570\u636e\u3002\u5728OSI\u7f51\u7edc\u901a\u4fe1\u6a21\u578b\u4e2d\uff0cRPC\u8de8\u8d8a\u4e86\u4f20\u8f93\u5c42\u548c\u5e94\u7528\u5c42\u3002</p> <p>\u76ee\u7684\u5c31\u662f\u4f7f\u5f97\u5f00\u53d1\u8005\u53ef\u4ee5\u8f7b\u677e\u8c03\u7528\u8fdc\u7a0b\u670d\u52a1\uff0c\u5feb\u901f\u5f00\u53d1\u5206\u5e03\u5f0f\u7cfb\u7edf\u3002</p> <p>\u9996\u5148\uff0c\u6211\u4eec\u8981\u660e\u767d\uff0c\u5728RPC\u6846\u67b6\u4e2d\u6709\u4e24\u4e2a\u91cd\u8981\u7684\u6982\u5ff5\uff1a \u90a3\u5c31\u662f \u670d\u52a1\u63d0\u4f9b\u8005 \u548c \u670d\u52a1\u6d88\u8d39\u8005\u3002\u6211\u4eec\u9700\u8981\u505a\u7684\u5c31\u662f\u4e3a\u8fd9\u4e24\u4e2a\u89d2\u8272\u63d0\u4f9b\u4e00\u4e2a\u901a\u7528\u7684\u6846\u67b6\uff0c\u4f7f\u5f97\u4ed6\u4eec\u53ef\u4ee5\u8f7b\u677e\u7684\u8c03\u7528\u8fdc\u7a0b\u670d\u52a1\u3002</p> <p>\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u7406\u89e3\uff0c\u6d88\u8d39\u8005\u60f3\u8981\u8c03\u7528\u63d0\u4f9b\u8005\uff0c\u5c31\u9700\u8981\u63d0\u4f9b\u8005\u542f\u52a8\u4e00\u4e2a<code>web\u670d\u52a1</code>\uff0c\u7136\u540e\u901a\u8fc7<code>request</code>\u53d1\u9001<code>HTTP</code>\u6216\u8005\u5176\u4ed6\u7684\u534f\u8bae\u8bf7\u6c42\u6765\u8c03\u7528\u3002</p> <p></p> <p>\u5176\u6b21\uff0c\u6211\u4eec\u518d\u60f3\u4e00\u4e2a\u95ee\u9898\u3002\u5982\u679c\u63d0\u4f9b\u8005\u63d0\u4f9b\u4e86\u8bb8\u591a\u7684\u670d\u52a1\u548c\u65b9\u6cd5\uff0c\u90a3\u4e48\u6d88\u8d39\u8005\u5982\u4f55\u77e5\u9053\u63d0\u4f9b\u8005\u63d0\u4f9b\u4e86\u54ea\u4e9b\u670d\u52a1\u5462\uff1f\u8fd9\u5c31\u9700\u8981\u63d0\u4f9b\u8005\u63d0\u4f9b\u4e00\u4e2a\u670d\u52a1\u6ce8\u518c\u4e2d\u5fc3\uff0c\u5c06\u81ea\u5df1\u63d0\u4f9b\u7684\u670d\u52a1\u6ce8\u518c\u5230\u670d\u52a1\u6ce8\u518c\u4e2d\u5fc3\uff0c\u6d88\u8d39\u8005\u901a\u8fc7\u670d\u52a1\u6ce8\u518c\u4e2d\u5fc3\u83b7\u53d6\u63d0\u4f9b\u8005\u63d0\u4f9b\u7684\u670d\u52a1\u3002</p> <p>\u7b80\u5355\u7684\u7406\u89e3\u5c31\u662f \u63d0\u4f9b\u8005\u63d0\u4f9b\u4e86\u4e00\u4e2a <code>\u8bf7\u6c42\u670d\u52a1\u5668</code> \u6839\u636e\u5ba2\u6237\u7aef\u7684\u8bf7\u6c42\u53c2\u6570\u6765\u8fdb\u884c\u4e0d\u540c\u7684\u5904\u7406\u548c\u8c03\u7528\u4e0d\u540c\u7684\u670d\u52a1\u548c\u65b9\u6cd5\u3002</p> <p>An example : \u6d88\u8d39\u8005\u8981\u8c03\u7528 <code>orderService</code> \u670d\u52a1\u7684<code>order</code>\u65b9\u6cd5\uff0c\u53ef\u4ee5\u53d1\u9001\u8bf7\u6c42\uff0c\u53c2\u6570\u4e3a <code>service = orderService\uff0cmethod=order</code>,\u7136\u540e\u8bf7\u6c42\u5904\u7406\u5668\u4f1a\u6839\u636e<code>service</code>\u4ece\u670d\u52a1\u6ce8\u518c\u5668\u4e2d\u627e\u5230\u5bf9\u5e94\u7684\u670d\u52a1\u5b9e\u73b0\u7c7b\uff0c\u5e76\u4e14\u901a\u8fc7<code>Java</code>\u7684\u53cd\u5c04\u673a\u5236\u8c03\u7528<code>method</code>\u6307\u5b9a\u7684\u65b9\u6cd5\u3002</p> <p>\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u7531\u4e8eJava\u5bf9\u8c61\u65e0\u6cd5\u76f4\u63a5\u5728\u7f51\u7edc\u4e2d\u4f20\u8f93\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u9700\u8981\u5c06\u4f20\u8f93\u7684\u53c2\u6570\u8fdb\u884c\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u64cd\u4f5c\u3002</p> <p>\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u5c31\u7b80\u5355\u7684\u628aRPC\u6846\u67b6\u7684\u6d41\u7a0b\u56fe\u7ed9\u641e\u5b9a\u4e86\u3002 </p> <p>\u4e0a\u56fe\u53ea\u662f\u7b80\u6613\u7684 RPC\u6846\u67b6 \u4e8b\u5b9e\u4e0a\u9700\u8981\u8003\u8651\u7684\u95ee\u9898\u8fd8\u6709\u5f88\u591a\u3002\u6211\u4eec\u5148\u8fdb\u884c\u4e00\u4e2a\u7b80\u5355\u7684\u5b9e\u73b0\uff0c\u7136\u540e\u518d\u8fdb\u884c\u4f18\u5316\u3002</p> <p>\u63a5\u4e0b\u6765\u662f RPC \u6846\u67b6\u7684\u5b9e\u73b0 \u9996\u5148\uff0c\u6211\u4eec\u521b\u5efa\u4e86\u4e00\u4e2a Java\u7684\u5de5\u7a0b\u9879\u76ee\uff0c\u7136\u540e\u521b\u5efa\u4e86\u4ee5\u4e0b\u7684\u51e0\u4e2a\u6a21\u5757\uff1a</p> <p><code>rpc-common</code> : \u5b58\u653e\u7684\u662f\u516c\u5171\u6a21\u5757,\u9700\u8981\u540c\u65f6\u88ab\u6d88\u8d39\u8005\u548c\u670d\u52a1\u8005\u5f15\u5165\uff0c\u4e3b\u8981\u662f\u7f16\u5199\u548c\u670d\u52a1\u76f8\u5173\u7684\u63a5\u53e3\u548c\u6570\u636e\u7c7b\u578b\u3002 <code>rpc-consumer</code> : \u5b58\u653e\u7684\u662f\u6d88\u8d39\u8005\u6a21\u5757 <code>rpc-productor</code> : \u5b58\u653e\u7684\u662f\u63d0\u4f9b\u8005\u6a21\u5757 <code>rpc-easy</code> : \u7528\u4e8e\u5b58\u653e\u7b80\u5355\u7684\u5b9e\u73b0\u6a21\u5757\u7528\u6765\u6d4b\u8bd5</p> <p>\u9996\u5148\u8981\u505a\u7684\u5c31\u662f\u7ed9\u6bcf\u4e2a\u6a21\u5757\u52a0\u4e0a\u4f9d\u8d56\uff0c\u4e3b\u8981\u7684\u662f\u8ba9\u4ed6\u4eec\u6a21\u5757\u4e4b\u95f4\u53ef\u4ee5\u76f8\u4e92\u8c03\u7528\u3002\u5176\u6b21\uff0c\u6211\u4eec\u5728<code>rpc-easy</code>\u6a21\u5757\uff0c\u5f15\u5165\u4e86<code>Vertx</code> \u6846\u67b6\uff0c\u8fd9\u4e2a\u662f\u4e00\u4e2aNIO \u975e\u963b\u585e\u7684\u9ad8\u6027\u80fd\u6846\u67b6\u3002 </p> <p>\u6ce8\u518c\u4e2d\u5fc3\uff1a \u6ce8\u518c\u4e2d\u5fc3\u662f\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\u5f88\u91cd\u8981\u7684\u7ec4\u4ef6\uff0c\u4e3b\u8981\u8d1f\u8d23\u7684\u662f\u670d\u52a1\u7684\u6ce8\u518c\u4e0e\u53d1\u73b0\uff0c\u5b83\u5e2e\u52a9\u670d\u52a1\u63d0\u4f9b\u8005\u548c\u6d88\u8d39\u8005\u52a8\u6001\u7684\u627e\u5230\u5f7c\u6b64\uff0c\u786e\u4fdd\u7cfb\u7edf\u7684\u9ad8\u53ef\u7528\u6027\u548c\u53ef\u62d3\u5c55\u6027\u3002\u5c31\u662f\u5b83\u63d0\u4f9b\u4e86\u4e00\u4e2a\u4e2d\u95f4\u5e73\u53f0\uff0c\u8ba9\u670d\u52a1\u63d0\u4f9b\u8005\u548c\u6d88\u8d39\u8005\u53ef\u4ee5\u76f8\u4e92\u6ce8\u518c\u548c\u53d1\u73b0\u3002</p> <p>\u5728 RPC\u6846\u67b6 \u4e2d\u53c8\u51fa\u73b0\u4e86\u7f13\u5b58\u8fd9\u4e2a\u6982\u5ff5\u3002\u6211\u4eec\u8fd9\u91cc\u533a\u5206\u4e24\u4e2a\u6982\u5ff5: - \u672c\u5730\u670d\u52a1\u6ce8\u518c\u5668 - \u6ce8\u518c\u4e2d\u5fc3</p> <p></p>"},{"location":"Interview/Project/RPCFrameWork/Introduce/#_1","title":"\u5e8f\u5217\u5316\u4e0e\u53cd\u5e8f\u5217\u5316","text":"<p>\u56e0\u4e3a Java \u5bf9\u8c61\u662f\u5b58\u6d3b\u4e8e JVM \u865a\u62df\u673a\u4e2d\u7684\uff0c\u5982\u679c\u60f3\u8981\u5728\u5176\u4ed6\u4f4d\u7f6e\u50a8\u5b58\u5e76\u8bbf\u95ee\uff0c\u6216\u8005\u5728\u7f51\u7edc\u4e2d\u8fdb\u884c\u4f20\u8f93\uff0c\u65e0\u8bba\u662f\u54cd\u5e94\u8fd8\u662f\u8bf7\u6c42\uff0c\u90fd\u9700\u8981\u8fdb\u884c\u5e8f\u5217\u5316\u4e0e\u53cd\u5e8f\u5217\u5316\u3002</p>"},{"location":"Interview/Project/RPCFrameWork/Introduce/#_2","title":"\u8bf7\u6c42\u5904\u7406\u5668","text":"<p>\u8bf7\u6c42\u5904\u7406\u5668\u662f\u4e00\u4e2a\u6838\u5fc3\u7684\u7ec4\u4ef6\uff0c\u4e3b\u8981\u8d1f\u8d23\u5904\u7406\u6d88\u8d39\u8005\u7684\u8bf7\u6c42\uff0c\u6839\u636e\u8bf7\u6c42\u7684\u53c2\u6570\u6765\u8c03\u7528\u5bf9\u5e94\u7684\u670d\u52a1\u548c\u65b9\u6cd5\u3002 \u6211\u4eec\u770b\u4e0b\u9762\u7684\u4ee3\u7801\uff1a <pre><code>        // \u521b\u5efa\u4e00\u4e2a \u76d1\u542c\u7aef\u53e3\u5e76\u5904\u7406\u8bf7\u6c42\u7684\u5bf9\u8c61\n        server.requestHandler(new HttpServerHandler());\n\n       // \u5904\u7406\u8bf7\u6c42\n       server.requestHandler(request -&gt;{\n           // \u5904\u7406 HTTP \u8bf7\u6c42\n           // request.uri() return the source of request\n           System.out.println(\"Received request \" + request.method() + \" \"+ request.uri());\n\n           // \u53d1\u9001\u54cd\u5e94\u8bf7\u6c42\n           // \u5982\u679c\u6b63\u786e\u5730\u63a5\u53d7\u4e86\u8bf7\u6c42\uff0c\u6211\u4eec\u5c06\u8fd4\u56de\u4e00\u4e2a\u6210\u529f\u54cd\u5e94;\n           request.response().putHeader(\"content-type\", \"text/plain\").end(\"Hello from Vert.x HTTP Server\");\n       });\n</code></pre></p> <p>\u4e0a\u4e0b\u4e24\u6bb5\u90fd\u662f\u8fdb\u884c\u903b\u8f91\u8bf7\u6c42\u5904\u7406\u7684\u5185\u5bb9\uff0c\u4e0a\u9762\u662f\u901a\u8fc7\u4f20\u5165\u6211\u4eec\u5c01\u88c5\u6bb5\u4e00\u4e2a <code>HttpServerHandler</code>\u7684\u5bf9\u8c61\uff0c\u4f46\u662f\u540e\u9762\u6211\u4eec\u662f\u76f4\u63a5\u5728<code>requestHandler</code>\u4e2d\u81ea\u5df1\u6a21\u62df\u4e86\u4e00\u4e2a\u5bf9\u8c61\u3002\u4f46\u540e\u7eed\u7684\u4ee3\u7801\u6211\u4eec\u4f1a\u8fdb\u884c\u7b2c\u4e00\u79cd\u60c5\u51b5\u3002\u590d\u7528\u6027\u66f4\u597d\uff0c\u5c3d\u91cf\u7684\u51cf\u5c11\u8026\u5408\u3002</p>"},{"location":"Interview/Project/RPCFrameWork/Introduce/#_3","title":"\u8bf7\u6c42\u5904\u7406\u5668\u7684\u5c01\u88c5","text":"<pre><code>public class HttpServerHandler implements Handler&lt;HttpServerRequest&gt; {\n    /**\n     * This class is used to handler the request from the client.\n     * 1. \u53cd\u5e8f\u5217\u5316\u8bf7\u6c42\u4e3a\u5bf9\u8c61\uff0c\u5e76\u4ece\u8bf7\u6c42\u5bf9\u8c61\u4e2d\u83b7\u53d6\u53c2\u6570\n     * 2. \u6839\u636e\u670d\u52a1\u540d\u79f0\u4ece\u672c\u5730\u6ce8\u518c\u4e2d\u5fc3\u83b7\u53d6\u670d\u52a1\u5b9e\u4f8b\n     * 3. \u53cd\u5c04\u8c03\u7528\u670d\u52a1\u5b9e\u4f8b\u7684\u65b9\u6cd5\n     * 4. \u5c06\u8c03\u7528\u7ed3\u679c\u5c01\u88c5\u4e3a\u54cd\u5e94\u5bf9\u8c61\u5e76\u5e8f\u5217\u5316\u8fd4\u56de\n     */\n    @Override\n    public void handle(HttpServerRequest request) {\n        // \u6307\u5b9a\u5e8f\u5217\u5316\u5668\u76bf\n        final Serializer serializer = new JdkSerializer();\n\n        // \u8bb0\u5f55\u65e5\u5fd7\n        System.out.println(\"Received request \" + request.method() + \" \" + request.uri());\n\n        // \u5f02\u6b65\u5904\u7406HTTP\u8bf7\u6c42\n        request.bodyHandler(body -&gt; {\n            byte[] bytes = body.getBytes();\n            RpcRequest rpcRequest = null;\n            try {\n                rpcRequest = serializer.deserialize(bytes, RpcRequest.class);\n            } catch (Exception e) {\n                e.printStackTrace();\n            }\n\n            // \u6784\u9020\u54cd\u5e94\u7ed3\u679c\u5bf9\u8c61\n            RpcResponse rpcResponse = new RpcResponse();\n\n            if (rpcRequest == null) {\n                rpcResponse.setMessage(\"Request is null\");\n                doResponse(request, rpcResponse, serializer);\n                return;\n            }\n\n            // \u901a\u8fc7\u53cd\u5c04\u65b9\u6cd5\u8c03\u7528\u670d\u52a1\u5668\u7aef\u7684\u65b9\u6cd5\n            try{\n                Class&lt;?&gt; implClass = LocalRegister.get(rpcRequest.getServiceName());\n                // \u56e0\u4e3a\u6211\u4eec\u662f\u901a\u8fc7\u53cd\u5c04\u6765\u5bfb\u627e\uff0c\u4e5f\u5c31\u662f\u51fd\u6570\u6807\u7b7e -&gt; \u51fd\u6570\u540d\u5b57 + \u53c2\u6570\u7c7b\u578b \u6765\u627e\u5230\u67d0\u4e2a\u8bbe\u5907\u4e2d\u7684\u51fd\u6570\n                Method method = implClass.getMethod(rpcRequest.getMethodName(), rpcRequest.getParameterTypes());\n                Object result = method.invoke(implClass.newInstance(),rpcRequest.getArgs());\n\n                // \u5c01\u88c5\u8fd4\u56de\u7684\u7ed3\u679c\n                rpcResponse.setData(result);\n                rpcResponse.setDataType(method.getReturnType());\n                rpcResponse.setData(\"ok\");\n            }catch (Exception e){\n                e.printStackTrace();\n                rpcResponse.setMessage(e.getMessage());\n                rpcResponse.setException(e);\n            }\n\n            // \u5904\u7406\u54cd\u5e94\u7ed3\u679c\n            doResponse(request, rpcResponse, serializer);\n        });\n    }\n\n    /**\n     * \u5904\u7406\u54cd\u5e94\u7ed3\u679c\n     * @param request\n     * @param rpcResponse\n     * @param serializer\n     */\n    void doResponse(HttpServerRequest request, RpcResponse rpcResponse, Serializer serializer) {\n        // \u5e8f\u5217\u5316\u54cd\u5e94\u7ed3\u679c\uff0c\u5e76\u4e14\u901a\u8fc7HTTP\u54cd\u5e94\u8fd4\u56de\u7ed9\u5ba2\u6237\u7aef\u3002\n        HttpServerResponse httpServerResponse = request.response().putHeader(\"content-type\", \"application/json\");\n        try{\n            byte[] serialized = serializer.serialize(rpcResponse);\n            httpServerResponse.end(Buffer.buffer(serialized));\n        } catch (IOException e) {\n            e.printStackTrace();\n            httpServerResponse.end(Buffer.buffer());\n        }\n    }\n}\n</code></pre> <p>\u9996\u5148\uff0c\u6211\u4eec\u53ef\u4ee5\u60f3\u4e00\u60f3\u8fd9\u4e2a\u8bf7\u6c42\u5904\u7406\u5668\u7c7b\u7684\u903b\u8f91\uff1a 1. \u9996\u5148\u662f\u9700\u8981\u53cd\u5e8f\u5217\u5316\u8bf7\u6c42\u4e3a\u5bf9\u8c61\uff0c\u5e76\u4e14\u4ece\u4e2d\u83b7\u53d6\u53c2\u6570\u548c\u670d\u52a1\u540d\u79f0\u3002 2. \u7136\u540e\u901a\u8fc7\u670d\u52a1\u540d\u79f0\u5728\u672c\u5730\u6ce8\u518c\u4e2d\u5fc3\u4e2d\u83b7\u53d6\u5bf9\u5e94\u7684\u670d\u52a1\u5b9e\u4f8b 3. \u901a\u8fc7\u53cd\u5c04\u8c03\u7528\u670d\u52a1\u5b9e\u4f8b\u7684\u65b9\u6cd5 4. \u5c06\u8c03\u7528\u7ed3\u679c\u5c01\u88c5\u4e3a\u54cd\u5e94\u5bf9\u8c61\u5e76\u5e8f\u5217\u5316\u8fd4\u56de</p> <p>\u903b\u8f91\u5f88\u6e05\u695a\uff0c\u6211\u4eec\u5c31\u6309\u7167\u8fd9\u4e9b\u903b\u8f91\u6765\u8fdb\u884c\u4ee3\u7801\u7684\u7f16\u5199\u3002 \u540c\u65f6\u6709\u51e0\u4e2a\u9700\u8981\u6ce8\u610f\u7684\u70b9\uff1a 1. \u4e0d\u540c\u7684web\u670d\u52a1\u5668\u5bf9\u5e94\u7684\u8bf7\u6c42\u7684\u5904\u7406\u5668\u5b9e\u73b0\u7684\u65b9\u5f0f\u662f\u4e0d\u540c\u7684\uff0c\u6bd4\u5982<code>Vert.x</code>\u4e2d\u662f\u5229\u7528\u5b9e\u73b0 <code>Handler&lt;HttpServerRequest&gt;</code> \u63a5\u53e3\u6765\u81ea\u5b9a\u4e49\u8bf7\u6c42\u5904\u7406\u5668\u3002\u5e76\u4e14\u53ef\u4ee5\u901a\u8fc7<code>request.bodyHandler</code>\u6765\u5904\u7406\u5f02\u6b65\u7684\u8bf7\u6c42\u3002</p>"},{"location":"Interview/Project/RPCFrameWork/Introduce/#-","title":"\u6d88\u8d39\u8005\u53d1\u8d77\u8c03\u7528 -- \u4ee3\u7406","text":"<p>\u6211\u4eec\u4e0a\u9762\u4e3b\u8981\u5b9e\u73b0\u7684\u662f\u63d0\u4f9b\u8005\u7684\u670d\u52a1\uff0c\u90a3\u4e48\u63a5\u4e0b\u6765\u5c31\u662f\u6d88\u8d39\u8005\u7684\u670d\u52a1\u4e86\u3002</p>"},{"location":"Interview/Project/RPCFrameWork/Introduce/#_4","title":"\u9759\u6001\u4ee3\u7406","text":"<p>\u9759\u6001\u4ee3\u7406\u662f\u6307\u4e3a\u6bcf\u4e00\u4e2a\u7279\u5b9a\u7c7b\u578b\u7684\u63a5\u53e3\u6216\u5bf9\u8c61\uff0c\u7f16\u5199\u4e00\u4e2a\u4ee3\u7406\u7c7b\u3002 \u4f46\u9759\u6001\u4ee3\u7406\u7684\u7f3a\u70b9\u4e5f\u5f88\u660e\u663e\uff0c\u6211\u4eec\u8981\u7ed9\u6bcf\u4e00\u4e2a\u670d\u52a1\u63a5\u53e3\u90fd\u5199\u4e00\u4e2a\u5b9e\u73b0\u7c7b\uff0c\u4f46\u8fd9\u6837\u7684\u7075\u6d3b\u6027\u5f88\u5dee\u3002\u6240\u4ee5\u6211\u4eec\u9009\u62e9\u52a8\u6001\u4ee3\u7406\u3002</p> <pre><code>public class UserServiceProxy implements UserService {\n\n    @Override\n    public User getUser(User user) {\n        // Serialize the object;\n        Serializer serializer = new JdkSerializer();\n\n        // \u53d1\u9001\u8bf7\u6c42\n        // -&gt; \u6784\u9020\u4e86\u4e00\u4e2a rpcRequest \u5bf9\u8c61,\u5229\u7528 @Builder \u6ce8\u89e3\n        RpcRequest rpcRequest = RpcRequest.builder()\n                .serviceName(UserService.class.getName())\n                .methodName(\"getUser\")\n                .parameterTypes(new Class&lt;?&gt;[]{User.class})\n                .args(new Object[]{user})\n                .build();\n\n        try{\n            byte[] bodyBytes = serializer.serialize(rpcRequest);\n            // \u53d1\u9001\u8bf7\u6c42\n            byte[] result;\n\n            // \u6a21\u62df\u4e86\u4e00\u4e2a HTTP \u8bf7\u6c42\u7684\u8fc7\u7a0b;\n            try(HttpResponse httpResponse = HttpRequest.post(\"http://localhost:8080/\")\n                    .header(\"Content-Type\", \"application/json\")\n                    .body(bodyBytes)\n                    .execute()){\n                result = httpResponse.bodyBytes();\n            }\n            RpcResponse rpcResponse = serializer.deserialize(result, RpcResponse.class);\n            return (User) rpcResponse.getData();\n\n        }catch(Exception e){\n            e.printStackTrace();\n        }\n\n        return null;\n    }\n}\n</code></pre>"},{"location":"Interview/Project/RPCFrameWork/Introduce/#_5","title":"\u52a8\u6001\u4ee3\u7406","text":"<p>\u52a8\u6001\u4ee3\u7406\u662f\u6307\u5728\u8fd0\u884c\u65f6\u52a8\u6001\u751f\u6210\u4ee3\u7406\u7c7b\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u4e0d\u7528\u4e3a\u6bcf\u4e00\u4e2a\u670d\u52a1\u63a5\u53e3\u90fd\u5199\u4e00\u4e2a\u5b9e\u73b0\u7c7b\u3002 \u6211\u4eec\u6839\u636e\u8981\u751f\u6210\u7684\u5bf9\u8c61\u7c7b\u578b\uff0c\u81ea\u52a8\u751f\u6210\u4e00\u4e2a\u4ee3\u7406\u5bf9\u8c61\u3002\u4e5f\u5c31\u662f\u751f\u6210\u4e00\u4e2a\u53ef\u4ee5\u4ee3\u66ff\u6a21\u62dfHTTP\u8bf7\u6c42\u7684\u5bf9\u8c61\u3002</p>"},{"location":"Interview/Project/RPCFrameWork/Introduce/#_6","title":"\u5de5\u5382\u7684\u8bbe\u8ba1\u6a21\u5f0f","text":"<p>\u7565\uff0c\u540e\u9762\u518d\u8865\u5145\u3002</p>"},{"location":"Interview/Project/RPCFrameWork/Introduce/#_7","title":"\u8bbe\u7f6e\u5168\u5c40\u914d\u7f6e","text":"<p>\u56e0\u4e3a\u4e00\u5f00\u59cb\u6211\u4eec\u5728\u7b80\u6613\u7684\u7248\u672c\u4e2d\u5728\u7a0b\u5e8f\u91cc\u786c\u7f16\u7801\u4e86\u8fd9\u4e9b\u914d\u7f6e\uff0c\u4e0d\u5229\u4e8e\u7ef4\u62a4\uff0c\u800c\u4e14\u5177\u6709\u8f83\u4f4e\u7684\u590d\u7528\u6027\u3002\u6240\u4ee5\u6211\u4eec\u5e94\u5f53\u5141\u8bb8\u5728\u5f15\u5165\u6846\u67b6\u9879\u76ee\u901a\u8fc7\u7f16\u5199\u914d\u7f6e\u6587\u4ef6\u6765\u81ea\u5b9a\u4e49\u914d\u7f6e\u3002 \u4e00\u822c\u60c5\u51b5\u6765\u8bf4\uff0c\u670d\u52a1\u7684\u6d88\u8d39\u8005\u548c\u63d0\u4f9b\u8005\u5e94\u8be5\u662f\u5177\u6709\u76f8\u540c\u7684RPC\u914d\u7f6e</p>"},{"location":"Interview/Project/RPCFrameWork/Introduce/#_8","title":"\u8bbe\u8ba1\u65b9\u6848","text":"<p>\u9996\u5148\uff0c\u6211\u4eec\u65b0\u5efa\u4e00\u4e2aModule\u4e3a<code>rpc-core</code>\u7528\u4e8e\u5b58\u653e\u62d3\u5c55\u7248\u672c\u7684RPC\u6846\u67b6\u3002  \u4e8e\u662f\uff0c\u6211\u4eec\u5728\u6a21\u5757\u4e2d\u65b0\u5efa\u4e86\u4e00\u4e2a\u5305\u4e3a<code>utils</code>\u7528\u4e8e\u5b58\u653e\u5de5\u5177\u7c7b\u3002\u5e76\u4e14\u5b9a\u4e49\u4e86\u4e00\u4e2a<code>rpcConfig</code> \u51fd\u6570\u7528\u4e8e\u4fdd\u5b58\u914d\u7f6e\u4fe1\u606f\u3002</p>"},{"location":"Interview/Project/RPCFrameWork/Introduce/#rpccoreutilsrpcconfigjava","title":"<code>rpcCore/utils/RpcConfig.java</code>","text":"<p>\u4e00\u5f00\u59cb\uff0c\u6211\u4eec\u4ec5\u8003\u8651\u6bd4\u8f83\u7b80\u5355\u7684\u914d\u7f6e\u6587\u4ef6</p> <ul> <li><code>name</code> : \u8bbe\u5907\u540d\u79f0</li> <li><code>version</code> : \u7248\u672c\u53f7</li> <li><code>serveHost</code> : \u670d\u52a1\u5668\u4e3b\u673a\u53f7</li> <li><code>servePort</code> : \u670d\u52a1\u5668\u7aef\u53e3\u53f7</li> </ul>"},{"location":"Interview/Project/RPCFrameWork/Introduce/#mock","title":"Mock \u8bbe\u7f6e","text":"<p>Mock \u7684\u4f5c\u7528\u662f\u5728\u5b9e\u9645\u5f00\u53d1\u548c\u6d4b\u8bd5\u7684\u8fc7\u7a0b\u4e2d\u53ef\u80fd\u4f1a\u51fa\u73b0\u65e0\u6cd5\u76f4\u63a5\u8bbf\u95ee\u771f\u5b9e\u7684\u8fdc\u7a0b\u670d\u52a1\uff0c\u6216\u8005\u8bbf\u95ee\u771f\u5b9e\u7684\u8fdc\u7a0b\u670d\u52a1\u4f1a\u51fa\u73b0\u4e0d\u53ef\u63a7\u7684\u5f71\u54cd\uff0c\u4f8b\u5982\u7f51\u7edc\u5ef6\u8fdf\uff0c\u670d\u52a1\u4e0d\u7a33\u5b9a\u7b49\u95ee\u9898\uff0c\u6240\u4ee5\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u9700\u8981\u7528mock\u670d\u52a1\u6765\u6a21\u62df\u8fdc\u7a0b\u670d\u52a1\u7684\u884c\u4e3a\u3002\u4ee5\u4fbf\u8fdb\u884c\u63a5\u53e3\u7684\u6d4b\u8bd5\u3001\u5f00\u53d1\u548c\u8c03\u8bd5\u3002</p>"},{"location":"Interview/Project/RPCFrameWork/Introduce/#_9","title":"\u52a8\u6001\u4ee3\u7406","text":"<p>\u52a8\u6001\u521b\u5efa\u5bf9\u8c61\u7684\u65b9\u6cd5 -- \u52a8\u6001\u4ee3\u7406\uff0c\u521b\u5efa\u8fdc\u7a0b\u8c03\u7528\u5bf9\u8c61\uff0c\u6211\u4eec\u901a\u8fc7\u52a8\u6001\u4ee3\u7406\u521b\u5efa\u4e00\u4e2a \u8c03\u7528\u65b9\u6cd5\u7684\u65f6\u5019\u8fd4\u56de\u56fa\u5b9a\u503c \u7684\u5bf9\u8c61\u3002</p>"},{"location":"Interview/Project/RPCFrameWork/Introduce/#spi","title":"\u5e8f\u5217\u5316\u5668\u4e0eSPI\u673a\u5236","text":"<p>\u65e0\u8bba\u662f\u8bf7\u6c42\u6216\u8005\u662f\u54cd\u5e94\uff0c\u90fd\u4f1a\u6d89\u53ca\u53c2\u6570\u7684\u4f20\u8f93\u3002\u800cJava\u7684\u5bf9\u8c61\u662f\u5b58\u6d3b\u5728JVM\u865a\u62df\u673a\u4e2d\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u5982\u679c\u60f3\u8981\u5728\u5176\u4ed6\u7684\u4f4d\u7f6e\u8fdb\u884c\u5b58\u50a8\u5e76\u8bbf\u95ee\uff0c\u6216\u8005\u5728\u7f51\u7edc\u4e2d\u8fdb\u884c\u4f20\u8f93\uff0c\u5c31\u9700\u8981\u8fdb\u884c\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u64cd\u4f5c\u3002</p>"},{"location":"Interview/Project/RPCFrameWork/Introduce/#_10","title":"\u8fd8\u9700\u8981\u8003\u8651\u7684\u95ee\u9898\uff1a","text":"<ul> <li>\u6709\u6ca1\u6709\u66f4\u597d\u7684\u5e8f\u5217\u5316\u5668\u5b9e\u73b0\u65b9\u5f0f</li> <li>\u5982\u4f55\u8ba9\u4f7f\u7528\u8005\u6307\u5b9a\u4f7f\u7528\u7684\u5e8f\u5217\u5316\u5668</li> <li>\u5982\u4f55\u8ba9\u4f7f\u7528\u6846\u67b6\u7684\u4f7f\u7528\u8005\u81ea\u5df1\u5b9a\u5236\u5e8f\u5217\u5316\u5668</li> </ul>"},{"location":"Interview/Project/RPCFrameWork/Introduce/#_11","title":"\u51e0\u79cd\u4e3b\u6d41\u7684\u5e8f\u5217\u5316\u65b9\u5f0f","text":"<ul> <li>JSON</li> <li>\u4f18\u70b9\uff1a\u901a\u7528\u6027\u597d\uff0c\u53ef\u8bfb\u6027\u597d</li> <li>\u7f3a\u70b9\uff1a\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u6548\u7387\u4f4e\uff0c\u56e0\u4e3a</li> </ul>"},{"location":"Interview/Project/RPCFrameWork/Introduce/#_12","title":"\u52a8\u6001\u7684\u66f4\u6539\u6307\u5b9a\u7684\u5e8f\u5217\u5316\u65b9\u5f0f","text":"<p>-&gt; \u4ec5\u4ec5\u9700\u8981\u66f4\u6539\u914d\u7f6e\u6587\u4ef6\u7684\u9009\u9879\uff0c\u4ece\u800c\u53ef\u4ee5\u81ea\u5df1\u5b9a\u4e49\u6307\u5b9a\u5bf9\u5e94\u7684\u5e8f\u5217\u5316\u5668</p> <p>\u5bf9\u4e8e\u6240\u6709\u53ef\u81ea\u5b9a\u4e49\u9009\u9879\u7684\uff0c\u6211\u4eec\u90fd\u53ef\u4ee5\u901a\u8fc7\u914d\u7f6e\u6587\u4ef6\u6765\u8fdb\u884c\u914d\u7f6e\uff0c\u7136\u540e\u901a\u8fc7\u8bfb\u53d6\u914d\u7f6e\u6587\u4ef6\u7684\u65b9\u5f0f\u6765\u8fdb\u884c\u81ea\u5b9a\u4e49\u9009\u62e9\u3002</p>"},{"location":"Interview/Project/RPCFrameWork/Introduce/#spi_1","title":"\u81ea\u5b9a\u4e49\u5e8f\u5217\u5316\u5668 SPI \u673a\u5236","text":"<p>BackGround: \u5982\u679c\u5f00\u53d1\u8005\u4e0d\u60f3\u4f7f\u7528\u6211\u4eec\u6846\u67b6\u5185\u5185\u7f6e\u7684\u5e8f\u5217\u5316\u5668\uff0c\u60f3\u8981\u81ea\u5df1\u5b9a\u4e49\u4e00\u4e2a\u65b0\u7684\u5e8f\u5217\u5316\u5668\uff0c\u4f46\u662f\u53c8\u4e0d\u80fd\u4fee\u6539\u6211\u4eec\u7684\u6e90\u7801\uff0c\u8fd9\u4e2a\u65f6\u5019\u5c31\u9700\u8981\u4f7f\u7528SPI\u673a\u5236\u3002</p> <p>SPI \u673a\u5236 \uff1a Service Provider Interface \u670d\u52a1\u63d0\u4f9b\u63a5\u53e3\uff0c\u662fJava\u63d0\u4f9b\u7684\u4e00\u5957\u7528\u6765\u88ab\u7b2c\u4e09\u65b9\u5b9e\u73b0\u6216\u8005\u6269\u5c55\u7684API\u3002\u5b83\u53ef\u4ee5\u7528\u6765\u542f\u7528\u6846\u67b6\u7684\u6269\u5c55\u548c\u66ff\u6362\u7ec4\u4ef6\u3002\u7b80\u5355\u7684\u6765\u8bf4\u5c31\u662f\u5141\u8bb8\u670d\u52a1\u63d0\u4f9b\u8005\u901a\u8fc7\u7279\u5b9a\u7684\u914d\u7f6e\u6587\u4ef6\u5c06\u81ea\u5df1\u5b9a\u4e49\u7684\u5b9e\u73b0\u7c7b\u6ce8\u518c\u5230\u7cfb\u7edf\u4e2d\uff0c\u7136\u540e\u7cfb\u7edf\u901a\u8fc7\u53cd\u5c04\u673a\u5236\u52a8\u6001\u52a0\u8f7d\u8fd9\u4e9b\u5b9e\u73b0\u7c7b\uff0c\u800c\u4e0d\u9700\u8981\u4fee\u6539\u539f\u59cb\u6846\u67b6\u4ee3\u7801\uff0c\u4ece\u800c\u5b9e\u73b0\u7c7b\u7cfb\u7edf\u7684\u89e3\u8026</p> <p>\u4e00\u4e2a\u5178\u578b\u7684SPI\u5e94\u7528\u573a\u666f\u5c31\u662fJDBC\u7684\u4f7f\u7528\uff0c\u4e0d\u540c\u7684\u6570\u636e\u5e93\u9a71\u52a8\u7a0b\u5e8f\u5f00\u53d1\u8005\u53ef\u4ee5\u4f7f\u7528SPI\u673a\u5236\u5c06\u81ea\u5df1\u7684\u9a71\u52a8\u7a0b\u5e8f\u6ce8\u518c\u5230JVM\u4e2d\uff0c\u7136\u540eJVM\u901a\u8fc7\u53cd\u5c04\u673a\u5236\u52a8\u6001\u52a0\u8f7d\u8fd9\u4e9b\u9a71\u52a8\u7a0b\u5e8f\uff0c\u4ece\u800c\u5b9e\u73b0\u4e86\u6570\u636e\u5e93\u9a71\u52a8\u7a0b\u5e8f\u7684\u89e3\u8026\u3002</p> <p>\u601d\u8def\u5f88\u7b80\u5355\uff0c\u53ea\u9700\u8981RPC\u6846\u67b6\u80fd\u591f\u8bfb\u53d6\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u7c7b\u7684\u8def\u5f84\uff0c\u7136\u540e\u52a0\u8f7d\u8fd9\u4e2a\u7c7b\uff0c\u4f5c\u4e3aSerializer\u7684\u5b9e\u73b0\u7c7b\u3002</p>"},{"location":"Interview/Project/RPCFrameWork/Introduce/#_13","title":"\u6ce8\u518c\u4e2d\u5fc3","text":""},{"location":"Interview/Project/RPCFrameWork/Introduce/#_14","title":"\u6ce8\u518c\u4e2d\u5fc3\u6838\u5fc3\u80fd\u529b","text":"<ol> <li>\u6570\u636e\u5206\u5e03\u5f0f\u5b58\u50a8\uff1a\u96c6\u4e2d\u7684\u6ce8\u518c\u4fe1\u606f\u6570\u636e\u5b58\u50a8/\u8bfb\u53d6/\u5171\u4eab</li> <li>\u670d\u52a1\u6ce8\u518c\uff1a\u670d\u52a1\u63d0\u4f9b\u8005\u4e0a\u62a5\u670d\u52a1\u4fe1\u606f\u5230\u6ce8\u518c\u4e2d\u5fc3</li> <li>\u670d\u52a1\u53d1\u73b0\uff1a\u670d\u52a1\u6d88\u8d39\u8005\u4ece\u6ce8\u518c\u4e2d\u5fc3\u83b7\u53d6\u670d\u52a1\u4fe1\u606f</li> <li>\u5fc3\u8df3\u68c0\u6d4b\uff1a\u6ce8\u518c\u4e2d\u5fc3\u5b9a\u65f6\u68c0\u6d4b\u670d\u52a1\u63d0\u4f9b\u8005\u7684\u5b58\u6d3b\u72b6\u6001</li> <li>\u670d\u52a1\u6ce8\u9500\uff1a\u670d\u52a1\u63d0\u4f9b\u8005\u4e0b\u7ebf\u65f6\uff0c\u4ece\u6ce8\u518c\u4e2d\u5fc3\u5220\u9664\u670d\u52a1\u4fe1\u606f</li> </ol>"},{"location":"Interview/Project/RPCFrameWork/Introduce/#_15","title":"\u4e2d\u95f4\u4ef6\u7684\u9009\u53d6","text":"<p>\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u53ef\u4ee5\u96c6\u4e2d\u5b58\u50a8\u548c\u8bfb\u53d6\u6570\u636e\u7684\u4e2d\u95f4\u4ef6\uff0c\u8fd8\u5177\u6709\u6570\u636e\u8fc7\u671f\u3001\u6570\u636e\u76d1\u542c\u7684\u529f\u80fd\uff0c\u4ee5\u4fbf\u6211\u4eec\u8fdb\u884c\u79fb\u9664\u5931\u6548\u7684\u8282\u70b9\uff0c\u66f4\u65b0\u8282\u70b9\u5217\u8868\u3002</p> <p>\u6211\u4eec\u5728RPC\u6846\u67b6\u4e2d\u9009\u62e9\u7684\u662f <code>Ectd</code> \u4e91\u539f\u751f\u7ec4\u4ef6\u3002</p> <p><code>Ectd</code>\u4e2d\u5177\u6709\u4e24\u4e2a\u7279\u6027\uff1a</p> <ol> <li>\u79df\u7ea6: \u7528\u4e8e\u7ef4\u6301\u952e\u503c\u5bf9\u7684\u751f\u547d\u5468\u671f\uff0c\u5f53\u79df\u7ea6\u5230\u671f\u65f6\uff0c\u5bf9\u5e94\u7684\u952e\u503c\u5bf9\u5c06\u88ab\u5220\u9664</li> <li>\u76d1\u542c: \u53ef\u4ee5\u76d1\u542c\u952e\u503c\u5bf9\u7684\u53d8\u5316\uff0c\u5f53\u952e\u503c\u5bf9\u53d1\u751f\u53d8\u5316\u65f6\uff0c\u53ef\u4ee5\u53ca\u65f6\u901a\u77e5\u76d1\u542c\u8005</li> </ol> <p>\u53e6\u5916\uff0c<code>Ectd</code> \u8fd8\u6709\u4e00\u4e2a\u5f3a\u4e00\u81f4\u6027\u7684\u4f18\u52bf</p>"},{"location":"Interview/Project/RPCFrameWork/Introduce/#raft","title":"Raft\u4e00\u81f4\u6027\u7b97\u6cd5","text":"<p>\u65e8\u5728\u5b9e\u73b0\u4e00\u4e2a\u5bb9\u9519\u4e14\u4e00\u81f4\u7684\u5206\u5e03\u5f0f\u7cfb\u7edf\u7684\u65e5\u5fd7\u590d\u5236\u673a\u5236\uff0c\u5176\u6838\u5fc3\u76ee\u6807\u5c31\u662f\u8ba9\u4e00\u7ec4\u8282\u70b9\u5728\u90e8\u5206\u8282\u70b9\u53d1\u751f\u6545\u969c\u7684\u65f6\u5019\uff0c\u4f9d\u7136\u80fd\u591f\u5bf9\u5916\u63d0\u4f9b\u4e00\u81f4\u7684\u670d\u52a1\u3002</p> <ul> <li>\u96c6\u7fa4\u89d2\u8272</li> <li>Leader \u96c6\u7fa4\u4e2d\u7684\u4e3b\u8282\u70b9\uff0c\u8d1f\u8d23\u5904\u7406\u5ba2\u6237\u7aef\u8bf7\u6c42\uff0c\u5c06\u65e5\u5fd7\u590d\u5236\u5230\u5176\u4ed6\u8282\u70b9</li> <li>Follower \u96c6\u7fa4\u4e2d\u7684\u4ece\u8282\u70b9\uff0c\u8d1f\u8d23\u63a5\u6536Leader\u7684\u65e5\u5fd7\uff0c\u5e76\u4e14\u6301\u4e45\u5316\u5230\u672c\u5730</li> <li> <p>Candidate \u96c6\u7fa4\u4e2d\u7684\u5019\u9009\u4eba\uff0c\u8d1f\u8d23\u9009\u4e3eLeader</p> </li> <li> <p>\u65e5\u5fd7\u590d\u5236     Raft\u901a\u8fc7\u5c06\u65e5\u5fd7\u4eceLeader\u590d\u5236\u5230Follower\uff0c\u786e\u4fdd\u6240\u6709\u8282\u70b9\u7684\u65e5\u5fd7\u987a\u5e8f\u4e00\u81f4\u3002\u65e5\u5fd7\u6761\u76ee\u6700\u7ec8\u88ab\u63d0\u4ea4\u540e\uff0c\u72b6\u6001\u673a\u5e94\u7528\u8fd9\u4e9b\u65e5\u5fd7\u4ee5\u4fdd\u6301\u4e00\u81f4\u6027\u3002</p> </li> <li> <p>\u9009\u4e3e\u673a\u5236 \u5f53\u96c6\u7fa4\u4e2d\u7684Leader\u5931\u6548\u65f6\uff0cFollower\u4f1a\u8d85\u65f6\u5e76\u53d1\u8d77\u9009\u4e3e\uff0c\u9009\u51fa\u4e00\u4e2a\u65b0\u7684Leader\u3002</p> </li> <li> <p>\u72b6\u6001\u4e00\u81f4\u6027 Raft\u4fdd\u8bc1\u65e5\u5fd7\u6761\u76ee\u4ee5\u76f8\u540c\u7684\u987a\u5e8f\u5b58\u50a8\u5728\u6240\u6709\u8282\u70b9\u4e2d\uff0c\u5e76\u786e\u4fdd\u53ea\u5bf9\u63d0\u4ea4\u7684\u65e5\u5fd7\u6761\u76ee\u751f\u6548\u3002</p> </li> </ul> <p>\u4e5f\u5c31\u662f\uff0c\u59cb\u7ec8\u4f1a\u6709\u4e00\u4e2aLeader\u8282\u70b9\uff0c\u8d1f\u8d23\u5904\u7406\u5ba2\u6237\u7aef\u8bf7\u6c42\uff0c\u5c06\u65e5\u5fd7\u590d\u5236\u5230\u5176\u4ed6\u8282\u70b9\u3002</p>"},{"location":"Interview/Project/RPCFrameWork/Introduce/#follower","title":"Follower\u6295\u7968\u7684\u6838\u5fc3\u89c4\u5219","text":"<ol> <li>\u4efb\u671f\u89c4\u5219</li> </ol> <p>\u6bcf\u6b21\u6295\u7968\u53ea\u9488\u5bf9\u5f53\u524d\u4efb\u671f\uff08Term\uff09\u3002Follower\u4f1a\u8bb0\u5f55\u5b83\u5df2\u7ecf\u6295\u8fc7\u7968\u7684Candidate\uff0c\u5982\u679c\u67d0\u4e2aCandidate\u5728\u672c\u4efb\u671f\u5185\u5df2\u7ecf\u83b7\u5f97\u4e86Follower\u7684\u6295\u7968\uff0c\u90a3\u4e48Follower\u4e0d\u4f1a\u518d\u6295\u7968\u7ed9\u5176\u4ed6Candidate\u3002 \u5982\u679c\u6536\u5230\u7684\u6295\u7968\u8bf7\u6c42\u6765\u81ea\u4e00\u4e2a\u66f4\u9ad8\u4efb\u671f\u7684Candidate\uff0cFollower\u4f1a\u66f4\u65b0\u81ea\u5df1\u7684\u4efb\u671f\u53f7\u5e76\u8003\u8651\u6295\u7968\u3002 2. \u65e5\u5fd7\u5b8c\u6574\u6027\u68c0\u67e5</p> <p>Raft\u7684\u4e00\u4e2a\u91cd\u8981\u539f\u5219\u662f\u6295\u7968\u65f6\u4f18\u5148\u9009\u62e9\u65e5\u5fd7\u8f83\u65b0\u7684Candidate\uff0c\u4ee5\u4fdd\u8bc1\u4e00\u81f4\u6027\uff1a</p> <p>Follower\u4f1a\u6bd4\u8f83\u81ea\u5df1\u7684\u65e5\u5fd7\u548c\u8bf7\u6c42\u6295\u7968\u7684Candidate\u7684\u65e5\u5fd7\uff0c\u4f18\u5148\u5c06\u7968\u6295\u7ed9\u62e5\u6709\u66f4\u65b0\u65e5\u5fd7\u7684Candidate\u3002 \u4e24\u4e2a\u65e5\u5fd7\u8c01\u66f4\u65b0\u7684\u5224\u65ad\u4f9d\u636e\u662f\uff1a \u4efb\u671f\u53f7\uff08Term\uff09\uff1a\u6700\u540e\u4e00\u6761\u65e5\u5fd7\u7684\u4efb\u671f\u53f7\u66f4\u5927\u7684Candidate\u65e5\u5fd7\u66f4\u65b0\u3002 \u65e5\u5fd7\u957f\u5ea6\uff08Index\uff09\uff1a\u5982\u679c\u4efb\u671f\u53f7\u76f8\u540c\uff0c\u65e5\u5fd7\u66f4\u957f\u7684Candidate\u65e5\u5fd7\u66f4\u65b0\u3002 3. \u8bf7\u6c42\u6761\u4ef6 Follower\u53ea\u6709\u5728\u4ee5\u4e0b\u6761\u4ef6\u90fd\u6ee1\u8db3\u65f6\uff0c\u624d\u4f1a\u6295\u7968\u7ed9\u4e00\u4e2aCandidate\uff1a</p> <p>Candidate\u7684\u4efb\u671f\u53f7\uff08Term\uff09\u4e0d\u5c0f\u4e8eFollower\u7684\u4efb\u671f\u53f7\u3002 Candidate\u7684\u65e5\u5fd7\u81f3\u5c11\u548cFollower\u4e00\u6837\u65b0\uff08\u57fa\u4e8e\u4e0a\u8ff0\u65e5\u5fd7\u5b8c\u6574\u6027\u68c0\u67e5\u89c4\u5219\uff09\u3002 Follower\u5f53\u524d\u672a\u6295\u8fc7\u7968\uff0c\u6216\u8005\u5df2\u7ecf\u6295\u7968\u4f46\u5f53\u524d\u7684Candidate\u662f\u5176\u6295\u7968\u5bf9\u8c61\u3002</p> <p>\u7b80\u5355\u7684\u6765\u8bf4\uff0cRaft\u7b97\u6cd5\u4fdd\u8bc1\u7684\u662f\uff0c\u96c6\u7fa4\u4e2d\u7684\u5404\u4e2a\u8282\u70b9\u7684\u6295\u7968\u53ea\u4f1a\u7531\u4e24\u4e2a\u56e0\u7d20\u51b3\u5b9a\uff0c\u4e00\u4e2a\u662f\u4efb\u671f(Term) \u4e5f\u5c31\u662f\u6700\u540e\u4e00\u6761\u65e5\u5fd7\u7684\u4efb\u671f\u53f7\uff0c\u53e6\u4e00\u4e2a\u662f\u65e5\u5fd7\u7684\u957f\u5ea6(Index)\u3002\u59cb\u7ec8\u4fdd\u8bc1\u6700\u65b0\u7684\u65e5\u5fd7\u7684\u4e3aLeader\u8282\u70b9\u3002</p>"},{"location":"Interview/Project/RPCFrameWork/Introduce/#_16","title":"\u5b58\u50a8\u7ed3\u6784\u7684\u8bbe\u8ba1","text":"<p>\u8fd9\u4e9b\u90fd\u662f\u6211\u4eec\u5e94\u8be5\u8003\u8651\u7684\u95ee\u9898 - Key \u600e\u4e48\u8bbe\u8ba1\uff1f - Value \u600e\u4e48\u8bbe\u8ba1\uff1f - Key \u4ec0\u4e48\u65f6\u5019\u8fc7\u671f\uff1f </p> <p>\u4e0b\u9762\u6211\u4eec\u63d0\u4f9b\u4e86\u4e24\u79cd\u7ed3\u6784\u8bbe\u8ba1\u7684\u65b9\u6848: 1. \u5c42\u7ea7\u7ed3\u6784 \u5c06\u670d\u52a1\u7406\u89e3\u4e3a\u6587\u4ef6\u5939\uff0c\u5c06\u670d\u52a1\u5bf9\u5e94\u7684\u591a\u4e2a\u8282\u70b9\u7406\u89e3\u4e3a\u6587\u4ef6\u5939\u4e0b\u7684\u6587\u4ef6\u3002\u7528\u67e5\u524d\u7f00\u7684\u65b9\u5f0f\u6765\u8bbf\u95ee\u67d0\u4e2a\u670d\u52a1\u7684\u6240\u6709\u8282\u70b9\u3002</p> <p></p> <ol> <li>\u5217\u8868\u7ed3\u6784\uff0c\u5c06\u5de6\u53f3\u7684\u670d\u52a1\u8282\u70b9\u4ee5\u5217\u8868\u7684\u5f62\u5f0f\u6574\u4f53\u4f5c\u4e3avalue</li> </ol>"},{"location":"Interview/Project/RPCFrameWork/Introduce/#etcdkeeper","title":"etcdkeeper\u7684\u4f7f\u7528","text":"<p>Step1 : \u5148\u8fdb\u884c etcd \u7684\u5b89\u88c5 Step2 : \u8fd0\u884c etcdkeeper</p>"},{"location":"Interview/Project/RPCFrameWork/Introduce/#_17","title":"\u6ce8\u518c\u4e2d\u5fc3\u7684\u4f18\u5316","text":""},{"location":"Interview/Project/RPCFrameWork/Introduce/#_18","title":"\u5fc3\u8df3\u68c0\u6d4b\u673a\u5236 \u548c \u7eed\u8d39\u673a\u5236","text":"<ul> <li> <p>\u4ec0\u4e48\u662f\u5fc3\u8df3\u68c0\u6d4b\u673a\u5236\uff1f</p> <p>\u5b57\u9762\u610f\u601d\u5c31\u662f\u5b9a\u671f\u5224\u65ad\u670d\u52a1\u662f\u5426\u8fd8\u5b58\u6d3b\uff0c\u5982\u679c\u4e0d\u5b58\u6d3b\u4e86\uff0c\u5c31\u5c06\u5176\u4ece\u6ce8\u518c\u4e2d\u5fc3\u79fb\u9664\u3002 \u5fc3\u8df3\u68c0\u6d4b\u7684\u5e94\u7528\u573a\u666f\u975e\u5e38\u5e7f\uff0c\u5c24\u5176\u662f\u5728\u5206\u5e03\u5f0f\uff0c\u5fae\u670d\u52a1\u7684\u7cfb\u7edf\u4e2d\uff0c\u6bd4\u5982\u96c6\u7fa4\u7ba1\u7406\uff0c\u670d\u52a1\u5065\u5eb7\u68c0\u6d4b\u7b49... \u4e3b\u8981\u7684\u8fd8\u662f\u7c7b\u4f3c\u4e00\u4e2a\u8f6e\u8be2\u7684\u673a\u5236\uff0c\u5b9a\u671f\u7684\u68c0\u6d4b\u670d\u52a1\u662f\u5426\u8fd8\u5b58\u6d3b\u3002</p> <p>\u4e0b\u9762\u662f\u4e00\u4e2a\u7b80\u5355\u7684<code>HeartBeat</code>\u7684\u5b9e\u73b0: <pre><code>    @RestController\n    class HealthCheckController{\n\n        // \u5fc3\u8df3\u68c0\u6d4b\u63a5\u53e3\n        @GetMapping(\"/actuator/health\")\n        public String healthCheck(){\n            // \u8fd9\u91cc\u53ef\u4ee5\u6dfb\u52a0\u4e00\u4e9b\u5176\u4ed6\u7684\u5065\u5eb7\u68c0\u6d4b\u903b\u8f91\u3002\n            return \"ok\";\n        }\n    }\n</code></pre></p> </li> </ul> <p>\u6211\u4eecRPC\u6846\u67b6\u4e2d\u4f7f\u7528\u7684\u662f Etcd \u4e2d\u95f4\u4ef6\u4f5c\u4e3a\u6ce8\u518c\u4e2d\u5fc3\uff0c\u6240\u4ee5\u5b9e\u73b0\u5fc3\u8df3\u68c0\u6d4b\u662f\u6bd4\u8f83\u7b80\u5355\u7684\uff0c\u56e0\u4e3a<code>Etcd</code> \u81ea\u5e26\u4e86key\u7684\u8fc7\u671f\u68c0\u6d4b\u673a\u5236\u3002\u90a3\u4e48\u5fc3\u8df3\u68c0\u6d4b\u7684\u4e00\u4e2a\u6bd4\u8f83\u7b80\u5355\u7684\u5b9e\u73b0\u65b9\u5f0f\u5c31\u5f88\u81ea\u7136\u7684\u5b9e\u73b0\u4e86\uff0c\u6211\u4eec\u7ed9\u6bcf\u4e2a\u670d\u52a1\u540c\u65f6\u8bbe\u5b9a\u81ea\u52a8\u7eed\u8d39\u7684\u673a\u5236\uff0c\u91cd\u7f6e\u81ea\u5df1\u7684\u5012\u8ba1\u65f6\uff0c\u5018\u82e5\u8fd9\u4e2a\u8282\u70b9\u5df2\u7ecf\u5b95\u673a\u4e86\uff0c\u4e0d\u7eed\u8d39\uff0c\u90a3\u4e48Etcd\u5c31\u53ef\u4ee5\u5bf9\u8fd9\u4e2a\u8282\u70b9\u8fdb\u884c\u5220\u9664\u3002</p> <p>\u603b\u7684\u5b9e\u73b0\u601d\u8def\u5c31\u662f: </p> <ol> <li>\u670d\u52a1\u63d0\u4f9b\u8005\u5728\u5411 \u6ce8\u518c\u4e2d\u5fc3 \u63d0\u4f9b\u4e86\u9700\u8981\u670d\u52a1\u6ce8\u518c\u7684\u8bf7\u6c42\uff0c\u90a3\u4e48\u6ce8\u518c\u4e2d\u5fc3\u5c31\u4f1a\u6ce8\u518c\u4e00\u4e2a\u8fd9\u6837\u7684\u670d\u52a1\uff0c\u7136\u540e\u8bbe\u7f6e\u4e86\u4e00\u4e2a<code>TTL</code>\uff0c\u8fdb\u884c\u7ef4\u62a4\u8fd9\u4e2a\u670d\u52a1\u3002</li> <li>\u7b49\u8fd9\u4e2a\u670d\u52a1\u88ab\u5220\u9664\u4e86\u4e4b\u540e\uff0c\u5c31\u4f1a\u7acb\u523b\u901a\u77e5\u670d\u52a1\u6ce8\u518c\u4e2d\u5fc3\uff0c\u7136\u540e\u670d\u52a1\u6ce8\u518c\u4e2d\u5fc3\u5b9a\u671f\u5c31\u4f1a\u91cd\u65b0\u7684\u6ce8\u518c\u8fd9\u4e2a\u670d\u52a1\u3002\u503c\u5f97\u6ce8\u610f\u7684\u4e00\u70b9\u662f\uff0c\u7eed\u8d39\u65f6\u95f4\u4e0d\u80fd\u5927\u4e8e\u8fc7\u671f\u65f6\u95f4.</li> </ol> <p>\u4e00\u4e2a\u5c0f\u95ee\u9898\uff0c\u670d\u52a1\u6ce8\u518c\u8005\u600e\u4e48\u77e5\u9053\u81ea\u5df1\u5e94\u8be5\u7eed\u8d39\u4ec0\u4e48\u670d\u52a1\u5462\uff1f\u8fd9\u4e2a\u65f6\u5019\uff0c\u6211\u4eec\u5728\u6ce8\u518c\u4e2d\u5fc3\u7684Map\u5c31\u6d3e\u4e0a\u4e86\u7528\u573a\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8bbf\u95ee\u8fd9\u4e2aMap\u4e2d\u7684Key,\u90a3\u4e9b\u88ab\u5220\u9664\u7684Key\u5c31\u662f\u9700\u8981\u7eed\u8d39\u7684\u670d\u52a1\u3002</p>"},{"location":"Interview/Project/RPCFrameWork/Introduce/#_19","title":"\u65b9\u6848\u8bbe\u8ba1","text":"<p>\u9996\u5148\uff0c\u6211\u4eec\u8981\u660e\u786e\u7684\u662f\u6700\u5173\u952e\u7684\u4e24\u4e2a\u56e0\u7d20\u662f \u5b9a\u65f6 \u548c \u7f51\u7edc\u8bf7\u6c42 </p>"},{"location":"Interview/Project/RPCFrameWork/Introduce/#_20","title":"\u670d\u52a1\u8282\u70b9\u4e0b\u7ebf\u673a\u5236","text":"<p>\u5f53\u670d\u52a1\u63d0\u4f9b\u8005\u7684\u8282\u70b9\u5b95\u673a\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5e94\u8be5\u4ece\u6ce8\u518c\u4e2d\u5fc3\u4e2d\u79fb\u9664\u6389\u8fd9\u4e2a\u5df2\u7ecf\u5b95\u673a\u7684\u8282\u70b9\u3002\u5426\u5219\u7684\u8bdd\u5c31\u4f1a\u5f71\u54cd\u6d88\u8d39\u8c03\u7528\uff0c\u6240\u4ee5\u6211\u4eec\u5c31\u63d0\u4f9b\u4e86\u4e00\u5957\u670d\u52a1\u8282\u70b9\u4e0b\u7ebf\u673a\u5236\u3002</p> <ul> <li> <p>\u4e3b\u52a8\u4e0b\u7ebf </p> <p>\u6211\u4eec\u5728\u63a5\u53e3\u51fd\u6570\u4e2d\u53ea\u9700\u8981\u6307\u660e\u662f\u54ea\u4e2a\u8282\u70b9\u6211\u4eec\u9700\u8981\u4e0b\u7ebf\u5373\u53ef\u3002\u7136\u540e\u6211\u4eec\u5c31\u4f1a\u5c06\u8fd9\u4e2a\u8282\u70b9\u4ece\u6ce8\u518c\u4e2d\u5fc3\u4e2d\u79fb\u9664\u3002</p> </li> <li> <p>\u88ab\u52a8\u4e0b\u7ebf </p> <p>\u5f53\u5fc3\u8df3\u68c0\u6d4b\u7684\u65f6\u5019\u53d1\u73b0\u67d0\u4e2a\u8282\u70b9\u5df2\u7ecf\u5b95\u673a\u4e86\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5229\u7528<code>Etcd</code>\u7684<code>key</code>\u8fc7\u671f\u673a\u5236\u6765\u8fdb\u884c\u81ea\u52a8\u7684\u79fb\u9664\u3002</p> </li> </ul> <p>\u8fd9\u91cc\u8865\u5145\u4e00\u4e2a\u6709\u5173 JVM \u7684\u673a\u5236, <code>ShutDownHook</code> \u662f\u4e00\u4e2a\u7ebf\u7a0b\uff0c\u5f53 JVM \u5173\u95ed\u7684\u65f6\u5019\uff0c\u4f1a\u8c03\u7528\u8fd9\u4e2a\u7ebf\u7a0b\u3002\u6211\u4eec\u53ef\u4ee5\u5728\u8fd9\u4e2a\u7ebf\u7a0b\u4e2d\u8fdb\u884c\u4e00\u4e9b\u8d44\u6e90\u7684\u91ca\u653e\uff0c\u6bd4\u5982\u8bf4\u5173\u95ed\u4e00\u4e9b\u8fde\u63a5\uff0c\u91ca\u653e\u4e00\u4e9b\u8d44\u6e90\u7b49\u7b49\u3002</p> <p>\u6211\u4eec\u5728\u5018\u82e5\u53d1\u73b0\u4e86\u670d\u52a1\u7684\u5b95\u673a\u4e4b\u540e\uff0c\u9009\u62e9\u4e86\u76f4\u63a5\u7684\u629b\u51fa\u5f02\u5e38\uff0c\u7136\u540e\u8fd9\u91cc\u5c31\u4f7f\u7528\u5230\u4e86 <code>JVM</code> \u4e2d\u7684 <code>ShutDownHook</code> \u673a\u5236\uff0c\u76f4\u63a5\u88ab\u52a8\u7684\u5c06\u670d\u52a1\u8fdb\u884c\u4e0b\u7ebf\u3002</p>"},{"location":"Interview/Project/RPCFrameWork/Introduce/#_21","title":"\u670d\u52a1\u7aef\u7684\u7f13\u5b58","text":"<p>\u56e0\u4e3a\u6211\u4eec\u901a\u5e38\u670d\u52a1\u7684\u8282\u70b9\u66f4\u65b0\u9891\u7387\u5e76\u4e0d\u662f\u5f88\u9ad8\uff0c\u6240\u4ee5\u5728\u670d\u52a1\u6d88\u8d39\u8005\u4ece\u6ce8\u518c\u4e2d\u5fc3\u83b7\u53d6\u670d\u52a1\u5217\u8868\u7684\u65f6\u5019\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u8fd9\u4e2a\u670d\u52a1\u5217\u8868\u8fdb\u884c\u7f13\u5b58\uff0c\u7136\u540e\u5b9a\u671f\u7684\u53bb\u5237\u65b0\u8fd9\u4e2a\u7f13\u5b58\u3002\u8fd9\u6837\u7684\u8bdd\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u51cf\u5c11\u5bf9\u6ce8\u518c\u4e2d\u5fc3\u7684\u8bbf\u95ee\uff0c\u63d0\u9ad8\u4e86\u6027\u80fd\u3002</p>"},{"location":"Interview/Project/RPCFrameWork/Introduce/#1","title":"1. \u6dfb\u52a0\u672c\u5730\u7f13\u5b58","text":"<p>...</p>"},{"location":"Interview/Project/RPCFrameWork/Introduce/#_22","title":"\u81ea\u5b9a\u4e49\u534f\u8bae","text":"<p>\u9996\u5148\uff0c\u6211\u4eec\u8981\u660e\u786e\u7684\u662f <code>HTTP</code> \u534f\u8bae\u548c <code>RPC</code> \u534f\u8bae\u5176\u5b9e\u662f\u6709\u533a\u522b\u7684\u3002\u4e8c\u8005\u5e76\u4e0d\u7b49\u4ef7\uff0c\u540c\u65f6\u4e8c\u8005\u4e5f\u4e0d\u662f\u53ef\u4ee5\u5f52\u4e3a\u4e00\u7c7b\uff0c\u4e8b\u5b9e\u4e0a\u524d\u8005\u662f\u540e\u8005\u7684\u4e00\u4e2a\u5b9e\u73b0\u65b9\u5f0f\u7f62\u4e86\u3002\u4e5f\u5c31\u662f\u53ef\u4ee5\u8fd9\u6837\u7406\u89e3\uff0c\u6211\u8981\u5b8c\u6210\u4ece\u5bb6\u5230\u5b66\u6821\u7684\u8def\u7a0b\uff0c\u6211\u53ef\u4ee5\u9009\u62e9\u8d70\u8def\uff0c\u9a91\u8f66\uff0c\u5750\u8f66\u7b49\u7b49\uff0c\u8fd9\u4e9b\u90fd\u662f\u5b9e\u73b0\u65b9\u5f0f\uff0c\u4f46\u662f\u76ee\u7684\u662f\u4e00\u6837\u7684\u3002\u800c\u672c\u6b21\u5b9e\u9a8c\uff0c\u6211\u4f7f\u7528\u7684\u662f<code>Vert.x</code>\u4e2d\u7684<code>HTTPServer</code>\u4f5c\u4e3a\u670d\u52a1\u7684\u63d0\u4f9b\u8005\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u9700\u8981\u81ea\u5b9a\u4e49\u4e00\u4e2a\u534f\u8bae\u6765\u8fdb\u884c\u670d\u52a1\u7684\u8c03\u7528\u3002</p> <p>\u5f53\u7136\uff0c\u9009\u62e9<code>HTTP</code>\u662f\u4e00\u79cd\u6bd4\u8f83\u7b80\u5355\u7684\u5b9e\u73b0\u65b9\u5f0f\uff0c\u9002\u5408\u521d\u5b66\u8005\u5165\u624b\u3002\u4f46\u662f\u6211\u4eec\u8fd9\u91cc\u9009\u62e9\u4e86\u53ef\u4ee5\u81ea\u5b9a\u4e49\u7684\u6ee1\u8db3\u6211\u4eec\u7684\u9700\u6c42\u7684\u534f\u8bae\u3002<code>RPC</code>\u66f4\u4fa7\u91cd\u4e8e\u6027\u80fd\uff0c\u56e0\u4e3a\u662f\u670d\u52a1\u7684\u8c03\u7528\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u66f4\u5feb\u7684\u901f\u5ea6\uff0c\u66f4\u9ad8\u7684\u6027\u80fd\u3002</p>"},{"location":"Interview/Project/RPCFrameWork/Introduce/#load-balance","title":"\u8d1f\u8f7d\u5747\u8861 (Load Balance)","text":"<p>\u8fd9\u91cc\u63d0\u4f9b\u4e00\u7bc7\u6587\u7ae0\u53ef\u4ee5\u5b66\u4e60 Source</p>"},{"location":"Interview/Project/RPCFrameWork/Introduce/#_23","title":"\u9700\u6c42\u5206\u6790","text":"<p>\u6211\u4eec\u5728<code>RPC</code> \u6846\u67b6\u7684\u5b9e\u73b0\u4e2d\uff0c\u53ef\u4ee5\u53d1\u73b0\u6709\u4e9b\u670d\u52a1\u53ef\u4ee5\u662f\u96c6\u7fa4\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u4e00\u4e2a\u670d\u52a1\u53ef\u4ee5\u6709\u591a\u4e2a\u8282\u70b9\u8fdb\u884c\u63d0\u4f9b\u670d\u52a1\u3002\u4f46\u662f\u6211\u4eec\u4e00\u5f00\u59cb\u4e3a\u4e86\u529f\u80fd\u7684\u5b9e\u73b0\uff0c\u6bd4\u8f83\u7b80\u5355\u7684\u8fdb\u884c\u4e86\u6bcf\u6b21\u90fd\u9009\u62e9\u7b2c\u4e00\u4e2a\u8282\u70b9\u8fdb\u884c\u670d\u52a1\u3002\u8fd9\u6837\u662f\u4e0d\u597d\u7684\uff0c\u56e0\u4e3a\u8fd9\u6837\u4f1a\u5bfc\u81f4\u8d1f\u8f7d\u4e0d\u5747\u8861\uff0c\u6709\u4e9b\u8282\u70b9\u53ef\u80fd\u4f1a\u88ab\u538b\u529b\u8fc7\u5927\uff0c\u6709\u4e9b\u8282\u70b9\u53ef\u80fd\u4f1a\u88ab\u538b\u529b\u8fc7\u5c0f\u3002\u5e76\u6ca1\u6709\u5145\u5206\u5229\u7528\u8282\u70b9\u6709\u591a\u4e2a\u8fd9\u4e2a\u4f18\u52bf\u3002\u6240\u4ee5\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u8d1f\u8f7d\u5747\u8861\u7684\u673a\u5236\uff0c\u6765\u89e3\u51b3\u6bcf\u6b21\u53ea\u9009\u53d6\u7b2c\u4e00\u4e2a\u8282\u70b9\u4f5c\u4e3a\u670d\u52a1\u7684\u95ee\u9898\u3002</p> <p>\u4ec0\u4e48\u662f\u8d1f\u8f7d\u5747\u8861\u5462\uff1f</p> <p>\u8d1f\u8f7d\u5747\u8861\u662f\u4e00\u79cd\u6280\u672f\uff0c\u7528\u6765\u5728\u591a\u4e2a\u670d\u52a1\u5668\u4e4b\u95f4\u5206\u914d\u8d1f\u8f7d\uff0c\u4ee5\u8fbe\u5230\u6700\u5927\u7684\u6027\u80fd\uff0c\u6700\u5c0f\u7684\u5ef6\u8fdf\uff0c\u6700\u5927\u7684\u53ef\u7528\u6027\uff0c\u6700\u5927\u7684\u53ef\u4f38\u7f29\u6027\u7b49\u7b49\u3002</p> <p>\u4e8b\u5b9e\u4e0a\u6211\u4eec\u4e5f\u6709\u591a\u5c42\u7684\u8d1f\u8f7d\u5747\u8861\uff0c\u5c31\u6bd4\u5982\u6211\u4eec\u9700\u8981\u6709\u4ee3\u7406\u670d\u52a1\u5668\uff0c\u4f46\u662f\u4e00\u53f0\u4ee3\u7406\u670d\u52a1\u5668\u4e5f\u53ef\u80fd\u6709\u591a\u4e2a\u8282\u70b9\uff0c\u56e0\u4e3a\u5047\u8bbe\u67091w\u4e2a\u8bf7\u6c42\uff0c\u4f30\u8ba1\u8fd9\u4e2a\u4ee3\u7406\u670d\u52a1\u5668\u4e5f\u4f1a\u5d29\u6e83\uff0c\u6240\u4ee5\u5728\u4e0d\u540c\u7684\u5c42\u6b21\u4e0a\u90fd\u9700\u8981\u8d1f\u8f7d\u5747\u8861\u3002</p>"},{"location":"Interview/Project/RPCFrameWork/Introduce/#_24","title":"\u5e38\u89c1\u7684\u8d1f\u8f7d\u5747\u8861\u7b97\u6cd5","text":"<ol> <li> <p>\u8f6e\u8be2 (Round Robin)</p> <p>\u6211\u4eec\u53ef\u4ee5\u628a\u6240\u6709\u7684\u670d\u52a1\u5668\u653e\u5728\u4e00\u4e2a\u5706\u73af\u91cc\uff0c\u7136\u540e\u4e2d\u95f4\u6709\u4e2a\u6307\u9488\u987a\u65f6\u9488\u8fdb\u884c\u8bbf\u95ee\uff0c\u8fd9\u79cd\u60c5\u51b5\u6bd4\u8f83\u9002\u5408\u670d\u52a1\u5668\u6027\u80fd\u6bd4\u8f83\u5747\u8861\u7684\u60c5\u51b5\u3002</p> </li> <li> <p>\u968f\u673a (Random)</p> <p>\u968f\u673a\u7684\u9009\u62e9\u4e00\u4e2a\u670d\u52a1\u5668\u8fdb\u884c\u8bbf\u95ee\uff0c\u8fd9\u79cd\u60c5\u51b5\u9002\u5408\u670d\u52a1\u5668\u6027\u80fd\u6bd4\u8f83\u5747\u8861\u7684\u60c5\u51b5\u800c\u4e14\u8d1f\u8f7d\u6bd4\u8f83\u5747\u8861\u7684\u60c5\u51b5\u3002</p> </li> <li> <p>\u52a0\u6743\u8f6e\u8be2 (Weighted Round Robin)</p> <p>\u8fd9\u79cd\u60c5\u51b5\u9002\u5408\u670d\u52a1\u5668\u6027\u80fd\u4e0d\u5747\u8861\u7684\u60c5\u51b5\uff0c\u6211\u4eec\u53ef\u4ee5\u7ed9\u6bcf\u4e2a\u670d\u52a1\u5668\u8bbe\u7f6e\u4e00\u4e2a\u6743\u91cd\uff0c\u7136\u540e\u6309\u7167\u6743\u91cd\u8fdb\u884c\u8bbf\u95ee\u3002</p> <p>\u4e3e\u4e2a\u4f8b\u5b50 : \u5047\u8bbe\u6211\u4eec\u6709\u4e94\u53f0\u670d\u52a1\u5668\uff081-\u5e26\u5bbd 1000MB \u548c 4-\u5e26\u5bbd 100MB\u7684\u670d\u52a1\u5668\uff09\u90a3\u4e48\u8bbf\u95ee\u987a\u5e8f\u53ef\u80fd\u662f </p> <ul> <li>1,1,1,2 </li> <li>1,1,1,3 </li> <li>1,1,1,4 </li> <li>1,1,1,5</li> </ul> </li> <li> <p>\u52a0\u6743\u968f\u673a</p> <p>\u8fd9\u79cd\u60c5\u51b5\u9002\u5408\u670d\u52a1\u5668\u6027\u80fd\u4e0d\u5747\u8861\u7684\u60c5\u51b5\uff0c\u6211\u4eec\u53ef\u4ee5\u7ed9\u6bcf\u4e2a\u670d\u52a1\u5668\u8bbe\u7f6e\u4e00\u4e2a\u6743\u91cd\uff0c\u7136\u540e\u6309\u7167\u6743\u91cd\u8fdb\u884c\u8bbf\u95ee\u3002\u8ddf\u4e0a\u9762\u7684\u52a0\u6743\u8f6e\u8be2\u5dee\u4e0d\u591a\uff0c\u53ea\u662f\u8fd9\u91cc\u662f\u968f\u673a\u7684\u8bbf\u95ee\u3002</p> </li> <li> <p>\u6700\u5c11\u8fde\u63a5 (Least Connections)</p> <p>\u9009\u62e9\u5f53\u524d\u8fde\u63a5\u6570\u6700\u5c11\u7684\u670d\u52a1\u5668\u8fdb\u884c\u8bbf\u95ee\uff0c\u8fd9\u79cd\u60c5\u51b5\u9002\u5408\u670d\u52a1\u5668\u6027\u80fd\u4e0d\u5747\u8861\u7684\u60c5\u51b5\u3002\u540c\u65f6\u8981\u6c42\u8fde\u63a5\u662f\u957f\u8fde\u63a5\u3002</p> </li> <li> <p>IP Hash</p> <p>\u6839\u636e\u8bf7\u6c42\u7684IP\u5730\u5740\u8fdb\u884cHash\uff0c\u7136\u540e\u6839\u636eHash\u503c\u6765\u9009\u62e9\u670d\u52a1\u5668\u8fdb\u884c\u8bbf\u95ee\uff0c\u8fd9\u79cd\u60c5\u51b5\u9002\u5408\u670d\u52a1\u5668\u6027\u80fd\u6bd4\u8f83\u5747\u8861\u7684\u60c5\u51b5\u3002\u8fd9\u79cd\u662f\u9002\u7528\u4e8e\u9700\u8981\u4fdd\u8bc1\u7ed8\u753b\u4e00\u81f4\u6027\u7684\u573a\u666f\u3002</p> </li> </ol>"},{"location":"Interview/Project/RPCFrameWork/Introduce/#hash","title":"\u4e00\u81f4\u6027Hash\u7b97\u6cd5","text":"<p>\u8fd9\u4e2a\u662f\u4e00\u4e2a\u5f88\u91cd\u8981\u7684\u77e5\u8bc6\u70b9</p> <p>\u5176\u5b9e\u5c31\u662f\u5c06\u6574\u4e2a<code>Hash</code>\u7a7a\u95f4\u8fdb\u884c\u5206\u914d\uff0c\u5212\u5206\u6210\u4e00\u4e2a\u73af\u72b6\uff0c\u7136\u540e\u6839\u636e\u8bf7\u6c42\u7684<code>Hash</code>\u503c\u6765\u9009\u62e9\u670d\u52a1\u5668\u8fdb\u884c\u8bbf\u95ee\u3002\u8fd9\u6837\u7684\u8bdd\uff0c\u5f53\u67d0\u4e2a\u670d\u52a1\u5668\u5b95\u673a\u7684\u65f6\u5019\uff0c\u53ea\u4f1a\u5f71\u54cd\u5230\u8fd9\u4e2a\u670d\u52a1\u5668\u7684\u8bf7\u6c42\uff0c\u800c\u4e0d\u4f1a\u5f71\u54cd\u5230\u5176\u4ed6\u7684\u670d\u52a1\u5668\u7684\u8bf7\u6c42\u3002</p> <p></p> <p>\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5047\u8bbe \u6211\u4eec\u7684\u8bf7\u6c42 \u7684<code>hash</code>\u503c\u662f<code>280</code>.\u90a3\u4e48\u6211\u4eec\u5c31\u4f1a\u9009\u62e9\u8ddd\u79bb\u8fd9\u4e2a<code>hash</code>\u503c\u6700\u8fd1\u7684\u670d\u52a1\u5668\u8fdb\u884c\u8bbf\u95ee\u3002</p> <p>\u5229\u7528<code>Hash</code>\u4e00\u81f4\uff0c\u6211\u4eec\u53ef\u4ee5\u907f\u514d\u4e24\u79cd\u95ee\u9898 </p> <ul> <li>\u8282\u70b9\u4e0b\u7ebf</li> </ul> <p>\u5982\u679c\u6211\u4eec\u662f\u6b63\u5e38\u7684\u8f6e\u8be2\u7684\u8bdd\uff0c\u90a3\u4e48\u5f53\u67d0\u4e2a\u8282\u70b9\u4e0b\u7ebf\u7684\u65f6\u5019\uff0c\u90a3\u4e48\u8fd9\u4e2a\u8282\u70b9\u7684\u8bf7\u6c42\u5c31\u4f1a\u88ab\u5206\u914d\u5230\u5176\u4ed6\u7684\u8282\u70b9\u4e0a\uff0c\u8fd9\u6837\u5c31\u4f1a\u5bfc\u81f4\u8d1f\u8f7d\u4e0d\u5747\u8861\u3002\u4f46\u662f\u5982\u679c\u6211\u4eec\u4f7f\u7528\u4e86\u4e00\u81f4\u6027<code>Hash</code>\u7b97\u6cd5\uff0c\u90a3\u4e48\u8fd9\u4e2a\u8282\u70b9\u4e0b\u7ebf\u7684\u65f6\u5019\uff0c\u53ea\u4f1a\u5f71\u54cd\u5230\u8fd9\u4e2a\u8282\u70b9\u7684\u8bf7\u6c42\uff0c\u800c\u4e0d\u4f1a\u5f71\u54cd\u5230\u5176\u4ed6\u7684\u8282\u70b9\u7684\u8bf7\u6c42\u3002</p> <ul> <li>\u8d44\u6e90\u503e\u659c</li> </ul> <p>\u53ef\u4ee5\u5c06\u7269\u7406\u8282\u70b9\u6620\u5c04\u5230\u865a\u62df\u8282\u70b9\uff0c\u8fd9\u6837\u53ef\u4ee5\u4ee5\u66f4\u5c0f\u7684\u7c92\u5ea6\u8fdb\u884c\u8d1f\u8f7d\u5747\u8861\uff0c\u907f\u514d\u8d44\u6e90\u503e\u659c\u3002\u5c3d\u53ef\u80fd\u7684\u8ba9\u8bf7\u6c42\u5747\u5300\u7684\u5206\u5e03\u5230\u5404\u4e2a\u8282\u70b9\u4e0a\u3002</p> <p></p>"},{"location":"Interview/Project/RPCFrameWork/RPC/","title":"\u57fa\u4e8eRPC\u9879\u76ee","text":"<p>\u9879\u76ee\u5730\u5740 : https://github.com/Magnus031/TryRPC</p>"},{"location":"Interview/Project/RPCFrameWork/RPC/#_1","title":"\u573a\u666f\u9898","text":""},{"location":"Interview/Project/RPCFrameWork/RPC/#_2","title":"\u5982\u679c\u670d\u52a1\u5b95\u673a\u4e86\uff0c\u5bf9\u65b9\u5e94\u8be5\u600e\u4e48\u5904\u7406\uff1f","text":"<p>\u8fd9\u91cc\u5c31\u8981\u5f3a\u8c03\u4e00\u4e0b\u4e00\u4e2a\u6982\u5ff5\u4e3a\u5bb9\u9519\u7b56\u7565\u3002\u6211\u4eec\u5728\u8bbe\u8ba1RPC\u6846\u67b6\u7684\u65f6\u5019\uff0c\u5c31\u8981\u8003\u8651\u5230\u8fd9\u4e2a\u95ee\u9898\u3002\u5982\u679c\u670d\u52a1\u5b95\u673a\u4e86\uff0c\u6211\u4eec\u5e94\u8be5\u600e\u4e48\u5904\u7406\u3002\u8fd9\u91cc\u6709\u51e0\u79cd\u7b56\u7565:</p> <ol> <li> <p><code>Fail-Over</code> \u6545\u969c\u8f6c\u79fb\uff0c\u5728\u4e00\u6b21\u5931\u8d25\u7684\u8c03\u7528\u4e4b\u540e\uff0c\u56e0\u4e3a\u5bf9\u4e8e\u670d\u52a1\u7aef\u5206\u5e03\u5f0f\u6765\u8bf4\uff0c\u662f\u5177\u6709\u591a\u4e2a\u63d0\u4f9b\u76f8\u540c\u670d\u52a1\u7684\u8282\u70b9\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u5c31\u9009\u62e9\u53ef\u4ee5\u5207\u6362\u5230\u4e0b\u4e00\u4e2a\u63d0\u4f9b\u76f8\u540c\u7684\u670d\u52a1\u7684\u8282\u70b9\u4e0a\u6765\u8fdb\u884c\u8c03\u7528\u3002\u7b97\u662f\u4e00\u6b21\u91cd\u8bd5\u3002</p> </li> <li> <p><code>Fail-Back</code> \u5931\u8d25\u81ea\u52a8\u6062\u590d\uff0c\u7cfb\u7edf\u7684\u67d0\u4e2a\u529f\u80fd\u51fa\u73b0\u8c03\u7528\u5931\u8d25\u6216\u8005\u9519\u8bef\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u901a\u8fc7\u5176\u4ed6\u65b9\u6cd5\u6765\u6062\u590d\u8be5\u529f\u80fd\u7684\u6b63\u5e38\uff0c\u6bd4\u5982\u91cd\u8bd5/\u8c03\u7528\u5176\u4ed6\u670d\u52a1\u3002</p> </li> <li> <p><code>Fail-Safe</code> \u9759\u9ed8\u5904\u7406\uff0c\u5c31\u662f\u5728\u8c03\u7528\u5931\u8d25\u7684\u65f6\u5019\uff0c\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u76f4\u63a5\u8fd4\u56de\u4e00\u4e2a\u9ed8\u8ba4\u503c\uff0c\u6216\u8005\u662f\u629b\u51fa\u4e00\u4e2a\u5f02\u5e38\u3002</p> </li> <li> <p><code>Fail-Fast</code> \u5feb\u901f\u5931\u8d25\uff0c\u5c31\u662f\u5728\u8c03\u7528\u5931\u8d25\u7684\u65f6\u5019\uff0c\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u76f4\u63a5\u629b\u51fa\u4e00\u4e2a\u5f02\u5e38\uff0c\u4e0d\u505a\u4efb\u4f55\u5904\u7406\u3002</p> </li> </ol>"},{"location":"Interview/Project/RPCFrameWork/RPC/#_3","title":"\u5728\u8c03\u7528\u8fc7\u7a0b\u4e2d\u53d1\u751f\u4e86\u7f51\u7edc\u5f02\u5e38\uff0c\u5982\u4f55\u4fdd\u8bc1\u6d88\u606f\u7684\u53ef\u8fbe\u6027\uff1f","text":"<p>\u8fd9\u91cc\u5c31\u8981\u5f3a\u8c03\u4e00\u4e0b\u4e00\u4e2a\u6982\u5ff5\u4e3a\u6d88\u606f\u53ef\u9760\u6027\u3002\u6211\u4eec\u5728\u8bbe\u8ba1RPC\u6846\u67b6\u7684\u65f6\u5019\uff0c\u5c31\u8981\u8003\u8651\u5230\u8fd9\u4e2a\u95ee\u9898\u3002\u5982\u679c\u5728\u8c03\u7528\u8fc7\u7a0b\u4e2d\u53d1\u751f\u4e86\u7f51\u7edc\u5f02\u5e38\uff0c\u6211\u4eec\u5e94\u8be5\u600e\u4e48\u5904\u7406\u3002\u8fd9\u91cc\u6709\u51e0\u79cd\u7b56\u7565:</p> <ol> <li> <p><code>\u91cd\u8bd5\u673a\u5236</code> \u5728\u8c03\u7528\u5931\u8d25\u7684\u65f6\u5019\uff0c\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u91cd\u8bd5\uff0c\u76f4\u5230\u6210\u529f\u4e3a\u6b62\u3002\u8fd9\u4e2a\u662f\u6700\u5e38\u89c1\u7684\u4e00\u79cd\u7b56\u7565\u3002\u5f53\u7136\uff0c\u6211\u4eec\u4f1a\u9009\u62e9\u6307\u6570\u9000\u907f\uff0c\u907f\u514d\u8fc7\u591a\u7684\u8bf7\u6c42\u5bf9\u670d\u52a1\u7aef\u9020\u6210\u538b\u529b\u3002</p> </li> <li> <p><code>\u6d88\u606f\u786e\u8ba4</code> \u5728\u8c03\u7528\u5931\u8d25\u7684\u65f6\u5019\uff0c\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u53d1\u9001\u4e00\u4e2a\u786e\u8ba4\u6d88\u606f\uff0c\u6765\u786e\u8ba4\u6d88\u606f\u662f\u5426\u53d1\u9001\u6210\u529f\u3002\u8fd9\u4e2a\u662f\u4e00\u79cd\u6d88\u606f\u53ef\u9760\u6027\u7684\u4fdd\u8bc1\u3002</p> </li> <li> <p><code>\u5f02\u6b65\u6d88\u606f\u961f\u5217</code> \u5c06\u8bf7\u6c42\u5f02\u6b65\u653e\u5165\u6d88\u606f\u961f\u5217\uff0c\u670d\u52a1\u7aef\u5f02\u6b65\u5904\u7406\uff0c\u907f\u514d\u5b9e\u65f6\u8c03\u7528\u53d7\u7f51\u7edc\u95ee\u9898\u5f71\u54cd\u3002</p> </li> <li> <p><code>\u5e42\u7b49\u6027</code> \u4e3a\u6bcf\u4e00\u6b21\u8bf7\u6c42\u751f\u6210\u4e00\u4e2a\u552f\u4e00\u7684ID\uff0c\u4fdd\u8bc1\u6bcf\u4e00\u6b21\u8bf7\u6c42\u7684\u5e42\u7b49\u6027\u3002\u8fd9\u6837\u5c31\u53ef\u4ee5\u907f\u514d\u91cd\u590d\u8bf7\u6c42\u7684\u95ee\u9898\u3002</p> </li> <li> <p><code>\u670d\u52a1\u964d\u7ea7/\u7194\u65ad\u673a\u5236</code> </p> <p>\u670d\u52a1\u964d\u7ea7: \u5728\u7f51\u7edc\u5f02\u5e38\u6216\u8005\u670d\u52a1\u4e0d\u53ef\u7528\u7684\u65f6\u5019\uff0c\u8fd4\u56de\u9ed8\u8ba4\u503c\u6216\u8005\u63d0\u793a\u7528\u6237\u7a0d\u540e\u91cd\u8bd5</p> <p>\u7194\u65ad\u673a\u5236: \u68c0\u6d4b\u5230\u591a\u6b21\u8c03\u7528\u5931\u8d25\u4e4b\u540e\uff0c\u77ed\u65f6\u95f4\u5185\u4e0d\u80fd\u518d\u53d1\u9001\u8bf7\u6c42\uff0c\u4fdd\u62a4\u7cfb\u7edf\u8d44\u6e90</p> </li> </ol>"},{"location":"Interview/Project/RPCFrameWork/RPC/#_4","title":"\u8bf7\u6c42\u91cf\u7a81\u589e\uff0c\u5bfc\u81f4\u670d\u52a1\u65e0\u6cd5\u53ca\u65f6\u5904\u7406\uff0c\u6709\u54ea\u4e9b\u5e94\u5bf9\u63aa\u65bd\uff1f","text":"<ol> <li> <p><code>\u8d1f\u8f7d\u5747\u8861</code> \u901a\u8fc7\u8bf7\u6c42\u5206\u53d1\u5230\u591a\u4e2a\u670d\u52a1\u5668\u6216\u8005\u670d\u52a1\u5b9e\u4f8b\uff0c\u907f\u514d\u5355\u4e2a\u670d\u52a1\u8fc7\u8f7d</p> </li> <li> <p><code>\u6c34\u5e73\u62d3\u5c55</code> \u901a\u8fc7\u589e\u52a0\u66f4\u591a\u7684\u670d\u52a1\u5b9e\u4f8b\u6765\u63d0\u9ad8\u7cfb\u7edf\u7684\u5904\u7406\u80fd\u529b</p> </li> <li> <p><code>\u9650\u6d41</code> \u901a\u8fc7\u9650\u5236\u8bf7\u6c42\u7684\u6570\u91cf\uff0c\u907f\u514d\u670d\u52a1\u8fc7\u8f7d</p> </li> <li> <p><code>\u7f13\u5b58</code> \u901a\u8fc7\u7f13\u5b58\u6765\u51cf\u8f7b\u670d\u52a1\u7684\u538b\u529b</p> </li> </ol>"},{"location":"Interview/Project/RPCFrameWork/Summary/","title":"RPC \u5fc3\u5f97&amp;TODO","text":"<p>\u8fd9\u4e2a\u6587\u6863\u662f\u6211\u5728\u5b8c\u6210RPC\u6846\u67b6\u7684\u8fc7\u7a0b\u4e2d\u7684\u4e00\u4e9b\u5fc3\u5f97\uff0c\u4ee5\u53ca\u4e00\u4e9bTODO\u3002\u9700\u8981\u6211\u6765\u8fdb\u884c\u5b9e\u73b0\u7684\u3002</p>"},{"location":"Interview/Project/RPCFrameWork/Summary/#_1","title":"\u5fc3\u5f97","text":""},{"location":"Interview/Project/RPCFrameWork/Summary/#1-resourcespropertiesnot-exist","title":"\u95ee\u98981. Resources\u4e0b\u7684properties\u6587\u4ef6not exist\u7684\u95ee\u9898\u3002","text":"<p>\u6211\u4eec\u5728\u4f7f\u7528\u81ea\u5df1\u5199\u7684<code>loadConfigure</code>\u65b9\u6cd5\u7684\u65f6\u5019\uff0c\u8c03\u7528\u4e86<code>hutools</code>\u7684<code>toBean</code>\u65b9\u6cd5\uff0c\u4f46\u662f\u5b83\u5e76\u4e0d\u80fd\u627e\u5230 <code>application.properties</code>\u8fd9\u4e2a\u6587\u4ef6\u7684\u5730\u5740\u3002</p> <p></p> <p>[\u95ee\u9898\u89e3\u51b3] : \u9996\u5148\uff0c\u6211\u4eec\u8981\u77e5\u9053\u7684\u662f</p> <p><code>resources</code>\u5305\u4e2d\u5b58\u653e\u90fd\u662f\u8d44\u6e90\u6587\u4ef6\uff0c\u5305\u542b\u7a0b\u5e8f\u8fd0\u884c\u65f6\u5019\u7684\u5404\u79cd\u6240\u9700\u8981\u7684\u8d44\u6e90\u6587\u4ef6:</p> <ol> <li>\u914d\u7f6e\u6587\u4ef6 <code>.properties</code> <code>.xml</code> <code>.yml</code>\u7b49</li> <li>\u9759\u6001\u8d44\u6e90\u6587\u4ef6 <code>.css</code> <code>.js</code> <code>.jpg</code>\u7b49</li> <li>\u6a21\u677f\u6587\u4ef6</li> <li>\u6570\u636e\u6587\u4ef6 <code>.txt</code> <code>.csv</code>\u7b49</li> </ol> <p>\u5176\u6b21\uff0c\u6211\u4eec\u8981\u77e5\u9053\u7684\u662f\uff0c<code>resources</code>\u5305\u4e0b\u7684\u6587\u4ef6\u5728\u7f16\u8bd1\u540e\u4f1a\u88ab\u653e\u5230<code>target</code>\u76ee\u5f55\u4e0b\u7684<code>classes</code>\u6587\u4ef6\u5939\u4e2d\uff0c\u6240\u4ee5\u6211\u4eec\u5728\u4f7f\u7528\u7684\u65f6\u5019\uff0c\u8981\u6ce8\u610f\u8fd9\u4e2a\u95ee\u9898\u3002</p> <p>\u76ee\u7684\u5c31\u662f\u7edf\u4e00\u7ba1\u7406\u8d44\u6e90\u3002\u5730\u5740\u662f <code>src/main/resources</code>\u3002 \u8fd9\u4e2a\u5f88\u91cd\u8981\uff0c\u4e0d\u7136\u7684\u8bdd\u6211\u4eec\u5c31\u4f1a\u51fa\u73b0\u4e0a\u9762\u7684\u95ee\u9898\uff0c\u6211\u4eec\u53d1\u73b0\u662f\u628a<code>resources</code>\u5305\u653e\u9519\u5730\u65b9\u4e86\u3002</p>"},{"location":"Interview/Project/RPCFrameWork/Summary/#2","title":"\u5fc3\u5f972 \u8bb0\u5f97\u53ca\u65f6\u7684\u624b\u52a8\u6784\u5efa\u9879\u76ee","text":"<p><code>mvn clean install</code>  \u4e00\u5b9a\u8981\u8bb0\u5f97\u53ca\u65f6\u7684\u6784\u5efa\u9879\u76ee\uff0c\u4e0d\u7136\u7684\u8bdd\uff0c\u6211\u4eec\u5728\u4fee\u6539\u4e86\u4ee3\u7801\u4e4b\u540e\uff0c\u53ef\u80fd\u4f1a\u51fa\u73b0\u4e00\u4e9b\u95ee\u9898\uff0c\u6bd4\u5982\u8bf4\uff0c\u6211\u4eec\u7684<code>resources</code>\u5305\u4e0b\u7684\u6587\u4ef6\u6ca1\u6709\u53ca\u65f6\u7684\u88ab\u7f16\u8bd1\uff0c\u8fd9\u6837\u7684\u8bdd\uff0c\u6211\u4eec\u5728\u8fd0\u884c\u7684\u65f6\u5019\u5c31\u4f1a\u51fa\u73b0\u4e00\u4e9b\u95ee\u9898\u3002</p>"},{"location":"Interview/Project/RPCFrameWork/Summary/#3-srctarget","title":"\u5fc3\u5f973 \u4e86\u89e3\u4e86src\u548ctarget\u7684\u533a\u522b","text":"<p>\u6211\u4eec\u4ee5RPC\u7684<code>monitor</code> Feature \u4e3a\u4f8b: \u6211\u4eec\u53ef\u4ee5\u5229\u7528 <code>ConfigUtils</code> \u7c7b\u6765\u52a0\u8f7d\u6587\u4ef6\uff0c\u4f46\u662f\uff0c\u52a0\u8f7d\u51fa\u6765\u7684\u662f <code>target</code> \u76ee\u5f55\u4e0b\u7684\u6587\u4ef6\uff0c\u800c\u4e0d\u662f <code>src</code> \u76ee\u5f55\u4e0b\u7684\u6587\u4ef6\u3002\u6240\u4ee5\u6211\u4eec\u5982\u679c\u60f3\u76d1\u542c\u5bf9\u5f53\u524d\u6587\u4ef6\u7684\u4fee\u6539\uff0c\u6211\u8fd9\u91cc\u9009\u62e9\u7684\u662f\u76d1\u542c<code>src</code>\u76ee\u5f55\u4e0b\u7684\u6587\u4ef6\uff0c\u800c\u4e0d\u662f<code>target</code>\u76ee\u5f55\u4e0b\u7684\u6587\u4ef6\u3002\u6240\u4ee5\u5c31\u9700\u8981\u5b83\u7684\u7edd\u5bf9\u8def\u5f84\u3002\u4e0d\u80fd\u4f7f\u7528\u901a\u8fc7\u7c7b\u52a0\u8f7d\u5668\u6765\u83b7\u5f97\u7684\u8def\u5f84\u3002\u9700\u8981\u5b9e\u73b0\u7684\u662f\u4e00\u4e2a\u4ec0\u4e48\u529f\u80fd\u5462\uff1f\u56e0\u4e3a\u5f53\u524d\u7684\u662f\u5f00\u53d1\u73af\u5883\uff0c\u6240\u4ee5\u6211\u53ef\u80fd\u4f1a\u53ca\u65f6\u7684\u66f4\u6539\u914d\u7f6e\u6587\u4ef6\uff0c\u6240\u4ee5\u6211\u9700\u8981\u4e00\u4e2a\u76d1\u542c\u5668\uff0c\u6765\u76d1\u542c\u914d\u7f6e\u6587\u4ef6\u7684\u53d8\u5316\uff0c\u7136\u540e\u53ca\u65f6\u7684\u52a0\u8f7d\u914d\u7f6e\u6587\u4ef6\u3002\u4f46\u662f\u5982\u679c\u6211\u4f7f\u7528\u7684\u662f<code>target</code>\u4e0b\u7684\u76ee\u5f55\u6587\u4ef6\uff0c\u5176\u5b9e\u5c31\u4e0d\u9700\u8981\u76d1\u542c\u4e86\uff0c\u56e0\u4e3a\u6211\u6bcf\u6b21\u90fd\u4f1a\u91cd\u65b0\u6784\u5efa\u9879\u76ee\uff0c\u6240\u4ee5\u914d\u7f6e\u6587\u4ef6\u4e5f\u4f1a\u88ab\u91cd\u65b0\u52a0\u8f7d\u3002</p>"},{"location":"Interview/Project/RPCFrameWork/Summary/#todo","title":"TODO","text":""},{"location":"Interview/Project/RPCFrameWork/Summary/#_2","title":"\u5168\u5c40\u914d\u7f6e\u52a0\u8f7d","text":""},{"location":"Interview/Project/RPCFrameWork/Summary/#part1-yaml","title":"Part1. \u6dfb\u52a0\u5bf9\u4e8e<code>yaml</code>\u6587\u4ef6\u7684\u652f\u6301","text":"<p>\u56e0\u4e3a <code>hutools</code> \u672c\u8eab\u7684 <code>Props</code> \u7c7b\u53ea\u652f\u6301 <code>properties</code> \u6587\u4ef6\u7684\u8bfb\u53d6\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u81ea\u5df1\u6765\u5b9e\u73b0\u5bf9\u4e8e <code>yaml</code> \u6587\u4ef6\u7684\u8bfb\u53d6\u3002</p> <p>\u9996\u5148\uff0c\u6211\u4eec\u901a\u8fc7\u89c2\u5bdf <code>hutools</code> \u5bf9\u4e8e <code>properties</code> \u6587\u4ef6\u7684\u8bfb\u53d6\uff0c\u6211\u4eec\u53d1\u73b0\u5b83\u662f\u901a\u8fc7 <code>toBean</code> \u65b9\u6cd5\u6765\u8bfb\u53d6\u7684\uff0c\u5b83<code>extends</code> \u4e86<code>Java</code>\u4e2d\u7684<code>properties</code>\u63a5\u53e3\u3002</p> <ul> <li>Step1: \u5f15\u5165 <code>snakeYaml</code>\u7684\u4f9d\u8d56 <pre><code>&lt;dependency&gt;\n            &lt;groupId&gt;org.yaml&lt;/groupId&gt;\n            &lt;artifactId&gt;snakeyaml&lt;/artifactId&gt;\n            &lt;version&gt;2.0&lt;/version&gt;\n&lt;/dependency&gt;\n</code></pre></li> <li>Step2: \u5b9e\u73b0 <code>loadConfigYaml</code> <pre><code>public static &lt;T&gt; T loadConfigYaml(Class&lt;T&gt; tClass,String prefix,String environment){\n\n        // \u521b\u5efa Yaml \u5bf9\u8c61;\n        Yaml yaml = new Yaml();\n        System.out.println(\"Now we are loading the yaml file.\");\n        StringBuilder builder = new StringBuilder(\"application\");\n        if(!StrUtil.isBlankIfStr(environment)) {\n            builder.append(\"-\").append(environment);\n        }\n        // Because that this is a yaml file.\n        builder.append(\".yaml\");\n\n        // \u52a0\u8f7d\u914d\u7f6e\u6587\u4ef6;\n        // \u4ece\u8d44\u6e90\u6587\u4ef6\u5939\u4e2d\u52a0\u8f7d yaml \u6587\u4ef6\uff0c\u5e76\u5c06\u5176\u8f6c\u5316\u4e3a InputStream \u8f93\u5165\u6d41\u5bf9\u8c61 \u4ee5\u4f9b SnakeYaml \u8bfb\u53d6\u548c\u89e3\u6790\n        /**\n         * \u7c7b\u52a0\u8f7d\u5668\n         * \u9996\u5148\uff0c\u6211\u4eec\u8fd9\u91cc\u7684 {@code ConfigUtils.class.getClassLoader()} \u662f\u4e00\u4e2a\u7c7b\u52a0\u8f7d\u5668\u5bf9\u8c61\uff0c\u56e0\u4e3a\u6211\u4eec\u7684\n         * \u914d\u7f6e\u6587\u4ef6\u662f\u653e\u5728 resources \u76ee\u5f55\u4e0b\u7684\uff0c\u800c\u5728\u6253\u5305\u9879\u76ee\u7684\u65f6\u5019\uff0cresources \u76ee\u5f55\u4e0b\u7684\u6587\u4ef6\u4f1a\u88ab\u6253\u5305\u5230 jar \u5305\u4e2d\uff0c\u5b58\u5728\u4e8eJVM\u7684\u7c7b\u8def\u5f84\u4e2d\u3002\n         * \u5982\u679c\u60f3\u8981\u51c6\u786e\u7684\u8bfb\u53d6resources\u76ee\u5f55\u4e0b\u7684\u6587\u4ef6\uff0c\u6211\u4eec\u5c31\u9700\u8981\u4f7f\u7528\u7c7b\u52a0\u8f7d\u5668\u6765\u6b63\u786e\u7684\u8bfb\u53d6\u6587\u4ef6\u3002\n         */\n        try(InputStream in = ConfigUtils.class.getClassLoader().getResourceAsStream(builder.toString())){\n            if(in == null){\n                throw new Exception(\"Sorry,the yaml file is not found.\");\n            }\n            return yaml.loadAs(in,tClass);\n        }catch (Exception e){\n            //log.info(\"[Error] : We cannot load the yaml file.\");\n            e.printStackTrace();\n        }\n        return null;\n    }\n</code></pre></li> </ul>"},{"location":"Interview/Project/RPCFrameWork/Summary/#part2","title":"Part2. \u652f\u6301\u76d1\u542c\u914d\u7f6e\u6587\u4ef6\u7684\u53d8\u5316","text":"<p>\u56e0\u4e3a\u6211\u4eec\u4f1a\u7ecf\u5e38\u9047\u5230\u7684\u4e00\u4e2a\u95ee\u9898\u5c31\u662f\uff0c\u4f1a\u624b\u52a8\u7684\u5bf9\u914d\u7f6e\u6587\u4ef6\u8fdb\u884c\u66f4\u6539\uff0c\u6211\u4eec\u9700\u8981\u80fd\u591f\u53ca\u65f6\u7684\u76d1\u542c\u5230\u8fd9\u4e2a\u6587\u4ef6\u7684\u53d8\u5316\uff0c\u7136\u540e\u91cd\u65b0\u52a0\u8f7d\u8fd9\u4e2a\u6587\u4ef6\u3002</p> <p>\u53c2\u8003 <code>hutools</code> \u7684 <code>WatchMonitor</code> \u7c7b\u7684\u4f7f\u7528\u3002</p> <p>\u4f46\u662f\u6211\u4eec\u8fd9\u4e2a\u4f1a\u51fa\u73b0\u4e00\u4e2a\u95ee\u9898\uff0c\u5c31\u662f\u6211\u4eec\u60f3\u8981\u76d1\u542c\u7684\u6587\u4ef6\u662f\u5728 <code>resources</code> \u5305\u4e0b\u7684\uff0c\u8fd9\u4e2a\u6587\u4ef6\u5728\u7f16\u8bd1\u540e\u4f1a\u88ab\u653e\u5230 <code>target</code> \u76ee\u5f55\u4e0b\u7684 <code>classes</code> \u6587\u4ef6\u5939\u4e2d\uff0c\u6240\u4ee5\u6211\u4eec\u5728\u4f7f\u7528\u7684\u65f6\u5019\uff0c\u8981\u6ce8\u610f\u8fd9\u4e2a\u95ee\u9898\u3002</p>"},{"location":"Interview/Recall/First-Interview/1-20/","title":"\u4e00\u9762\u8bb0\u5f55","text":"<p>BackGround:  \u672c\u4eba\u7684\u7b2c\u4e00\u6b21\u9762\u8bd5\uff0c\u5177\u4f53\u7684\u516c\u53f8\u4e0d\u592a\u65b9\u4fbf\u900f\u9732\uff0c\u4f46\u662f\u9762\u8bd5\u7684\u5185\u5bb9\u8fd8\u662f\u633a\u503c\u5f97\u53cd\u601d\u7684\u3002\u4f30\u8ba1\u662f\u6ca1\u6709\u4e8c\u9762\u4e86... \u9762\u8bd5\u5b98\u7ed9\u6211\u6765\u4e86\u4e00\u53e5 \u4efb\u91cd\u800c\u9053\u8fdc \u554a\uff0cCode \u662f\u6bd4\u8f83\u7a33\u7684\uff0c\u611f\u89c9\u5728\u5f88\u7d27\u5f20\u7684\u524d\u63d0\u4e0b\u4e5f\u80fd\u5199\u4e2a\u5927\u6982\uff0c\u4f46\u662f\u5728\u9879\u76ee\u548c\u57fa\u7840\u77e5\u8bc6\u4e0a\u8fd8\u662f\u6709\u5f88\u5927\u7684\u6b20\u7f3a\u3002\u5c24\u5176\u662f\u516b\u80a1\u6587\u3002\u771f\u7684\u611f\u89c9\u8981\u638c\u63e1\u7684\u4e1c\u897f\u592a\u591a\u4e86\uff0c\u4e0d\u8fc7\u4e5f\u662f\u4e00\u6b21\u5f88\u597d\u7684\u7ecf\u5386\u3002</p>"},{"location":"Interview/Recall/First-Interview/1-20/#code-review","title":"Code Review \u4e8c\u53c9\u6811\u7684\u6700\u5927\u5bbd\u5ea6","text":"<p>\u9898\u76ee\u5730\u5740</p> <p>\u81ea\u5df1\u5e78\u597d\u662f\u5199\u51fa\u6765\u4e86\uff0c\u4f46\u662f\u8fd9\u4e2a\u624b\u6413\u548cLeetCode\u4e0a\u7684\u6709\u4e0d\u540c\u5c31\u662f\u9700\u8981\u81ea\u5df1\u5b9a\u4e49<code>struct TreeNode</code>.\u81ea\u5df1\u5e73\u65f6\u76f4\u63a5\u5199\u51fd\u6570\u7528\u73b0\u6210\u7684\u5b9a\u4e49\u5199\u60ef\u4e86\u4e4b\u540e\uff0c\u4e00\u65f6\u95f4\u6709\u70b9\u61f5b\u3002\u4f46\u5e78\u597d\u4e5f\u662f\u5199\u51fa\u6765\u4e86\u3002</p> <p>\u4e0b\u9762\u7684\u4ee3\u7801\u662f\u81ea\u5df1\u5199\u5b8c\u4e4b\u540e\u51ed\u8bb0\u5fc6\u901f\u6413\u51fa\u6765\u7684\uff0c\u53ef\u80fd\u4f1a\u6709bug</p> <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nstruct TreeNode{\n    TreeNode* left;\n    TreeNode* right;\n    int val;\n\n    TreeNode(){}\n    TreeNode(int val){\n        this.val = val;\n    }\n}\nint getMaxWidth(TreeNode* root);\nint main(){\n    cout &lt;&lt; \"HelloWorld\" &lt;&lt; endl;\n    return 0;\n}\nint getMaxWidth(TreeNode* root){\n    if(root == nullptr)\n        return 0;\n    int maxNum = 1;\n    queue&lt;TreeNode*&gt; qe;\n    // used to store the next \n    queue&lt;TreeNode*&gt; nextQe;\n    queue&lt;int&gt; index;\n    qe.push(root);\n    while(!qe.empty()){\n        TreeNode* temp = qe.front();\n        qe.pop();\n\n        if(temp-&gt;left!=nullptr){\n            nextQe.push(temp-&gt;left);\n            index.push(temp-&gt;val*2);\n        }\n\n        if(temp-&gt;right!=nullptr){\n            nextQe.push(temp-&gt;right);\n            index.push(temp-&gt;val*2+1);\n        }\n\n        if(qe.empty()){\n            int size = index.size();\n            if(size&gt;=2){\n                maxNum = max(maxNum,index.back()-index.front()+1);\n            }\n            while(!nextQe.empty()){\n                qe.push(nextQe.front());\n                nextQe.pop();\n            }\n            while(!index.empty()){\n                index.pop();\n            }\n        }\n    }\n\n    return MaxNum;\n}\n</code></pre>"},{"location":"Interview/Recall/First-Interview/1-20/#_2","title":"\u9762\u8bd5\u8fc7\u7a0b\u4e2d\u7684\u95ee\u9898","text":"<p>\u6ca1\u6709\u5f88\u7ec6\u8282\u7684\u95ee\u9879\u76ee\uff0c\u53ef\u4ee5\u7ea6\u7b49\u4e8e\u8bf4\u6ca1\u6709\u95ee\u9879\u76ee\uff0c\u4f46\u662f\u5f88\u660e\u663e\u7684\u611f\u89c9\u5230\u81ea\u5df1\u7684\u516b\u80a1\u6709\u7740\u6781\u5927\u7684\u6b20\u7f3a\uff0c\u611f\u89c9\u662f\u9700\u8981\u591a\u82b1\u70b9\u65f6\u95f4\u5728\u8fd9\u4e2a\u4e0a\u9762\u3002</p>"},{"location":"Interview/Recall/First-Interview/1-20/#1-http20","title":"1. HTTP/2.0 \u4f60\u6709\u6ca1\u6709\u4e86\u89e3\u8fc7\uff1f","text":"<p>\u8fd9\u91cc\u4ecb\u7ecd\u4e00\u4e0b HTTP \u5bb6\u65cf\u7684\u51e0\u79cd\u534f\u8bae:</p> <p>\u9996\u5148 HTTP (HyperText Transfer Protocol) \u8d85\u6587\u672c\u4f20\u8f93\u534f\u8bae\u3002</p>"},{"location":"Interview/Recall/First-Interview/1-20/#http10","title":"HTTP/1.0","text":"<p>\u53d1\u5e03\u4e8e 1996\u5e74\uff0c\u662f\u7b2c\u4e00\u4e2a\u88ab\u5e7f\u6cdb\u4f7f\u7528\u7684\u7248\u672c</p> <p>\u51e0\u4e2a\u7279\u6027 :</p> <ol> <li>\u65e0\u72b6\u6001\uff0c\u4e5f\u5c31\u662f\u670d\u52a1\u7aef\u4e0d\u4f1a\u8bb0\u5f55\u4e0b\u5ba2\u6237\u7aef\u7684\u72b6\u6001\uff0c\u53ea\u662f\u7b80\u5355\u7684\u54cd\u5e94\u8bf7\u6c42</li> <li> <p>(Short-lived Connection) \u77ed\u8fde\u63a5\uff0c\u4e5f\u5c31\u662f\u6bcf\u6b21\u8bf7\u6c42\u90fd\u4f1a\u5355\u72ec\u7684\u5efa\u7acb\u4e00\u4e2aTCP\u8fde\u63a5\uff0c\u5904\u7406\u5b8c\u8bf7\u6c42\u4e4b\u540e\u5c31\u4f1a\u65ad\u5f00\u8fde\u63a5\u3002</p> <p>\u4f8b\u5b50\uff0c\u5982\u679c\u4e00\u4e2a\u7f51\u9875\u9700\u8981\u591a\u6b21\u7684\u8bf7\u6c42\u8d44\u6e90\uff0c\u90a3\u4e48\u5c31\u9700\u8981\u5efa\u7acb\u591a\u6b21\u7684\u8fde\u63a5\uff0c\u6548\u7387\u5341\u5206\u7684\u4f4e\u4e0b\u3002</p> </li> <li> <p>\u8bf7\u6c42\u65b9\u6cd5: \u53ea\u6709\u4e09\u79cd</p> <ul> <li>GET</li> <li>POST</li> <li>HEAD </li> </ul> </li> <li> <p>\u7f3a\u4e4f\u7f13\u5b58\u673a\u5236\uff0c\u4e3b\u8981\u901a\u8fc7 <code>Expires</code> \u5934\u90e8\u5b57\u6bb5\u6765\u6307\u5b9a\u8d44\u6e90\u7684\u8fc7\u671f\u65f6\u95f4</p> </li> <li> <p>\u4e0d\u652f\u6301\u865a\u62df\u4e3b\u673a\uff0c\u8bf7\u6c42\u4e2d\u6ca1\u6709<code>host</code>\u5b57\u6bb5</p> </li> </ol>"},{"location":"Interview/Recall/First-Interview/1-20/#http11","title":"HTTP/1.1","text":"<p>\u53d1\u5e03\u4e8e 1999\u5e74\uff0c\u662fHTTP/1.1 \u7684\u6539\u8fdb\u7248\u672c\uff0c\u8fd9\u4e00\u4e2a\u662f\u7528\u9014\u6700\u5e7f\u6cdb\u7684\u7248\u672c</p> <p>\u51e0\u4e2a\u7279\u6027:</p> <ol> <li> <p>\u6301\u4e45\u8fde\u63a5: \u4e5f\u5c31\u662f\u8bf4HTTP/1.1 \u662f\u4fdd\u6301\u4e86 <code>keep-alive</code> \u7684\u8fde\u63a5\uff0c\u4e00\u4e2aTCP\u8bf7\u6c42\u53ef\u4ee5\u53d1\u9001\u591a\u4e2aHTTP\u8bf7\u6c42\uff0c\u907f\u514d\u4e86\u8fdb\u884c\u91cd\u590d\u7684\u8fde\u63a5\u4e0e\u65ad\u5f00\u3002</p> </li> <li> <p>\u652f\u6301\u4e86\u66f4\u591a\u7684\u8bf7\u6c42\u65b9\u5f0f: \u6bd4\u5982 <code>PUT</code> <code>DELETE</code> <code>OPTIONS</code> <code>TRACE</code> <code>CONNECT</code> \u4e5f\u5c31\u662f\u6211\u4eec\u5e38\u8bf4\u7684 RESTFUL API\uff0c\u4f7f\u5f97\u66f4\u5177\u6709\u9488\u5bf9\u6027\u4e0e\u7075\u6d3b\u6027\u3002</p> </li> <li> <p>\u7f13\u5b58\u673a\u5236\u7684\u6539\u8fdb\uff0c\u5f15\u8fdb\u4e86 <code>Cache-Control</code> \u548c <code>ETag</code> \u5934\u90e8\u5b57\u6bb5\uff0c\u4f7f\u5f97\u7f13\u5b58\u7ba1\u7406\u7684\u66f4\u52a0\u7075\u6d3b\u4e0e\u9ad8\u6548\u3002</p> </li> <li> <p>\u652f\u6301\u4e86\u865a\u62df\u4e3b\u673a\uff0c\u4f7f\u5f97\u4e00\u4e2a\u670d\u52a1\u5668\u53ef\u4ee5\u627f\u8f7d\u591a\u4e2a\u57df\u540d\u3002\u6bd4\u5982 <code>www.example.com</code>\u548c<code>www.example.org</code>\u53ef\u4ee5\u5728\u540c\u4e00\u4e2a\u670d\u52a1\u5668\u4e0a\u3002</p> </li> <li> <p>\u6539\u8fdb\u7684\u5b89\u5168\u6027: HTTP/1.1\u5f15\u5165\u4e86\u66f4\u591a\u4e0e\u8eab\u4efd\u9a8c\u8bc1\u76f8\u5173\u7684\u5b57\u6bb5 (\u5982 <code>Proxy-Authenticate</code> \u548c <code>WWW-Authenticate</code>) </p> </li> <li> <p>\u5206\u5757\u4f20\u8f93\u7f16\u7801: </p> <ul> <li>\u5141\u8bb8\u670d\u52a1\u5668\u5206\u5757\u7684\u53d1\u9001\u54cd\u5e94\u6570\u636e\uff0c\u65e0\u9700\u4e8b\u5148\u77e5\u9053\u6570\u636e\u7684\u603b\u957f\u5ea6</li> <li>\u63d0\u5347\u4e86\u52a8\u6001\u5185\u5bb9\u7684\u6548\u7387\uff0c\u6bd4\u5982\u89c6\u9891\u6d41\uff0c\u97f3\u9891\u6d41\u7b49</li> </ul> </li> </ol>"},{"location":"Interview/Recall/First-Interview/1-20/#http20-http11","title":"\u4e3a\u4ec0\u4e48\u9700\u8981\u6709<code>HTTP/2.0</code> ?\u96be\u9053\u4e0d\u662f <code>HTTP/1.1</code>\u5c31\u591f\u4e86\u5417\uff1f","text":"<p>\u5b9e\u5219\u4e0d\u7136\uff0cHTTP/1.1 \u5728\u5f88\u591a\u65b9\u9762\u90fd\u6709\u7740\u4e0d\u8db3\u4e4b\u5904</p> <ol> <li> <p><code>HTTP/1.1</code> \u662f\u4e00\u4e2a\u57fa\u4e8e\u6587\u672c\u7684\u534f\u8bae\uff0c\u4f46\u540e\u8005\u662f\u4e00\u4e2a\u57fa\u4e8e\u4e8c\u8fdb\u5236\u7684\u534f\u8bae\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u66f4\u52a0\u7684\u9ad8\u6548\u7684\u8fdb\u884c\u4f20\u8f93\u4e0e\u89e3\u6790\uff0c\u6240\u6709\u6570\u636e\u90fd\u4f1a\u88ab\u5206\u5272\u6210<code>frame</code>\u518d\u901a\u8fc7<code>stream</code>\u8fdb\u884c\u53d1\u9001\u3002</p> </li> <li> <p><code>HTTP/1.1</code> \u6709\u4e00\u4e2a\u6bd4\u8f83\u4e25\u91cd\u7684\u95ee\u9898\u5c31\u662f <code>\u961f\u5934\u963b\u585e</code> \uff0c\u4e5f\u5c31\u662f\u5982\u679c\u540c\u4e00\u4e2a\u8fde\u63a5\u4e0b\uff0c\u5982\u679c\u6709\u591a\u4e2a\u8bf7\u6c42\uff0c\u5018\u82e5\u4e00\u4e2a\u8bf7\u6c42\u88ab\u963b\u585e\u4e86\uff0c\u90a3\u4e48\u5176\u4ed6\u7684\u8bf7\u6c42\u5c31\u4f1a\u88ab\u963b\u585e\uff0c\u6781\u5927\u7684\u964d\u4f4e\u4e86\u6548\u7387\u3002</p> </li> <li> <p><code>HTTP/1.0</code> \u6709\u8f83\u9ad8\u7684\u5ef6\u8fdf\u3002\u5728\u5229\u7528<code>TCP</code>\u8fde\u63a5\u7684\u65f6\u5019\uff0c\u4e0d\u4ec5\u9700\u89813\u6b21\u63e1\u624b\uff0c<code>TLS</code>\u8fd8\u9700\u8981\u989d\u5916\u7684\u63e1\u624b\uff0c\u5efa\u7acb\u8fde\u63a5\u7684\u5ef6\u8fdf\u4f1a\u6bd4\u8f83\u5927\u3002</p> </li> </ol> <p>\u76f8\u6bd4\u4e4b\u4e0b\uff0c<code>HTTP/2.0</code> \u6709\u7740\u66f4\u591a\u7684\u4f18\u5316\u548c\u6539\u8fdb\u7684\u5730\u65b9\uff0c\u6211\u4eec\u5177\u4f53\u6765\u770b\u4e0b\u9762\u7684<code>HTTP/2.0</code></p>"},{"location":"Interview/Recall/First-Interview/1-20/#http20","title":"HTTP/2.0","text":"<p>\u4ec0\u4e48\u662f HTTP/2.0 ? HTTP/2.0 \u662f\u4e00\u79cd\u4e8c\u8fdb\u5236\u534f\u8bae\uff0c\u800c\u4e0d\u662f\u6587\u672c\u534f\u8bae\u3002\u8fd9\u4e2a\u534f\u8bae\u662f\u7531Google\u63a8\u51fa\u7684\uff0c\u57fa\u4e8eSPDY\u534f\u8bae\u7684\u57fa\u7840\u4e0a\u8fdb\u884c\u4e86\u6539\u8fdb\u3002</p> <p>\u4e3a\u4e86\u65b9\u4fbf\u8bb0\u5fc6\uff0c\u53ef\u4ee5\u628aHTTP/2.0\u7684 2 \u60f3\u6210\u662fBinary\u7684\u610f\u601d\u3002</p> <ol> <li> <p>\u5b57\u9762\u610f\u601d\uff0c<code>HTTP/2.0</code> \u662f\u4e00\u4e2a\u4e8c\u8fdb\u5236\u7684\u534f\u8bae\uff0c\u4e5f\u5c31\u662f\u8bf4\u4f1a\u5177\u6709\u66f4\u9ad8\u7684\u4f20\u8f93\u6548\u7387\u548c\u66f4\u5feb\u7684\u89e3\u6790\u6548\u7387\u3002</p> </li> <li> <p>\u591a\u8def\u590d\u7528: <code>HTTP/2.0</code> \u652f\u6301\u591a\u8def\u590d\u7528\uff0c\u4e5f\u5c31\u662f\u8bf4\u53ef\u4ee5\u5728\u4e00\u4e2a\u8fde\u63a5\u4e0a\u540c\u65f6\u8fdb\u884c\u591a\u4e2a\u8bf7\u6c42\uff0c\u907f\u514d\u4e86\u961f\u5934\u963b\u585e\u7684\u95ee\u9898\u3002\u6211\u4eec\u770b\u5230\u4e0a\u9762\u7684<code>HTTP/1.1</code> \u7684\u534f\u8bae\uff0c\u5177\u6709\u7684\u95ee\u9898\u662f\u8bf7\u6c42\u90fd\u662f\u5728\u4e00\u4e2a\u961f\u5217\u91cc\uff0c\u5982\u679c\u4e00\u4e2a\u8bf7\u6c42\u88ab\u963b\u585e\u4e86\uff0c\u90a3\u4e48\u5176\u4ed6\u7684\u8bf7\u6c42\u5c31\u4f1a\u88ab\u963b\u585e\u3002\u4f46\u662f\u6211\u4eec\u5728<code>HTTP/2.0</code> \u4e2d\uff0c\u4e00\u4e2a\u8fde\u63a5\u53ef\u4ee5\u540c\u65f6\u53d1\u9001\u591a\u4e2a\u8bf7\u6c42\uff0c\u8fd9\u6837\u5c31\u907f\u514d\u4e86\u961f\u5934\u963b\u585e\u7684\u95ee\u9898\u3002</p> </li> <li> <p>\u5934\u90e8\u538b\u7f29: <code>HTTP/2.0</code> \u4f7f\u7528\u4e86<code>HPACK</code>\u7b97\u6cd5\u6765\u5bf9\u5934\u90e8\u8fdb\u884c\u538b\u7f29\uff0c\u8fd9\u6837\u5c31\u51cf\u5c11\u4e86\u4f20\u8f93\u7684\u5927\u5c0f\uff0c\u63d0\u9ad8\u4e86\u4f20\u8f93\u7684\u6548\u7387\u3002\u53ef\u4ee5\u7ed9<code>payLoad</code> \u5e26\u6765\u66f4\u591a\u7684\u7a7a\u95f4\u3002</p> </li> <li> <p>\u5177\u6709\u670d\u52a1\u5668\u63a8\u9001\u7684\u529f\u80fd: \u4e5f\u5c31\u662f\u8bf4\u670d\u52a1\u5668\u53ef\u4ee5\u5728\u5ba2\u6237\u7aef\u8bf7\u6c42\u4e4b\u524d\u5c31\u628a\u4e00\u4e9b\u8d44\u6e90\u63a8\u9001\u7ed9\u5ba2\u6237\u7aef\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u63d0\u9ad8\u52a0\u8f7d\u7684\u901f\u5ea6\u3002</p> <p>\u4e3e\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff0c\u5982\u679c\u4e00\u4e2a\u7f51\u9875\u9700\u8981\u52a0\u8f7d\u4e00\u4e2a<code>css</code>\u6587\u4ef6\uff0c\u90a3\u4e48\u670d\u52a1\u5668\u53ef\u4ee5\u5728\u5ba2\u6237\u7aef\u8bf7\u6c42\u4e4b\u524d\u5c31\u628a\u8fd9\u4e2a<code>css</code>\u6587\u4ef6\u63a8\u9001\u7ed9\u5ba2\u6237\u7aef\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u63d0\u9ad8\u52a0\u8f7d\u7684\u901f\u5ea6\u3002</p> </li> <li> <p>\u8003\u8651\u4e86\u4f18\u5148\u7ea7:\u4e5f\u5c31\u662fpriority,\u5bf9\u4e8e\u4e0d\u540c\u7684\u6570\u636e\u6d41\u6765\u8bf4\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u4e0d\u540c\u7684\u4f18\u5148\u7ea7\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u91cd\u8981\u7684\u6570\u636e\u6d41\u53ef\u4ee5\u4f18\u5148\u4f20\u8f93\u3002</p> </li> <li> <p>\u5b89\u5168\u6027: <code>HTTP/2.0</code> \u9ed8\u8ba4\u662f\u4f7f\u7528<code>TLS</code>\u52a0\u5bc6\u7684\uff0c\u8fd9\u6837\u5c31\u63d0\u9ad8\u4e86\u5b89\u5168\u6027\u3002</p> </li> </ol>"},{"location":"Interview/Recall/First-Interview/1-20/#http30","title":"HTTP/3.0","text":"<p>\u611f\u89c9 <code>HTTP/3.0</code> \u8003\u7684\u4e0d\u662f\u5f88\u591a\uff0c\u6211\u5c31\u7b80\u5355\u7684\u5217\u4e2a\u8868\u683c</p> <p></p> <p>\u96c6\u4e2d\u6ce8\u610f\u51e0\u4e2a\u533a\u522b,<code>HTTP/3.0</code> \u76f8\u8f83 <code>HTTP/2.0</code> \u5177\u6709\u66f4\u9ad8\u7684\u6027\u80fd(\u56e0\u4e3a\u4f7f\u7528\u4e86 UDP \u6765\u4f5c\u4e3a\u4f20\u8f93\u534f\u8bae)\uff0c\u5b8c\u5168\u89e3\u51b3\u4e86<code>\u961f\u5934\u963b\u585e</code>\u7684\u95ee\u9898\uff1b</p>"},{"location":"Interview/Recall/First-Interview/1-20/#http30-udp","title":"\u4e00\u4e2a\u884d\u751f\u51fa\u6765\u7684\u95ee\u9898\uff0c<code>HTTP/3.0</code> \u4f7f\u7528\u4e86<code>UDP</code>\u4f5c\u4e3a\u4f20\u8f93\u534f\u8bae\uff0c\u90a3\u4e48\u53ef\u9760\u6027\u5982\u679c\u4fdd\u8bc1\u5462\uff1f","text":"<p>\u6211\u4eec\u8fd9\u91cc\u5c31\u5f15\u5165\u4e86\u4e00\u4e2a\u6982\u5ff5\uff0c<code>QUIC</code> \u534f\u8bae\u6765\u4fdd\u8bc1\u4e86\u6570\u636e\u7684\u53ef\u9760\u6027\u3002</p> <p>\u51e0\u4e2a\u91cd\u70b9 : </p> <ol> <li>\u6570\u636e\u5305\u7684\u5e8f\u53f7</li> <li>\u91cd\u4f20\u673a\u5236</li> <li>\u786e\u8ba4\u673a\u5236</li> </ol> <p>\u5176\u5b9e\u6211\u4eec\u89c2\u5bdf\u5230\uff0c\u8ddf<code>TCP</code>\u5176\u5b9e\u6709\u5f88\u591a\u76f8\u4f3c\u7684\u5730\u65b9\u3002\u56e0\u4e3a\u786e\u8ba4\u53ef\u9760\u6027\u5c31\u90a3\u4e48\u51e0\u79cd\u65b9\u6cd5\u3002\u6211\u4eec\u4f7f\u7528<code>UDP</code>\u66f4\u5feb\uff0c\u53ea\u9700\u8981\u9644\u52a0\u4e0a\u8fd9\u4e9b\u673a\u5236\u5c31\u53ef\u4ee5\u4e86\u3002</p>"},{"location":"Interview/Recall/First-Interview/1-20/#2-https","title":"2. \u4f60\u6709\u6ca1\u6709\u4e86\u89e3\u8fc7 <code>HTTPS</code> ?","text":"<p>\u653e\u5230\u8ba1\u7b97\u673a\u7f51\u7edc\u90a3\u4e00part</p>"},{"location":"Interview/Recall/First-Interview/1-20/#3-java","title":"3. \u4f60\u6709\u6ca1\u6709\u4e86\u89e3\u8fc7 Java \u7684 <code>\u81ea\u52a8\u56de\u6536\u673a\u5236</code> \uff1f","text":"<p>Java GC </p>"},{"location":"Interview/Recall/First-Interview/1-20/#4-hashmap","title":"4. \u4f60\u6709\u6ca1\u6709\u4e86\u89e3\u8fc7 <code>HashMap</code> \u7684\u5b9e\u73b0\u5462\uff1f\u4e00\u822c\u4f1a\u7528\u5728\u54ea\u91cc\uff1f","text":"<p>\u8be6\u7ec6\u89c1\u6211\u7684Blog\u4e2d\u7684\u6e90\u7801\u89e3\u6790\u90e8\u5206</p>"},{"location":"LeetCode/DP/DP/","title":"\u52a8\u6001\u89c4\u5212","text":""},{"location":"LeetCode/DP/DP/#introduce","title":"Introduce","text":"<p>\u4e0b\u9762\u662f <code>wiki</code> \u4e0a\u7684\u5b9a\u4e49:</p> <p>Dynamic programming is both a mathematical optimization method and an algorithmic paradigm. The method was developed by Richard Bellman in the 1950s and has found applications in numerous fields, from aerospace engineering to economics.</p> <p>In both contexts it refers to simplifying a complicated problem by breaking it down into simpler sub-problems in a recursive manner. While some decision problems cannot be taken apart this way, decisions that span several points in time do often break apart recursively. Likewise, in computer science, if a problem can be solved optimally by breaking it into sub-problems and then recursively finding the optimal solutions to the sub-problems, then it is said to have optimal substructure.</p> <p>If sub-problems can be nested recursively inside larger problems, so that dynamic programming methods are applicable, then there is a relation between the value of the larger problem and the values of the sub-problems.[1] In the optimization literature this relationship is called the Bellman equation.</p> <p>\u52a8\u6001\u89c4\u5212\u95ee\u9898\u8003\u8651\u7684\u65f6\u5019\uff0c\u4e3b\u8981\u7684\u662f\u627e\u5230\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff0c\u5bf9\u4e8e\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff0c\u53ef\u4ee5\u8bf4\u662f\u5229\u7528\u4e4b\u524d\u89e3\u51b3\u7684\u5b50\u95ee\u9898\u6765\u89e3\u51b3\u6211\u4eec\u5f53\u524d\u9047\u5230\u7684\u65b0\u7684\u95ee\u9898\u3002\u6bd4\u8f83\u5f62\u8c61\u7684\u5c31\u662f\u505a\u8868\uff0c\u6211\u4eec\u5c06\u904d\u5386\u5230\u6b64\u523b\u7684\u72b6\u6001\u4e3a\u6b62\u7684\u6240\u6709\u5b50\u72b6\u6001\u8fdb\u884c\u505a\u8868\u8bb0\u5f55\uff0c\u5f53\u9047\u5230\u540e\u9762\u7684\u65b0\u7684\u5b50\u95ee\u9898\u7684\u65f6\u5019\uff0c\u5c31\u5229\u7528\u5f53\u524d\u5df2\u83b7\u5f97\u7684\u5b50\u72b6\u6001\u6765\u89e3\u51b3\u9047\u5230\u7684\u95ee\u9898\u3002</p> <p>Dynamic Programming \u4e0e \u8d2a\u5fc3\u7b97\u6cd5\u7684\u4e00\u70b9\u533a\u522b\uff0c\u4e8c\u8005\u90fd\u662f\u8003\u8651\u6700\u4f18\u89e3\u6765\u89e3\u51b3\u95ee\u9898 \u4f46\u662f <code>DP</code> \u8003\u8651\u7684\u662f\u5168\u5c40\u6700\u4f18\u89e3 <code>global optimal solution</code>\uff0c\u56e0\u6b64\u9700\u8981\u901a\u8fc7\u6bd4\u8f83\u5f53\u524d\u6240\u8bb0\u5f55\u7684\u72b6\u6001\u3002\u4f46\u662f\u8d2a\u5fc3\u6240\u8bb0\u5f55\u7684\u662f\u5c40\u90e8\u6700\u4f18\u89e3\uff0c\u4e5f\u5c31\u662f\u5f53\u524d\u7684\u524d\u63d0\u4e0b\u6240\u80fd\u83b7\u5f97\u7684\u6700\u4f18\u89e3\u3002<code>local optimal solution</code></p>"},{"location":"LeetCode/DP/DP/#_2","title":"\u4f8b\u9898","text":""},{"location":"LeetCode/DP/DP/#1","title":"1 \u5b8c\u5168\u5e73\u65b9\u6570","text":"<p> \u9898\u76ee\u6765\u6e90</p> <p></p>"},{"location":"LeetCode/DP/DP/#_3","title":"\u9898\u89e3","text":"<p>\u6211\u4eec\u8fd9\u91cc\u8003\u8651\u52a8\u6001\u89c4\u5212\uff0c\u56e0\u4e3a\u5bf9\u4e8e\u4e00\u4e2a\u4efb\u610f\u7ed9\u5b9a\u7684<code>n</code>,\u6211\u4eec\u90fd\u5b58\u5728\u591a\u79cd\u5bf9\u4e8e\u5b8c\u5168\u5e73\u65b9\u6570\u7684\u7ec4\u5408\uff0c\u90a3\u4e48\u600e\u4e48\u6837\u624d\u80fd\u77e5\u9053\u6700\u5c0f\u7684\u7ec4\u5408\u6570\u5462\uff1f\u5c31\u9700\u8981\u52a8\u6001\u89c4\u5212\u4e86\uff0c\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u8868\uff0c\u5f53\u524d<code>a[i]</code>\u4e2d\u8bb0\u5f55\u7684\u5c31\u662f\u6700\u5c0f\u7684\u7ec4\u5408\u6570\u76ee\uff0c\u597d\u5904\u662f\u6211\u4eec\u4e4b\u540e\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528\uff0c\u53ef\u4ee5\u514d\u53bb\u5f88\u591a\u7684\u91cd\u590d\u6b65\u9aa4\u3002\u7136\u540e\uff0c\u6211\u4eec\u5bf9\u4e8e\\([1,m]\\)\u7684\u6bcf\u4e2a\u8868\u5143\u7d20\u8fdb\u884c\u904d\u5386\u3002\u6709\u70b9\u7c7b\u4f3c\u722c\u697c\u68af\uff0c\u4e3a\u4e86\u65b9\u4fbf\u7406\u89e3\uff0c\u6211\u4eec\u4e3e\u4e2a\u4f8b\u5b50\uff0c<code>numSquare(12)</code>\u7684\u6c42\u6cd5\u3002\u4e00\u5f00\u59cb\u6211\u7684\u9519\u8bef\u601d\u8def\u662f\u5229\u7528\u8d2a\u5fc3\uff0c\u8ddd\u79bb\\(12\\)\u6700\u8fd1\u7684\u5b8c\u5168\u5e73\u65b9\u6570\u662f\\(9\\)\uff0c\u90a3\u4e48\u6211\u5c31\u9519\u8bef\u7684\u4ee5\u4e3a\\(12\\)\u7684\u6700\u5c0f\u7ec4\u5408\u5c31\u662f\\(a[9]+a[3]\\)\u7684\u6b21\u6570.\u4f46\u5176\u5b9e\u4ed6\u53ef\u4ee5\u662f\\(a[4]+a[4]+a[4]=3\\) \u4e5f\u5c31\u662f\u6709\u4ee5\u4e0b\u7684\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff1a \\(a[i] = \\min\\{a[j*j]+a[i-j*j]\\}\\) \u63a5\u4e0b\u6765\u7684\u5c31\u7b80\u5355\u4e86\u3002</p> <p>\u603b\u7ed3\u4e00\u4e0b \u8fd9\u9898\u5c31\u662f \u52a8\u6001\u89c4\u5212\uff0c\u76ee\u7684\u662f\u8981\u627e\u5230\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff0c\u4ee5\u53ca\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u8bdd\u662f\u8fd1\u4f3c\u6210\\(O(N^\\frac{3}{2})\\) \\(\u222b_1^n\u200bf(x)dx\u2264\\sum_{i=1}^n\u200bf(i)\u2264\u222b_0^n\u200bf(x)dx\\)</p>"},{"location":"LeetCode/DP/DP/#code","title":"Code","text":"<pre><code>class Solution {\npublic:\n    int a[10000]={0};\n    int numSquares(int n) {\n        int m = (int)sqrt(n);\n        if(m*m == n)\n            return 1;\n        for(int i=1;i&lt;=m;i++){\n            a[i*i] = 1;\n        }\n        for(int i=2;i&lt;=n;i++){\n            m = (int)sqrt(i);\n            // i is square number;\n            if(m*m==i)\n                continue;\n            else{\n                // \u5f80\u524d\u904d\u5386 \u770b\u770b\u662f\u5426\u5b58\u5728\n                a[i] = 10000;\n                for(int j=m;j&gt;=1;j--){\n                    if(a[j*j]+a[i-j*j]&lt;a[i])\n                        a[i] = a[j*j]+a[i-j*j];\n                }\n            }\n        }\n        return a[n];\n    }\n};\n</code></pre>"},{"location":"LeetCode/DP/DP/#2","title":"2 \u96f6\u94b1\u5151\u6362","text":"<p> \u9898\u76ee\u6765\u6e90</p> <p></p>"},{"location":"LeetCode/DP/DP/#_4","title":"\u9898\u89e3","text":"<p>\u51c6\u786e\u7684\u6765\u8bf4\uff0c\u8fd9\u9898\u5f88\u7b80\u5355\uff0c\u8ddf\u4e0a\u4e00\u9898\u5c31\u662f\u4e00\u4e2a\u6a21\u5b50\u91cc\u523b\u51fa\u6765\u7684\uff0c\u6240\u4ee5\u5c31\u4e0d\u9700\u8981\u518d\u8d58\u8ff0\u4e86\u3002\u6bd4\u8f83\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u8fd9\u9898\u6709\u4e00\u4e2a\\(-1\\)\u4e5f\u5c31\u662f\u4e0d\u5b58\u5728\u7684\u60c5\u51b5\u8bb0\u5f97\u8003\u8651\u4e00\u4e0b\u3002\u522b\u7684\u6ca1\u6709\u95ee\u9898\u4e86\u5c31\u3002</p>"},{"location":"LeetCode/DP/DP/#code_1","title":"Code","text":"<pre><code>class Solution {\npublic:\n    int coinChange(vector&lt;int&gt;&amp; coins, int amount) {\n        if(amount == 0)\n            return 0;\n        sort(coins.begin(),coins.end());\n        int a[amount+1];\n        for(int i=0;i&lt;=amount;i++)\n            a[i]=-1;\n        a[0] = 0;\n        int index,q;\n        int m = coins.size();\n        for(q=0;q&lt;m&amp;&amp;coins[q]&lt;=amount;q++){\n            if(amount==coins[q])\n                return 1;\n            a[coins[q]]=1;\n        }\n        // index \u8bb0\u5f55\u7684\u662fcoins\u4e2d\u4e0d\u5927\u4e8e\u7684\u6700\u5927\u7d22\u5f15\u5750\u6807;\n        index = q-1;\n        for(int i=1;i&lt;=amount;i++){\n            if(a[i]==1)\n                continue;\n            else{\n                int min = 10001;\n                for(int j=0;j&lt;=index&amp;&amp;coins[j]&lt;i;j++){\n                    if(a[coins[j]]==-1||a[i-coins[j]]==-1)\n                        continue;\n                    if(a[coins[j]]+a[i-coins[j]]&lt;min)\n                        min = a[coins[j]]+a[i-coins[j]];\n                }\n                if(min!=10001)\n                    a[i]=min;\n            }\n        }\n        return a[amount];\n    }\n};\n</code></pre>"},{"location":"LeetCode/DP/DP/#3","title":"3 \u6768\u8f89\u4e09\u89d2","text":""},{"location":"LeetCode/DP/DP/#_5","title":"\u9898\u89e3","text":"<p>\u6768\u8f89\u4e09\u89d2\uff0c\u6211\u4eec\u7b80\u5355\u7684\u770b\u9898\u76ee\uff0c\u53ef\u4ee5\u77e5\u9053\uff0c\u4e3b\u8981\u662f\u770b\u6768\u8f89\u4e09\u89d2\u7684\u7b80\u5355\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff0c\u5c31\u662f:</p> \\[temp[j] = result[i-1][j-1] + result[i-1][j]\\] <p>\u7136\u540e\u5c31\u662f\u4e09\u89d2\u7684\u5468\u8fb9\u90fd\u8865\u4e0a<code>1</code>\u5373\u53ef\u3002</p>"},{"location":"LeetCode/DP/DP/#code_2","title":"Code","text":"<pre><code>class Solution {\npublic:\n    vector&lt;vector&lt;int&gt;&gt; generate(int numRows) {\n        vector&lt;vector&lt;int&gt;&gt; result;\n        result.push_back({1});\n        result.push_back({1,1});\n        // initial;\n        if( numRows == 1)\n            return {{1}};\n        else if(numRows==2)\n            return result;\n        for(int i=2;i&lt;numRows;i++){\n            // The number of this level elements number;\n            int num = i+1;\n            vector&lt;int&gt; tmp;\n            tmp.resize(num);\n            tmp[0] = 1;\n            for(int j=1;j&lt;num-1;j++){\n                tmp[j] = result[i-1][j-1]+result[i-1][j];\n            }\n            tmp[num-1] = 1;\n            result.push_back(tmp);\n        }\n        return result;\n    }\n};\n</code></pre>"},{"location":"LeetCode/DP/DP/#4","title":"4 \u6253\u5bb6\u52ab\u820d","text":""},{"location":"LeetCode/DP/DP/#1_1","title":"\u9898\u89e31","text":"<p>\u65f6\u95f4\u590d\u6742\u5ea6 \\(O(N)\\)</p> <p>\u4e3b\u8981\u7684\u601d\u8def\u662f\uff0c\u5c31\u662f\u6211\u4eec\u8bbe\u7f6e\u7684\u8fd9\u4e2a\\(money\\)\u6570\u7ec4\u7684\u5b9a\u4e49\u7684\u533a\u522b\uff0c\u6211\u4eec\u8fd9\u4e2a\u8bbe\u7f6e\u7684\u662f\u904d\u5386\u5230 \\(money[i]\\) \u7684\u65f6\u5019\uff0c\u8868\u793a\u7684\u662f\u904d\u5386\u5230\u8fd9\u4e2a\u623f\u95f4\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5df2\u7ecf\u83b7\u5f97\u7684\u6700\u5927money\u6570\uff08\u5305\u62ec\u81ea\u5df1\uff09\u3002 \u90a3\u4e48\u6211\u4eec\u5c31\u5f88\u5bb9\u6613\u7684\u5f97\u5230\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff1a</p> \\[ money[i] = \\max\\{nums[i]+money[i-2],money[i-1]\\} \\] <p>\u56e0\u4e3a\u6211\u4eec\u9009\u62e9\u4e86\u81ea\u5df1<code>i</code>\u8fd9\u4e2a\u623f\u95f4\uff0c\u90a3\u4e48\u53ea\u80fd\u8003\u8651 <code>i-2</code>\u8fd9\u4e2a\u623f\u95f4\u4e86\uff0c\u6216\u8005\u6211\u4eec<code>i-1</code> \u8fd9\u4e2a\u6700\u4f18\u89e3\u3002\u90a3\u4e48\u6211\u4eec\u5230\u6700\u540e\u7684\u4e00\u4e2a\u623f\u95f4\u7684\u65f6\u5019\uff0c\u5c31\u81ea\u7136\u662f\u6700\u4f18\u7684\u3002</p>"},{"location":"LeetCode/DP/DP/#code_3","title":"Code","text":"<pre><code>class Solution {\npublic:\n    int rob(vector&lt;int&gt;&amp; nums) {\n        int num = nums.size();\n        if(num==1)\n            return nums[0];\n        else if(num == 2)\n            return max(nums[0],nums[1]);\n        vector&lt;int&gt; money;\n        money.resize(num);\n        money[0] = nums[0];\n        money[1] = max(nums[0],nums[1]);\n        for(int i=2;i&lt;num;i++){\n            // \u53ef\u4ee5\u9009\u62e9\u4e0d\u5077\u524d\u4e00\u4e2a\u623f\u95f4\n            money[i]=max(nums[i]+money[i-2],money[i-1]);\n        }\n        return max(money[num-1],money[num-2]);\n    }\n};\n</code></pre>"},{"location":"LeetCode/DP/DP/#2_1","title":"\u9898\u89e32","text":"<p>\u65f6\u95f4\u590d\u6742\u5ea6 \\(O(N^2)\\)</p> <p>\u4e3b\u8981\u7684\u601d\u8def\u662f\uff0c\u5c31\u662f\u6211\u4eec\u8bbe\u7f6e\u7684\u8fd9\u4e2a\\(money\\)\u6570\u7ec4\u7684\u5b9a\u4e49\u7684\u533a\u522b\uff0c\u6211\u4eec\u8fd9\u4e2a\u8bbe\u7f6e\u7684\u662f\u904d\u5386\u5230 \\(money[i]\\) \u7684\u65f6\u5019\uff0c\u8868\u793a\u7684\u662f\u4e00\u5b9a\u4f1a\u9009\u62e9\u4e86\u81ea\u5df1\u8fd9\u4e2a\u623f\u95f4\u5e76\u4e14\u904d\u5386\u5230\u8fd9\u4e2a\u623f\u95f4\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5df2\u7ecf\u83b7\u5f97\u7684\u6700\u5927money\u6570\uff08\u5305\u62ec\u81ea\u5df1\uff09\u3002 \u90a3\u4e48\u6211\u4eec\u5c31\u5f88\u5bb9\u6613\u7684\u5f97\u5230\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff1a</p> \\[ money[i]=nums[i]+max\\{money[i-2]\\}\\] <p>\u56e0\u4e3a\u6211\u4eec\u9009\u62e9\u4e86\u81ea\u5df1\\(i\\)\u8fd9\u4e2a\u623f\u95f4\uff0c\u90a3\u4e48\u53ea\u80fd\u8003\u8651 <code>i-2</code>\u8fd9\u4e2a\u623f\u95f4\u4e86\u3002\u6240\u4ee5\u6211\u4eec\u6700\u7ec8\u7684\u7b54\u6848\u5c31\u662f\u8fd9\u4e2a\u57fa\u7840\u4e0a\u7684\u6700\u540e\u4e24\u4e2a\u623f\u95f4\u7684\u53d6\u6700\u5927\u503c\u5373\u662f\u6211\u4eec\u7684\u6700\u7ec8\u9700\u8981\u7684\u7b54\u6848\u3002</p>"},{"location":"LeetCode/DP/DP/#code_4","title":"Code","text":"<pre><code>class Solution {\npublic:\n    int rob(vector&lt;int&gt;&amp; nums) {\n        int num = nums.size();\n        vector&lt;int&gt; money;\n        money.resize(num);\n        money[0] = nums[0];\n        money[1] = nums[1];\n        for(int i=2;i&lt;num;i++){\n            // \u53ef\u4ee5\u9009\u62e9\u4e0d\u5077\u524d\u4e00\u4e2a\u623f\u95f4\n            int max = -1;\n            for(int j = i-2;j&gt;=0;j--){\n                if(money[j]&gt;max)\n                    max = money[j];\n            }\n            money[i]=nums[i]+max;\n        }\n        return max(money[num-1],money[num-2]);\n    }\n};\n</code></pre>"},{"location":"LeetCode/DP/DP/#5-k","title":"5 \u548c\u4e3a K \u7684\u5b50\u5e8f\u5217","text":"<p>\u9898\u76ee\u6765\u6e90 </p> <p></p>"},{"location":"LeetCode/DP/DP/#1_2","title":"\u9898\u89e31 \u66b4\u529b\u641c\u7d22","text":"<p>\u65f6\u95f4\u590d\u6742\u5ea6\\(O(N^2)\\)</p> <p>\u66b4\u529b\u641c\u7d22\u7684\u601d\u8def\u5c31\u662f\uff0c\u5c31\u662f\u904d\u5386\u6bcf\u4e00\u4e2a\u7ec4\u5408\\((i,j)\\)\u7684\u5b50\u6570\u7ec4\u548c\uff0c\u67e5\u770b\u662f\u5426\u5b58\u5728\u7b49\u4e8e\\(k\\)\u7684\u5b50\u6570\u7ec4\u3002\u90a3\u4e48\u6211\u4eec\u6709\u9012\u63a8\u5f0f\u3002</p> \\[ result[i] = \\begin{cases}  result[i-1] + nums[i] &amp; \\text{if } i &gt; 0 \\\\ nums[0] &amp; \\text{if } i = 0  \\end{cases} \\] <p>\u4e00\u5f00\u59cb\u6211\u7684\u601d\u8def\u662f\u5f00\u4e86\u4e00\u4e2a\\(N*N\\)\u7684\u6570\u7ec4\uff0c\u4f46\u662f\u8fd9\u6837\u5728\u8dd1\u6d4b\u8bd5\u7684\u65f6\u5019\uff0c\u5185\u5b58\u8d85\u4e86\u3002\u6240\u4ee5\u6211\u4eec\u6362\u601d\u8def\uff0c\u4ec5\u5f00\u4e00\u4e2a\\(O(N)\\)\u7684\u6570\u7ec4\uff0c\u7136\u540e\u5229\u7528\u9012\u63a8\u5f0f\u6765\u9a8c\u8bc1\u662f\u5426\u4e3a\\(k\\).\u8dd1\u662f\u8dd1\u901a\u4e86\uff0c\u4f46\u8fd8\u662f\u82b1\u8d39\u4e86 \\(\\frac{N*(N-1)}{2}\\)\u7684\u65f6\u95f4\uff0c\\(O(N^2)\\)\u7684\u65f6\u95f4\u8fd8\u4e0d\u662f\u6700\u4f18\u7684\u3002</p>"},{"location":"LeetCode/DP/DP/#code_5","title":"Code","text":"<pre><code>class Solution {\npublic:\n    int subarraySum(vector&lt;int&gt;&amp; nums, int k) {\n        int size = nums.size();\n        vector&lt;int&gt;result;\n        result.resize(size);\n        int count = 0;\n        result[0] = nums[0];\n        if(result[0]==k)\n            count++;\n        for(int i=1;i&lt;size;i++){\n            result[i] = result[i-1] + nums[i];\n        }\n\n        for(int i = 1;i&lt;size;i++){\n            int temp = result[i];\n            for(int j = 0;j&lt;=i;j++){\n                if(temp==k)\n                    count++;\n                temp -= nums[j];\n            }\n        }\n        return count;\n    }\n};\n</code></pre>"},{"location":"LeetCode/DP/DP/#2_2","title":"\u9898\u89e32 \u524d\u7f00\u548c+\u54c8\u5e0c\u8868\u4f18\u5316","text":"<p>\u65f6\u95f4\u590d\u6742\u5ea6 \\(O(N)\\)</p> <p>\u601d\u8def\u5176\u5b9e\u4e00\u5f00\u59cb\u7684\u65f6\u5019\u60f3\u5230\u4e86\uff0c\u56e0\u4e3a\u505a\u8fc7\u7c7b\u4f3c \u4e24\u6570\u4e4b\u548c\u7684\u9898\u76ee\uff0c\u8fd9\u91cc\u4e5f\u662f\u4e00\u6837\uff0c\u6211\u4eec\u4ece\u5de6\u5f80\u53f3\u904d\u5386\uff0c\u53ef\u4ee5\u5f97\u5230\u8fd9\u6837\u4e00\u4e2a\u9012\u63a8\u5f0f\uff1a \\(pre[j] - pre[i-1] == k\\)\u8fd9\u4e2a\u662f\u6211\u4eec\u8981\u5224\u65ad\u7684\u5f0f\u5b50\uff0c\u800c\\(pre[j]\\)\u8868\u793a\u7684\u5c31\u662f\\((0,j)\\)\u7684\u524d\u7f00\u548c\uff0c\u6211\u4eec\u5c06\u4e0a\u8ff0\u7684\u5f0f\u5b50\u8fdb\u884c\u53d8\u6362\uff0c\u5f97\u5230\u4e0b\u8ff0\u7684\u5185\u5bb9\uff1a \\(pre[j]-k == pre[i-1]\\) \u5176\u5b9e\u5c31\u5f88\u81ea\u7136\u7684\u60f3\u5230\u662f\u5426\u5b58\u5728\u95ee\u9898\u4f7f\u7528\u54c8\u5e0c\u8868\uff0c\u6211\u4eec\u53ef\u4ee5\u7acb\u9a6c\u7684\u5f97\u5230\u7528\u4e00\u4e2a\\(mp\\)\u6765\u5b58\u653e\u3002\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5f53\u6211\u4eec\u6709\u8fd9\u6837\u7684\u4e00\u4e32\u6570\u7ec4\\(\\{1,2,3\\},k=5\\) \u90a3\u4e48\u6211\u4eec\u5c31\u6709</p> i \\(pre[i]\\) \\(pre[i]-k\\) \u662f\u5426\u67e5\u5230\\(mp[pre[i]-k]\\) 0 1 -4 Nope 1 3 -2 Nope 2 6 1 Find! k mp[k] 0 1 1 1 3 1 <p>\u6211\u4eec\u770b\u4e0a\u8ff0\u7684\u52a0\u9ed1\u4f8b\u5b50\uff0c\u5c31\u662f\u627e\u5230\\(\\{2,3\\}\\)\u8fd9\u4e2a\u548c\u4e3a\\(5\\)\u7684\u5b50\u6570\u7ec4\u3002</p>"},{"location":"LeetCode/DP/DP/#code_6","title":"Code","text":"<pre><code>class Solution {\npublic:\n    int subarraySum(vector&lt;int&gt;&amp; nums, int k) {\n        // mp \u8bb0\u5f55\u7684\u662f \u622a\u6b62 i \u7684\u524d\u7f00\u548c\n        unordered_map&lt;int,int&gt;mp;\n        mp[0] = 1;\n        int pre = 0,count = 0;\n        for(int &amp;num : nums){\n            pre+=num;\n            if(mp.find(pre-k)!=mp.end()){\n                count+=mp[pre-k];\n            }\n            mp[pre]++;\n        }\n        return count;\n    }\n};\n</code></pre>"},{"location":"LeetCode/DP/DP/#6","title":"6 \u6c42\u77e9\u5f62\u7684\u6700\u5927\u9762\u79ef","text":"<p>\u9898\u76ee\u6765\u6e90</p> <p></p>"},{"location":"LeetCode/DP/DP/#dp","title":"\u9898\u89e3 DP","text":"<p>\u65f6\u95f4\u590d\u6742\u5ea6 \\(O(N^2)\\) Leetcode \u7ed9\u7684\u65e2\u5b9a\u65f6\u95f4\u590d\u6742\u5ea6\u662f \\(O(N)\\) \u6240\u4ee5\u8fd9\u4e2a\u52a8\u6001\u89c4\u5212\u7684\u89e3\u6cd5\u4e0d\u662f\u6700\u4f18\u89e3\u3002\u6211\u4eec\u7b49\u4e0b\u4f1a\u8003\u8651\u5355\u8c03\u6808\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002</p> <p>\u770b\u5230\u8fd9\u9898\u5f88\u81ea\u7136\u7684\u60f3\u6cd5\u5c31\u662f\u5f00\u4e00\u4e2a\u4e8c\u7ef4\u6570\u5b57 <code>rectArray[len][len]</code>,\u5176\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20<code>rectArray[i][j]</code>,\u8bb0\u5f55\u7684\u662f\u4ece<code>i</code>\u5230<code>j</code>\u7684\u6700\u5927\u53ef\u517c\u5bb9\u7684\u5bbd\u5ea6\uff0c\u56e0\u4e3a\u6211\u4eec\u8981\u6c42\u7684\u662f\u9762\u79ef\uff0c\u5df2\u7ecf\u77e5\u9053\u7684\u5bbd\u5ea6\u662f<code>j-i+1</code>,\u6240\u4ee5\u9762\u79ef\u5c31\u53ef\u4ee5\u5f88\u81ea\u7136\u7684\u77e5\u9053\u3002\u6240\u4ee5\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u72b6\u6001\u8f6c\u79fb\u7684\u65b9\u7a0b:</p> \\[ rectArray[i][j] = \\min\\{rectArray[i][j-1],height[j]\\} \\] <p>\u7136\u540e\u6bcf\u6b21\u7684\u8fdb\u884c\u6700\u5927\u9762\u79ef\u7684\u66f4\u65b0\u5373\u53ef\u3002\u4f46\u5f88\u663e\u7136\u8fd9\u4e2a\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f\\(O(N^2)\\),\u4e0d\u662f\u6700\u4f18\u89e3\u3002\u6211\u4eec\u4f1a\u5728Stack\u7684\u89e3\u6cd5\u4e2d\u8fdb\u884c\u4f18\u5316\uff0c\u6211\u4eec\u9009\u62e9\u5355\u8c03\u6808\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002</p>"},{"location":"LeetCode/DP/DP/#code_7","title":"Code","text":"<pre><code>class Solution {\npublic:\n    int largestRectangleArea(vector&lt;int&gt;&amp; heights) {\n        int len = heights.size();\n        vector&lt;int&gt; square;\n        square.resize(len);\n        int maxSquare = 0;\n        for(int i=0;i&lt;len;i++){\n            square[i] = heights[i];\n            if(heights[i]&gt;maxSquare)\n                maxSquare = heights[i];\n        }\n        // start represents the 2-arrays start coordinates;\n        int start = 0;\n        for(;start&lt;len;start++){\n            for(int j=start+1;j&lt;len;j++){\n                if(j == start+1){\n                    square[j-1] = heights[j-1];\n                }\n                square[j] = min(square[j-1],heights[j]); \n                int s = (j-start+1)*(square[j]);\n                if(s&gt;maxSquare)\n                    maxSquare = s;\n            }\n        }\n        return maxSquare;\n    }\n};\n</code></pre>"},{"location":"LeetCode/Greedy/Greedy/","title":"\u8d2a\u5fc3\u7b97\u6cd5","text":""},{"location":"LeetCode/Greedy/Greedy/#introduce","title":"Introduce","text":"<p>\u8d2a\u5fc3\u7b97\u6cd5\uff0c\u5b57\u9762\u610f\u601d\u5c31\u662f\u9009\u53d6\u5f53\u524d\u72b6\u6001\u4e0b\u7684\u6700\u4f18\u89e3\uff0c\u4e5f\u5c31\u662f\u672c\u5730\u6700\u4f18\u89e3<code>local optimal solution</code></p> <p>\u4e0b\u9762\u662f <code>wiki</code> \u7684\u5b9a\u4e49:</p> <p>A greedy algorithm is any algorithm that follows the problem-solving heuristic of making the locally optimal choice at each stage.[1] In many problems, a greedy strategy does not produce an optimal solution, but a greedy heuristic can yield locally optimal solutions that approximate a globally optimal solution in a reasonable amount of time.</p> <p>For example, a greedy strategy for the travelling salesman problem (which is of high computational complexity) is the following heuristic: \"At each step of the journey, visit the nearest unvisited city.\" This heuristic does not intend to find the best solution, but it terminates in a reasonable number of steps; finding an optimal solution to such a complex problem typically requires unreasonably many steps. </p>"},{"location":"LeetCode/Greedy/Greedy/#_2","title":"\u4f8b\u9898","text":""},{"location":"LeetCode/Greedy/Greedy/#1","title":"1 \u8df3\u8dc3\u6e38\u620f","text":"<p> \u9898\u76ee\u6765\u6e90</p> <p></p>"},{"location":"LeetCode/Greedy/Greedy/#_3","title":"\u9898\u89e3","text":"<p>\u6211\u4eec\u8fd9\u9898\u4e3b\u8981\u662f\u8d2a\u5fc3\u7b97\u6cd5\u3002\u6211\u4eec\u9996\u5148\u5b9a\u4e49\u4e00\u4e2a\\(distance\\)\u6570\u7ec4\uff0c\u4ed6\u7684\u4f5c\u7528\u662f\u8bb0\u5f55\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\\(i\\)\uff0c\u6240\u80fd\u8df3\u5230\u7684\u6700\u5927\u4f4d\u7f6e\u3002\u6211\u4eec\u9996\u5148\u8fdb\u884c\u4e00\u904d\u904d\u5386\u3002\u7136\u540e\u6309\u987a\u5e8f\u4f9d\u6b21\u904d\u5386\u4ece\u8be5\u70b9\u5f00\u59cb\u5230\u80fd\u8df3\u8dc3\u7684\u6700\u5927\u8ddd\u79bb\u7684\u8fc7\u7a0b\u4e2d\u5bfb\u627e\u4e0b\u4e00\u4e2a\u80fd\u8df3\u8dc3\u7684\u6700\u5927\u8ddd\u79bb\uff0c\u4f9d\u6b21\u5f80\u590d\uff0c\u6211\u4eec\u6a21\u62df\u8df3\u8dc3\u7684\u8fc7\u7a0b\uff0c\u8fd9\u5176\u4e2d\u5176\u5b9e\u5c31\u662f\u8fd0\u7528\u4e86\u8d2a\u5fc3\u7684\u7b97\u6cd5\uff0c\u9009\u53d6\u5f53\u524d\u72b6\u6001\u4e2d\u80fd\u8dc3\u8fc1\u7684\u6700\u5927\u503c\u8fdb\u884c\u8df3\u8dc3\u3002</p>"},{"location":"LeetCode/Greedy/Greedy/#code","title":"Code","text":"<pre><code>class Solution {\npublic:\n    bool canJump(vector&lt;int&gt;&amp; nums) {\n        vector&lt;int&gt; distance;\n        int len = nums.size();\n        if(len==1)\n            return true;\n        for(int i =0;i&lt;len;i++){\n            // temp represents that the next boundary position that we can jump;\n            distance.push_back(nums[i]+i);\n        }\n        int index = 0;\n        for(int j=0;j&lt;=len-2;){\n            // The case that after we update the array, we get the destination, avoid ;\n            if(distance[j]&gt;=len-1)\n                return true;\n            int max = distance[j];\n            for(int p = j+1;p&lt;=distance[j];p++){\n                if(distance[p]&gt;max){\n                    index = p;\n                    max = distance[p];\n                }\n            }\n            if(distance[j]==max)\n                break;\n            j = index;\n        } \n        return false;\n    }\n};\n</code></pre>"},{"location":"LeetCode/Greedy/Greedy/#2-ii","title":"2 \u8df3\u8dc3\u6e38\u620fII","text":"<p>\u9898\u76ee\u6765\u6e90 </p>"},{"location":"LeetCode/Greedy/Greedy/#_4","title":"\u9898\u89e3","text":"<p>\u8fd9\u9898\u5c31\u66f4\u7b80\u5355\u4e86\u3002\u5728\u4e0a\u4e00\u9898\u7684\u57fa\u7840\u4e0a\u52a0\u4e00\u4e2a<code>count</code>\u4f5c\u4e3a\u8bb0\u5f55\u8df3\u8dc3\u6b21\u6570\u5373\u53ef\u3002over</p>"},{"location":"LeetCode/Greedy/Greedy/#3","title":"3 \u5212\u5206\u5b57\u6bcd\u533a\u95f4","text":"<p>\u9898\u76ee\u6765\u6e90</p> <p>\u5176\u5b9e\u8fd9\u9898\u5c31\u662f \u5408\u5e76\u6700\u5927\u8fde\u7eed\u533a\u95f4\u7684\u53d8\u5f0f</p> <p></p>"},{"location":"LeetCode/Greedy/Greedy/#_5","title":"\u9898\u89e3","text":"<p>\u6211\u4eec\u9996\u5148\u8981\u660e\u767d\u8fd9\u9898\u7684\u4e00\u4e2a\u601d\u8def\u5c31\u662f \u540c\u4e00\u4e2a\u5b57\u6bcd\u6700\u591a\u51fa\u73b0\u5728\u4e00\u4e2a\u5b57\u7b26\u4e32\u5185\uff0c\u6362\u53e5\u8bdd\u8bf4\u5c31\u662f\u7b80\u5355\u7684\u7406\u89e3\u4e3a\uff0c\u4e0d\u540c\u7684\u5b57\u7b26\u4e32\u6bb5\u5185\u4e0d\u53ef\u80fd\u51fa\u73b0\u76f8\u540c\u7684\u5b57\u6bcd\u3002\u66f4\u7b80\u5355\u7684\u8bf4\u6cd5\u662f\uff0c\u4e00\u79cd\u5b57\u6bcd\u53ea\u53ef\u80fd\u51fa\u73b0\u5728\u540c\u4e00\u4e2a\u5b57\u7b26\u4e32\u6bb5\u5185\u3002\u6240\u4ee5\u6211\u4eec\u8fd9\u4e00\u9898\u7684\u8d2a\u5fc3\u601d\u8def\u5c31\u662f \u6211\u4eec\u8981\u627e\u5230\u4fdd\u8bc1\u6700\u5927\u7684\u5b57\u7b26\u4e32\u6bb5 \u6765\u5305\u542b\u67d0\u4e00\u5b57\u6bcd\u3002</p> <p>\u90a3\u4e48\u601d\u8def\u5c31\u5f88\u7b80\u5355\u4e86\uff0c\u6211\u4eec\u7684\u9996\u8981\u76ee\u6807\u5c31\u662f\u627e\u5230\u6bcf\u4e2a\u5b57\u6bcd\u5bf9\u5e94\u7684\u533a\u95f4\u3002\u7136\u540e\u8fdb\u884c\u533a\u95f4\u7684\u5408\u5e76\u3002\u7136\u540e\u5c31\u6ca1\u4e86\u3002\u8fd9\u9898\u7684\u533a\u95f4\u5408\u5e76\u6211\u9009\u62e9\u4e86\u4f7f\u7528<code>priority_queue</code>\u6765\u8fdb\u884c\u5408\u5e76\u3002\u7136\u540e\u8fdb\u884c\u904d\u5386\uff0c\u627e\u5230\u6700\u5927\u7684\u533a\u95f4\u5373\u53ef\u3002</p>"},{"location":"LeetCode/Greedy/Greedy/#code_1","title":"Code","text":"<pre><code>class Solution {\npublic:\n    vector&lt;int&gt; partitionLabels(string s) {\n        set&lt;char&gt; charSet;\n        map&lt;char,pair&lt;int,int&gt;&gt; mp;\n        int len = s.length();\n        for(int i=0;i&lt;len;i++){\n            char c = s[i];\n            // find it;\n            if(charSet.find(c)==charSet.end()){\n                charSet.insert(c);\n                mp.insert(make_pair(c,make_pair(i,i)));\n            }else{\n                mp[c].second = i;\n            }\n        }\n        // combine the interval;\n        priority_queue&lt;pair&lt;int,int&gt;,vector&lt;pair&lt;int,int&gt;&gt;,greater&lt;pair&lt;int,int&gt;&gt;&gt;pq;\n        for(auto it:mp){\n            pq.push(it.second);\n        }\n        // it stores for the intervals;\n        vector&lt;int&gt; result;\n        auto interval = pq.top();\n        int a = 0;\n        int b = interval.second;\n        pq.pop();\n        while(!pq.empty()){\n            interval = pq.top();\n            pq.pop();\n            if(interval.first&gt;=a&amp;&amp;interval.second&lt;=b)\n                continue;\n            else if(interval.first&lt;b&amp;&amp;interval.second&gt;b){\n                b = interval.second;\n            }else if(interval.first==b+1){\n                result.push_back(b-a+1);\n                a = b+1;\n                b = interval.second;\n            }\n        }\n        result.push_back(b-a+1);\n        return result;\n    }\n};\n</code></pre>"},{"location":"LeetCode/Greedy/Greedy/#4","title":"4  \u4e8c\u53c9\u6811\u4f9b\u6696\u5668","text":"<p>\u8fd9\u9898\u6bd4\u8f83\u56f0\u96be\uff0c\u56f0\u4f4f\u6211\u6bd4\u8f83\u4e45,\u4e3b\u8981\u662f\u81ea\u5df1\u4e00\u5f00\u59cb\u628a\u95ee\u9898\u60f3\u7684\u8fc7\u7b80\u5355\u4e86</p> <p>\u9898\u76ee\u94fe\u63a5 </p>"},{"location":"LeetCode/Greedy/Greedy/#_6","title":"\u9898\u89e3","text":"<p>\u8fd9\u9898\u7684\u601d\u8def\u4e3b\u8981\u662f\u5206\u4e3a\u4e24\u90e8\u5206:</p> <ul> <li>\u5efa\u6811\uff0c\u901a\u8fc7\u7ed9\u7684\u5c42\u5e8f\u904d\u5386\u7684\u6570\u7ec4\u8fdb\u884c\u4e8c\u53c9\u6811\u7684\u5efa\u7acb</li> <li>\u5229\u7528\u8d2a\u5fc3\u6765\u8fdb\u884c\u9012\u5f52\u7684\u4f9b\u6696\u5668\u7684\u653e\u7f6e</li> </ul>"},{"location":"LeetCode/Greedy/Greedy/#_7","title":"\u5efa\u6811","text":"<p>\u9996\u5148\u662f\u5c42\u5e8f\u904d\u5386\u6765\u8fdb\u884c\u5efa\u6811\uff0c\u6211\u4eec\u4f7f\u7528 <code>BFS</code> \u6765\u6a21\u62df\u5c42\u5e8f\u904d\u5386\uff0c\u6839\u636e\u63d0\u4f9b\u7684\u6570\u7ec4\u6765\u5efa\u7acb\u4e8c\u53c9\u6811\u3002\u53ea\u9700\u8981\u4e00\u4e2a<code>index</code> \u6765\u4f5c\u4e3a\u6570\u7ec4\u7684\u7d22\u5f15\u5373\u53ef\u3002\u7136\u540e\u4e00\u4e2a\u961f\u5217\u6765\u5b58\u653e\u5f53\u524d\u8bbf\u95ee\u5230\u7684\u8282\u70b9\u5373\u53ef\u3002\u6211\u4eec\u90fd\u8ba9\u9ed8\u8ba4\u7684\u8282\u70b9\u503c\u4e3a <code>0</code>\u3002\u56e0\u4e3a\u540e\u7eed\u8282\u70b9\u503c\u662f\u6709\u7528\u7684\uff0c\u4f1a\u8fdb\u884c\u7edf\u4e00\u7684\u8bbe\u7f6e\u3002</p>"},{"location":"LeetCode/Greedy/Greedy/#_8","title":"\u4f9b\u6696\u5668\u7684\u653e\u7f6e","text":"<p>\u9996\u5148\uff0c\u6211\u4eec\u8981\u77e5\u9053\u7684\u662f\uff0c\u4f9b\u6696\u671f\u7684\u6027\u8d28 \u53ef\u4ee5\u8ba9\u81ea\u5df1\u7684\u8282\u70b9\uff0c\u81ea\u5df1\u7684\u7236\u8282\u70b9\uff0c\u4ee5\u53ca\u4e24\u4e2a\u81ea\u5df1\u7684\u5b50\u8282\u70b9\u90fd\u80fd\u63a5\u6536\u5230\u4f9b\u6696\u3002\u90a3\u4e48\u6211\u4eec\u9996\u5148\u5bf9 <code>val</code> \u503c\u8fdb\u884c\u8bbe\u7f6e</p> <ul> <li><code>val == 0</code> \u8868\u793a\u7684\u662f\u8fd9\u4e2a\u8282\u70b9\uff0c\u6211\u4eec\u8fdb\u884c\u4e86\u5e03\u7f6e\u4f9b\u6696\u5668</li> <li><code>val == 1</code> \u8868\u793a\u7684\u662f\u8fd9\u4e2a\u8282\u70b9\uff0c\u6211\u4eec\u6ca1\u6709\u5e03\u7f6e\u4f9b\u6696\u5668 , \u4f46\u662f\u4f9b\u6696\u4eab\u53d7\u5230\u4e86</li> <li><code>val == 2</code> \u8868\u793a\u7684\u662f\u8fd9\u4e2a\u8282\u70b9\uff0c\u6ca1\u6709\u4eab\u53d7\u5230\u4f9b\u6696\uff0c\u4e5f\u6ca1\u6709\u5e03\u7f6e\u4f9b\u6696\u5668</li> </ul> <p>\u7136\u540e\u6211\u4eec\u8981\u8003\u8651\u5230\u662f\u6700\u5c0f\u7684\u6570\u76ee\uff0c\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a\u8d2a\u5fc3\u7684\u601d\u60f3\u3002\u6211\u4eec\u9996\u5148\u77e5\u9053\uff0c\u4e00\u4e2a\u8282\u70b9\u5982\u679c\u5b89\u88c5\u4e86\u4f9b\u6696\uff0c\u90a3\u4e48\u5b83\u53ef\u4ee5\u8ba9\u4e0e\u81ea\u5df1\u94fe\u63a5\u6709\u5173\u7684\u6700\u76f4\u63a5\u7684\u4e09\u5c42\u90fd\u80fd\u4eab\u53d7\u5230\u4f9b\u6696\u3002\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u5229\u7528\u8fd9\u4e2a\u6027\u8d28\u6765\u8fdb\u884c\u9012\u5f52\u7684\u5224\u65ad\u3002\u9996\u5148\uff0c\u6211\u4eec\u7684\u60f3\u6cd5\u5c31\u662f \u53f6\u5b50 \u8282\u70b9\u4e0d\u63d0\u4f9b\u4f9b\u6696\u3002\u53cd\u800c\u8ba9\u7236\u8282\u70b9\u6765\u63d0\u4f9b\u3002\u5982\u679c\u8ba9\u53f6\u8282\u70b9\u6765\u63d0\u4f9b\u4f9b\u6696\u7684\u8bdd\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u4f1a\u727a\u7272\u4e86\u4e00\u5c42\u7684\u4f9b\u6696\u3002\u6240\u4ee5\u6211\u4eec\u7684\u601d\u8def\u5c31\u662f\uff0c\u4ece\u53f6\u8282\u70b9\u5f00\u59cb\uff0c\u9010\u6b65\u5411\u4e0a\u8fdb\u884c\u9012\u5f52\u7684\u5224\u65ad\u3002 \u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u6211\u4eec\u8fd9\u91cc\u9009\u62e9\u540e\u5e8f\u904d\u5386\u6811\uff0c\u6700\u540e\u518d\u5224\u65ad \u6839\u8282\u70b9</p> <p>\u63a5\u4e0b\u6765\u7684\u5c31\u662f\u7b80\u5355\u7684 case \u5224\u65ad:</p> <ul> <li>Step1: \u8c03\u7528 <code>postorderTree</code> \u51fd\u6570\u6765\u83b7\u53d6 \u5de6\u53f3\u5b50\u6811\u7684\u4f9b\u6696\u60c5\u51b5\uff0c\u5982\u679c\u662f\u7a7a\u7684\u8282\u70b9\uff0c\u6211\u4eec\u90fd\u9ed8\u8ba4\u5b83\u4eec\u5df2\u7ecf\u88ab\u4f9b\u6696\u4e86\u3002</li> <li> <p>Step2:  </p> <ul> <li>Case 1: <code>left == 1 &amp;&amp; right == 1</code> \u8868\u793a\u7684\u662f\u5de6\u53f3\u5b50\u6811\u90fd\u88ab\u4f9b\u6696\u4e86\uff0c\u4f46\u662f\u6ca1\u6709\u4f9b\u6696\u5668\u3002\u56e0\u4e3a\u6211\u4eec\u662f\u4ece\u53f6\u8282\u70b9\u5f00\u59cb\u7684\u904d\u5386\uff0c\u6240\u4ee5\u8fd9\u91cc\u5c31\u4e0d\u53ef\u80fd\u662f\u7531\u7236\u8282\u70b9\u6765\u63d0\u4f9b\u7684\u4f9b\u6696\uff0c\u4e5f\u5c31\u662f\u8bf4\u8fd9\u4e24\u4e2a\u8282\u70b9\u4eab\u53d7\u5230\u7684\u4f9b\u6696\u90fd\u662f\u7531\u81ea\u5df1\u7684\u5b50\u8282\u70b9\u6765\u63d0\u4f9b\u7684\u3002\u6240\u4ee5\u6211\u4eec\u5c31\u8bbe\u7f6e <code>root.val = 2</code>;\u8868\u793a\u7684\u662f\u8fd9\u4e2a\u8282\u70b9\u6ca1\u6709\u88ab\u4f9b\u6696\u3002</li> <li>Case 2: <code>left == 2 || right == 2</code> \u8868\u793a\u7684\u662f\u5de6\u53f3\u5b50\u6811\u6709\u4e00\u4e2a\u6ca1\u6709\u88ab\u4f9b\u6696\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u9700\u8981\u5728\u8fd9\u4e2a\u8282\u70b9\u4e0a\u5b89\u88c5\u4f9b\u6696\u5668\u3002\u6240\u4ee5\u6211\u4eec\u5c31\u8bbe\u7f6e <code>root.val = 0</code> \u8868\u793a\u7684\u662f\u8fd9\u4e2a\u8282\u70b9\u88ab\u4f9b\u6696\u4e86\u3002\u540c\u65f6\u9700\u8981 <code>result++</code> \u8868\u793a\u7684\u662f\u6211\u4eec\u5b89\u88c5\u4e86\u4e00\u4e2a\u4f9b\u6696\u5668\u3002</li> <li>Case 3: <code>left == 0 || right == 0</code> \u8868\u793a\u7684\u662f\u5de6\u53f3\u5b50\u6811\u6709\u4e00\u4e2a\u8282\u70b9\u88ab\u4f9b\u6696\u4e86\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u4e0d\u9700\u8981\u5728\u8fd9\u4e2a\u8282\u70b9\u4e0a\u5b89\u88c5\u4f9b\u6696\u5668\u3002\u6240\u4ee5\u6211\u4eec\u5c31\u8bbe\u7f6e <code>root.val = 1</code> \u8868\u793a\u7684\u662f\u8fd9\u4e2a\u8282\u70b9\u6ca1\u6709\u88ab\u4f9b\u6696\uff0c\u4f46\u662f\u4eab\u53d7\u5230\u4e86\u4f9b\u6696\u3002</li> </ul> </li> <li> <p>Step3 : \u8fd4\u56de\u503c\u3002\u6211\u4eec\u5728\u5bf9 <code>postorderTree(root)</code> \u7684\u65f6\u5019\uff0c\u4e5f\u8981\u6700\u540e\u5224\u65ad\u4e00\u4e0b\u6211\u4eec\u7684<code>root</code>\u7684\u53d7\u5230\u4f9b\u6696\u7684\u60c5\u51b5\uff0c\u5982\u679c\u662f <code>2</code> \u7684\u8bdd\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u9700\u8981\u5b89\u88c5\u4e00\u4e2a\u4f9b\u6696\u5668\u3002\u6240\u4ee5\u6211\u4eec\u5c31\u9700\u8981 <code>result++</code> \u8868\u793a\u7684\u662f\u6211\u4eec\u5b89\u88c5\u4e86\u4e00\u4e2a\u4f9b\u6696\u5668\u3002 </p> </li> </ul> <p>\u5176\u5b9e\u903b\u8f91\u662f\u7b80\u5355\u7684\uff0c\u4f46\u662f\u81ea\u5df1\u597d\u50cf\u628a\u95ee\u9898\u60f3\u7684\u53e6\u4e00\u79cd\u60c5\u51b5\uff0c\u5bfc\u81f4\u4e86\u81ea\u5df1\u7684\u601d\u8def\u4e0d\u591f\u6e05\u6670\u3002</p>"},{"location":"LeetCode/Greedy/Greedy/#code_2","title":"Code","text":"<pre><code>import java.util.LinkedList;\nimport java.util.Queue;\nimport java.util.Stack;\n\nclass Node{\n        int val;\n        Node left;\n        Node right;\n        public Node(int val){\n            this.val = val;\n            left = null;\n            right = null;\n        }\n    }\n\npublic class Main {\n\n    public static int solution(int[] nodes) {\n        // Please write your code here\n        result = 0;\n        Node root = buildTree(nodes);\n\n        if(postorderTree(root) == 2){\n            result++;\n        }\n        return result;\n    }\n\n    static int result = 0;\n    public static Node buildTree(int[] nodes){\n        // Base case\n        if(nodes == null || nodes[0] == 0)\n            return null;\n\n        Node root = new Node(0);\n        Queue&lt;Node&gt; queue = new LinkedList&lt;&gt;();\n        queue.offer(root);\n\n        int i = 1;    \n        int len = nodes.length;\n        while(!queue.isEmpty()&amp;&amp; i &lt; len){\n            Node current = queue.peek();\n            queue.poll();\n\n            // we find the node has left node;\n            if(i&lt;len &amp;&amp; nodes[i] == 1){\n                current.left = new Node(0);\n                queue.offer(current.left);\n            }\n            i++;\n\n            // we find the node has right node;\n            if(i&lt;len&amp;&amp;nodes[i] ==1){\n                current.right = new Node(0);\n                queue.offer(current.right);\n            }\n            i++;\n        }\n        return root;\n    }\n\n    /**\n     * 3 state:\n     * 0 -&gt; \u5df2\u7ecf\u5b89\u88c5\u4e0a\u4f9b\u6696;\n     * 1 -&gt; \u8e6d\u5230\u4e86\uff0c\u672a\u5b89\u88c5;\n     * 2 -&gt; \u672a\u4f9b\u6696;\n     * @param root\n     * @return\n     */\n    public static int postorderTree(Node root){\n        // The null node represents it has been offered warm;\n        if(root == null)\n            return 1;\n\n        int left = postorderTree(root.left);\n\n        int right = postorderTree(root.right);\n\n        // it turns to the root;\n        if(left == 1 &amp;&amp; right == 1){\n            return 2;\n        }\n\n        if(left == 2 || right == 2){\n            result++;\n            return 0;\n        }\n\n        if(left == 0 || right == 0 )\n            return 1;\n\n        return 1;\n    }\n\n\n\n    public static void main(String[] args) {\n        //  You can add more test cases here\n        int[] nodes1 = {1, 1, 0, 1, 1};\n        int[] nodes2 = {1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1};\n        int[] nodes3 = {1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1};\n\n        System.out.println(solution(nodes1) == 1);\n        System.out.println(solution(nodes2) == 3);\n        System.out.println(solution(nodes3) == 3);\n    }\n}\n</code></pre>"},{"location":"LeetCode/Heap/Heap/","title":"\u5806","text":"<p>\u5806 \u4e5f\u5c31\u662f\u4f18\u5148\u961f\u5217 </p> <ul> <li>Max-Heap</li> <li>Min-Heap </li> </ul> <p>\u5728 Java \u7684 <code>Collections</code> \u4e2d\u7684 <code>Priority_Queue</code>  \u662f\u5b9a\u4e49\u7684\u6700\u5c0f\u5806\uff0c\u5982\u679c\u60f3\u8ba9\u5b83\u4e3a\u6700\u5927\u5806\uff0c\u5219\u9700\u8981\u4f20\u5165\u91cd\u8f7d\u8fc7\u540e\u7684<code>Comparable</code>\u63a5\u53e3\uff0c\u800c<code>Cpp</code>\u7684 <code>stl</code>\u6070\u6070\u76f8\u53cd\uff0c\u5b83\u9ed8\u8ba4\u7684\u662f\u6700\u5927\u5806\u3002\u6240\u4ee5\u6211\u5728\u5199\u9898\u7684\u65f6\u5019\uff0c\u4e00\u822c\u5c31\u662f\u770b\u9700\u8981\u5b9a\u4e49\u7684\u662f\u4ec0\u4e48\u5806\uff0c\u800c\u8fdb\u884c\u9009\u62e9\u8bed\u8a00\u5077\u61d2\u4e86 x</p>"},{"location":"LeetCode/Heap/Heap/#_2","title":"\u4f8b\u9898","text":""},{"location":"LeetCode/Heap/Heap/#1-k","title":"1 \u6570\u7ec4\u4e2d\u7684\u7b2ck\u4e2a\u6700\u5927\u7684\u5143\u7d20","text":"<p>\u9898\u76ee\u6765\u6e90</p> <p>\u7ed9\u5b9a\u6574\u6570\u6570\u7ec4 <code>nums</code> \u548c\u6574\u6570 <code>k</code>\uff0c\u8bf7\u8fd4\u56de\u6570\u7ec4\u4e2d\u7b2c <code>k</code> \u4e2a\u6700\u5927\u7684\u5143\u7d20\u3002 \u8bf7\u6ce8\u610f\uff0c\u4f60\u9700\u8981\u627e\u7684\u662f\u6570\u7ec4\u6392\u5e8f\u540e\u7684\u7b2c <code>k</code> \u4e2a\u6700\u5927\u7684\u5143\u7d20\uff0c\u800c\u4e0d\u662f\u7b2c <code>k</code> \u4e2a\u4e0d\u540c\u7684\u5143\u7d20\u3002</p> <p>\u4f60\u5fc5\u987b\u8bbe\u8ba1\u5e76\u5b9e\u73b0\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(n)\\) \u7684\u7b97\u6cd5\u89e3\u51b3\u6b64\u95ee\u9898\u3002</p>"},{"location":"LeetCode/Heap/Heap/#_3","title":"\u9898\u89e3","text":"<p>\u5f88\u7b80\u5355\u7684\u601d\u8def\uff0c\u6211\u4eec\u65e2\u7136\u8981\u627e\u7b2c k \u5927\u7684\u5143\u7d20\uff0c\u90a3\u4e48\u5f88\u81ea\u7136\u7684\u60f3\u6cd5\u5c31\u662f\uff0c\u5b83\u53c8\u662f\u6700\u5927\u7684<code>k</code>\u4e2a\u5143\u7d20\u4e2d\u7684\u6700\u5c0f\u503c\u3002\u6240\u4ee5\u6211\u4eec\u81ea\u7136\u7684\u60f3\u6cd5\u662f\u7ef4\u62a4\u4e00\u4e2a\u6700\u5c0f\u5806\u3002\u7b49\u904d\u5386\u5b8c\u6240\u6709\u7684\u5143\u7d20\u7684\u65f6\u5019\uff0c\u53ea\u9700\u8981\u77e5\u9053\u6700\u540e\u7684\u5806\u7684\u6700\u5c0f\u503c----\u90a3\u4e2a\u5c31\u662f\u6570\u7ec4\u4e2d\u7684\u7b2c<code>K</code>\u4e2a\u6700\u5927\u7684\u5143\u7d20\u3002</p>"},{"location":"LeetCode/Heap/Heap/#code","title":"Code","text":"<pre><code>class Solution {\n    public int findKthLargest(int[] nums, int k) {\n        PriorityQueue &lt;Integer&gt; pq = new PriorityQueue&lt;&gt;();\n        // Step1: we set a Min-Heap;\n        for(int i=0;i&lt;k;i++){\n            pq.add(nums[i]);\n        }\n        // Step2: \n        int len = nums.length;\n        for(int i = k;i&lt;len;i++){\n            int e = nums[i];\n            int minE = pq.peek();\n            if(minE&lt;e){\n                pq.poll();\n                pq.add(e);\n            }\n        }\n        return pq.peek();\n    }\n}\n</code></pre>"},{"location":"LeetCode/List/List/","title":"List","text":"<p>\u8fd9\u4e2a\u7bc7\u7ae0\u653e\u7684\u662f\u6709\u5173\u94fe\u8868\u7684\u4e00\u4e9b\u9898\u76ee\u8bb0\u5f55\u60c5\u51b5</p>"},{"location":"LeetCode/List/List/#1","title":"1 \u53cd\u8f6c\u94fe\u8868","text":"<p>\u8fd9\u9898\u8fc7\u4e8e\u7ecf\u5178\uff0c\u5c31\u4e0d\u653e\u9898\u76ee\u5730\u5740\u548c\u56fe\u7247\u53c2\u8003\u4e86\uff0c\u5c31\u662f\u7b80\u5355\u7684\u6765\u8bf4\u7ed9\u51fa\u8fd9\u6837\u7684\u5b9a\u4e49\u7684\u4e00\u4e2a\u94fe\u8868\uff0c\u4f60\u9700\u8981\u5c06\u5b83\u7ffb\u8f6c\u8fc7\u6765\u3002\u6211\u4eec\u7528<code>C++</code>\u6765\u5b9e\u73b0\u3002</p> <p>\u8fd9\u4e2a\u662f\u94fe\u8868\u7684\u5b9a\u4e49 <pre><code>struct ListNode{\n    int val;\n    ListNode* next;\n    ListNode(int x):val(x),next(nullptr){}\n}\n</code></pre></p>"},{"location":"LeetCode/List/List/#_1","title":"\u9898\u89e3","text":"<p>\u6211\u4eec\u8fd9\u91cc\u4f7f\u7528\u8fed\u4ee3\u7684\u529e\u6cd5\u6765\u8fdb\u884c\u7ffb\u8f6c\u3002\u5b9a\u4e49\u4e09\u4e2a\u94fe\u8868\u6307\u9488 <code>prev</code>, <code>cur</code>,\u548c <code>next</code> \u4f9d\u6b21\u904d\u5386\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u5f97\u5230\u7ffb\u8f6c\u540e\u7684\u94fe\u8868\u3002</p>"},{"location":"LeetCode/List/List/#code","title":"Code","text":"<pre><code>class Solution {\n\nListNode* reverseList(ListNode* head){\n    ListNode* prev = nullptr;\n    ListNode* cur = head;\n    while(cur!=nullptr){\n        ListNode* next = cur-&gt;next;\n        cur-&gt;next = prev;\n        prev = cur;\n        cur = next;\n    }\n    return prev;\n}\n\n}\n</code></pre>"},{"location":"LeetCode/List/List/#2","title":"2 \u91cd\u6392\u94fe\u8868","text":"<p>\u8fd9\u9898\u6765\u81ea\u5b57\u8282\uff0c\u60f3\u4e86\u5f88\u4e45\uff0c\u53d1\u73b0\u5176\u5b9e\u5f88\u7b80\u5355</p> <p>\u9898\u76ee\u94fe\u63a5</p> <p></p>"},{"location":"LeetCode/List/List/#_2","title":"\u9898\u89e3","text":"<p>\u5176\u5b9e\u9898\u76ee\u5f88\u7b80\u5355\uff0c\u6211\u4eec\u8981\u505a\u7684\u53ea\u6709\u4e24\u6b65\uff0c\u5148\u53cd\u8f6c\u540e\u534a\u6bb5\u94fe\u8868\uff0c\u7136\u540e\u518d\u4ea4\u53c9\u5408\u5e76\u524d\u540e\u534a\u6bb5\u7684\u94fe\u8868\u5373\u53ef\u3002\u90a3\u4e48\u7b2c\u4e00\u4e2a\u64cd\u4f5c\u5982\u4f55\u8fdb\u884c\u5462\uff1f\u6211\u4eec\u4f7f\u7528\u5feb\u6162\u6307\u9488\uff0c\u540e\u9762\u7684\u94fe\u8868\u53cd\u8f6c\u5c31\u5f88\u7b80\u5355\u4e86\u3002\u7136\u540e\u5408\u5e76\u7684\u65f6\u5019\u6211\u4eec\u5c31\u6b63\u5e38\u7684\u904d\u5386\u5408\u5e76\u5373\u53ef\u3002</p>"},{"location":"LeetCode/List/List/#code_1","title":"Code","text":"<pre><code>class Solution {\npublic:\n    void reorderList(ListNode* head) {\n        if(head-&gt;next==nullptr)\n            return ;\n        ListNode* fast = head;\n        ListNode* slow = head;\n        while(fast!=nullptr&amp;&amp;fast-&gt;next!=nullptr){\n            slow = slow-&gt;next;\n            fast = fast-&gt;next;\n            if(fast-&gt;next == nullptr){\n                break;\n            }\n            fast = fast-&gt;next;\n        }   \n        // reverse the second half list;\n        slow -&gt;next = reverseList(slow-&gt;next);\n        ListNode* list1 = slow -&gt;next;\n        slow -&gt;next = nullptr;\n\n        printList(head);\n        cout &lt;&lt; endl;\n        printList(list1);\n\n        combineTwoList(head,list1);\n\n    }\n\n    ListNode* reverseList(ListNode* head){\n        ListNode* pre = nullptr;\n        ListNode* cur = head;\n        while(cur!=nullptr){\n            ListNode* next = cur-&gt;next;\n            cur-&gt;next = pre;\n            pre = cur;\n            cur = next;\n        }\n        return pre;\n    }\n\n    // use for Debug\n    void printList(ListNode* list){\n        while(list!=nullptr){\n            cout &lt;&lt; list-&gt;val &lt;&lt; \" \";\n            list = list-&gt;next;\n        }\n    }\n\n    ListNode* combineTwoList(ListNode* list1,ListNode* list2){\n        if(list2 == nullptr)\n            return nullptr;\n        ListNode* head = list1;\n        ListNode* temp1 = nullptr;\n        ListNode* temp2 = nullptr;\n\n        while(list2!=nullptr){\n            temp1 = list1-&gt;next;\n            temp2 = list2-&gt;next;\n\n            list1-&gt;next = list2;\n            list2-&gt;next = temp1;\n\n            list1 = temp1;\n            list2 = temp2;\n        }\n        return head;\n    }\n};\n</code></pre>"},{"location":"LeetCode/Stack/Stack/","title":"Stack","text":""},{"location":"LeetCode/Stack/Stack/#introduce","title":"Introduce","text":""},{"location":"LeetCode/Stack/Stack/#1","title":"1. \u6c42\u6700\u5927\u7684\u77e9\u5f62\u9762\u79ef","text":"<p>\u9898\u76ee\u6765\u6e90</p> <p></p>"},{"location":"LeetCode/Stack/Stack/#_1","title":"\u9898\u89e3","text":"<p>\u65f6\u95f4\u590d\u6742\u5ea6 O(N) \u6211\u4eec\u5f88\u81ea\u7136\u7684\u60f3\u5230\u7528DP\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u4f46\u662f\u5948\u4f55\u65f6\u95f4\u590d\u6742\u5ea6\u6709\u70b9\u9ad8\u4e8e\u9898\u8bbe\u3002\u6240\u4ee5\u6211\u4eec\u9009\u62e9\u7528\u5355\u8c03\u6808\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002</p> <p>\u6362\u79cd\u601d\u8def\uff0c\u6211\u4eec\u5f88\u81ea\u7136\u7684\u60f3\u5230\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u67f1\u5b50\u6bb5\uff0c\u6700\u5927\u7684\u9762\u79ef\u5f80\u5f80\u662f\u7531\u6700\u4f4e\u7684\u90a3\u6839\u67f1\u5b50\u6765\u51b3\u5b9a\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u5176\u5b9e\u6362\u79cd\u601d\u8def\u5c31\u662f\u9700\u8981\u627e\u5230\u6240\u6709\u6570\u7ec4\u4e2d\u7684\u5355\u8c03\u4e0d\u9012\u51cf\u7684\u5e8f\u5217\uff0c\u7136\u540e\u53ea\u9700\u8981\u7ef4\u62a4\u4e00\u4e2a\u53d8\u91cf\u6765\u8bb0\u5f55\u6700\u5927\u7684\u9762\u79ef\u5373\u53ef\u3002</p> <ul> <li>\u9996\u5148\uff0c\u6211\u4eec\u7684\u76ee\u7684\u662f\u904d\u5386\u6574\u4e2a\u6570\u7ec4\uff0c\u627e\u5230\u6240\u6709\u7684\u5355\u8c03\u4e0d\u9012\u51cf\u7684\u5e8f\u5217\u3002</li> <li>\u5176\u6b21\uff0c\u6211\u4eec\u7ef4\u62a4\u4e00\u4e2a\u5355\u8c03\u9012\u589e\u7684\u6808\uff0c\u4e00\u65e6\u9047\u5230\u4e00\u4e2a\u6bd4\u6808\u9876\u5143\u7d20\u5c0f\u7684\u5143\u7d20\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u5f00\u59cb\u8ba1\u7b97\u6700\u5927\u7684\u77e9\u5f62\u9762\u79ef\u4e86\u3002<ol> <li>\u60c5\u51b51 \u5982\u679c\u5728\u5f39\u51fa\u4e00\u4e2a\u6808\u9876\u5143\u7d20\u4e4b\u540e\uff0c\u6808\u4e3a\u7a7a\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u8ba1\u7b97\u7684\u5bbd\u5ea6\u5c31\u662f <code>i-(-1) -1 = i</code>,\u8bf4\u660e\u5f53\u524d\u7684\u8fd9\u4e2a\u67f1\u5b50\u662f\u5f53\u524d\u904d\u5386\u4e3a\u6b62\u7684\u6700\u5c0f\u503c\u3002\u6240\u4ee5\u6211\u4eec\u5c31\u53ef\u4ee5\u8ba1\u7b97\u5b83\u7684\u5bbd\u5ea6\u4e3a<code>i</code>;</li> <li>\u60c5\u51b52 \u5982\u679c\u5f39\u51fa\u4e00\u4e2a\u6808\u9876\u5143\u7d20\u4e4b\u540e\uff0c\u6808\u4e0d\u4e3a\u7a7a\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u6b63\u5e38\u7684\u4ece\u540e\u5f80\u524d\u8ba1\u7b97\u5bbd\u5ea6 <code>i - st.top() -1</code> </li> </ol> </li> <li>\u6bcf\u6b21\u8ba1\u7b97\u5b8c\u5bbd\u5ea6\u4e4b\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u8ba1\u7b97\u9762\u79ef\u4e86\uff0c<code>height * width</code>\uff0c\u7136\u540e\u66f4\u65b0\u6700\u5927\u9762\u79ef\u5373\u53ef\u3002</li> <li>\u540c\u65f6\u6211\u4eec\u505a\u4e86\u4e00\u4e2a\u6bd4\u8f83\u5de7\u5999\u7684\u5904\u7406\uff0c\u5c31\u662f\u904d\u5386\u5b8c\u4e86\u4e4b\u540e\uff0c\u6211\u4eec\u5728\u6570\u7ec4\u4e2d\u52a0\u5165\u4e00\u4e2a\u9ad8\u5ea6\u4e3a0\u7684\u67f1\u5b50\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u6700\u540e\u4e00\u4e2a\u67f1\u5b50\u4e5f\u53ef\u4ee5\u88ab\u8ba1\u7b97\u5230\u3002\u4e5f\u5c31\u662f\u5904\u7406\u6808\u4e2d\u5269\u4f59\u7684\u5143\u7d20\u3002</li> </ul>"},{"location":"LeetCode/Stack/Stack/#code","title":"Code","text":"<pre><code>class Solution {\npublic:\n    int largestRectangleArea(vector&lt;int&gt;&amp; heights) {\n        int n = heights.size();\n        stack&lt;int&gt; st;  // \u5355\u8c03\u6808\uff0c\u5b58\u50a8\u67f1\u5b50\u7684\u4e0b\u6807\n        int maxArea = 0;\n\n        for (int i = 0; i &lt;= n; i++) {\n            // \u5f53\u524d\u67f1\u5b50\u7684\u9ad8\u5ea6\uff08\u5982\u679c\u662f\u6700\u540e\u4e00\u4e2a\u67f1\u5b50\uff0c\u9ad8\u5ea6\u4e3a0\uff09\n            int h = (i == n) ? 0 : heights[i];\n\n            // \u5982\u679c\u5f53\u524d\u67f1\u5b50\u7684\u9ad8\u5ea6\u5c0f\u4e8e\u6808\u9876\u67f1\u5b50\u7684\u9ad8\u5ea6\uff0c\u5f39\u51fa\u6808\u9876\u67f1\u5b50\u5e76\u8ba1\u7b97\u9762\u79ef\n            while (!st.empty() &amp;&amp; h &lt; heights[st.top()]) {\n                int height = heights[st.top()];  // \u5f39\u51fa\u7684\u67f1\u5b50\u7684\u9ad8\u5ea6\n                st.pop();\n                int width = st.empty() ? i : (i - st.top() - 1);  // \u8ba1\u7b97\u5bbd\u5ea6\n                maxArea = max(maxArea, height * width);  // \u66f4\u65b0\u6700\u5927\u9762\u79ef\n            }\n\n            // \u5c06\u5f53\u524d\u67f1\u5b50\u7684\u4e0b\u6807\u538b\u5165\u6808\n            st.push(i);\n        }\n\n        return maxArea;\n    }\n};\n</code></pre>"},{"location":"LeetCode/String/String/","title":"String","text":"<p>\u672c\u7ae0\u4e3b\u8981\u8bb2\u8ff0\u7684\u5c31\u662f\u5404\u79cd\u5e38\u89c1\u7684\u5b57\u7b26\u4e32\u6709\u5173\u7684\u95ee\u9898</p> <p>Q1 :\u5bfb\u627e\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u5b57\u7b26\u4e32</p> <p>\u6211\u4eec\u5bf9\u4e8e\u5904\u7406\u8fd9\u79cd\u95ee\u9898\uff0c\u5c24\u5176\u662f\u5728\u5904\u7406\u540d\u4e3a <code>\u5b57\u5178\u5e8f\u6700\u5c0f</code> \u7684\u65f6\u5019\uff0c\u5176\u5b9e\u5e94\u8be5\u60f3\u5230\u7684\u662f\u5355\u8c03\u6808\u7684\u95ee\u9898\uff0c\u4e5f\u5c31\u662f\u8bf4\u5728\u4e00\u4e2a\u8fde\u7eed\u7684\u5b57\u7b26\u4e32\u4e2d\uff0c\u627e\u5230\u90a3\u4e2a\u6700\u5c0f\u7684<code>i</code>,\u5728<code>s[i]&gt;s[i+1]</code> \u7684\u65f6\u5019\uff0c\u5e76\u4e14\u5220\u6389\u8fd9\u4e2a\u5b57\u7b26\u5373\u53ef\u3002</p>"},{"location":"LeetCode/String/String/#1","title":"1 \u4e0d\u540c\u5b57\u7b26\u7684\u6700\u5c0f\u5b50\u5e8f\u5217","text":"<p>\u9898\u76ee\u5730\u5740</p> <p></p>"},{"location":"LeetCode/String/String/#_1","title":"\u9898\u89e3","text":"<p>\u6709\u4e86\u4e0a\u9762\u7684\u603b\u4f53\u601d\u8def\uff0c\u6211\u4eec\u5c31\u77e5\u9053\u4e86\u8981\u5728\u8fd9\u6837\u7684\u5b57\u7b26\u4e32\u4e2d\u5bfb\u627e\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u5b50\u5e8f\u5217\uff0c\u5176\u5b9e\u5c31\u662f\u7ef4\u62a4\u4e00\u4e2a\u5355\u8c03\u6808\u3002\u5b83\u7684\u76ee\u7684\u5c31\u662f\u5b58\u653e\u4ece\u524d\u5f80\u540e\u904d\u5386\u7684\u5b57\u7b26\u4e32\u7ed3\u679c\u3002\u6211\u4eec\u6bcf\u904d\u5386\u4e00\u4e2a\u5b57\u7b26\uff0c\u5982\u679c\u8fd9\u4e2a\u5b57\u7b26\u5728\u5355\u8c03\u6808\u4e2d\u5e76\u6ca1\u6709\u51fa\u73b0\u8fc7\uff0c\u5c31\u53ef\u4ee5\u76f4\u63a5\u7684\u52a0\u5165\u6808\u4e2d\u3002\u5426\u5219\u7684\u8bdd\u9700\u8981\u8fdb\u884c\u6761\u4ef6\u5224\u65ad\u3002\u5018\u82e5\u8fd9\u4e2a\u5b57\u7b26\u6bd4\u6808\u9876\u5143\u7d20\u5c0f\uff0c\u4e5f\u5c31\u662f\u51fa\u73b0\u4e86 <code>s[i] &gt; s[i+1]</code> \u7684\u60c5\u51b5\u3002\u6211\u4eec\u5c31\u9700\u8981\u5224\u65ad\u8fd9\u4e2a\u6808\u9876\u5143\u7d20\u662f\u5426\u5728\u540e\u7eed\u7684\u5b57\u7b26\u4e32\u4e2d\u8fd8\u4f1a\u51fa\u73b0\uff0c\u5018\u82e5\u4e0d\u518d\u51fa\u73b0\u4e86\uff0c\u90a3\u6211\u4eec\u5c31\u505c\u6b62\u5220\u9664\u8fd9\u4e2a\u6808\u9876\u5143\u7d20\u3002\u5426\u5219\u7684\u8bdd\u6211\u4eec\u5c31\u8fdb\u884c\u5220\u9664\uff0c\u5e76\u4e14\u6dfb\u5165\u521a\u9047\u5230\u7684\u8fd9\u4e2a\u5b57\u7b26\u3002</p>"},{"location":"LeetCode/String/String/#code","title":"Code","text":"<pre><code>class Solution {\npublic:\n    string smallestSubsequence(string s) {\n        int num[26];\n        vector&lt;int&gt; visited(26);\n        string res;\n        for(auto c:s){\n            num[c-'a']++;\n        }\n        int len = s.length();\n        for(int i=0;i&lt;len;i++){\n            if(!visited[s[i]-'a']){\n                while(!res.empty()&amp;&amp;res.back()&gt;s[i]){\n                    if(num[res.back()-'a']&gt;0){\n                        visited[res.back()-'a'] = 0;\n                        res.pop_back();\n                    }else{\n                        break;\n                    }\n                }\n                visited[s[i]-'a'] = 1;\n                res.push_back(s[i]);\n            }\n            num[s[i]-'a']--;\n        }\n        return res;\n    }\n};\n</code></pre>"},{"location":"LeetCode/Tree/BinaryTree/","title":"\u4e8c\u53c9\u6811","text":""},{"location":"LeetCode/Tree/BinaryTree/#_2","title":"\u5bf9\u4e8e\u4e8c\u53c9\u6811\u7684\u5e38\u89c1\u51e0\u79cd\u89e3\u9898\u7b56\u7565","text":"<ol> <li>\u9012\u5f52</li> <li>DFS</li> <li>BFS</li> </ol> <p>\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5c31\u56f4\u7ed5\u7740\u8fd9\u51e0\u70b9\u8fdb\u884c\u5c55\u5f00</p>"},{"location":"LeetCode/Tree/BinaryTree/#_3","title":"\u4f8b\u9898","text":""},{"location":"LeetCode/Tree/BinaryTree/#1","title":"1 \u4e8c\u53c9\u6811\u7684\u6700\u5927\u5bbd\u5ea6","text":"<p>\u9898\u76ee\u6765\u6e90\u5b57\u8282</p> <p> \u9898\u76ee\u6765\u6e90</p>"},{"location":"LeetCode/Tree/BinaryTree/#_4","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>\u7ed9\u4f60\u4e00\u68f5\u4e8c\u53c9\u6811\u7684\u6839\u8282\u70b9<code>root</code>\uff0c\u8fd4\u56de\u6811\u7684\u6700\u5927\u5bbd\u5ea6\u3002 \u6811\u7684\u6700\u5927\u5bbd\u5ea6\u662f\u6240\u6709\u5c42\u4e2d\u6700\u5927\u7684\u5bbd\u5ea6\u3002 \u6bcf\u4e00\u5c42\u7684\u5bbd\u5ea6\u88ab\u5b9a\u4e49\u4e3a\u8be5\u5c42\u6700\u5de6\u548c\u6700\u53f3\u7684\u975e\u7a7a\u8282\u70b9\uff08\u5373\uff0c\u4e24\u4e2a\u7aef\u70b9\uff09\u4e4b\u95f4\u7684\u957f\u5ea6\u3002\u5c06\u8fd9\u4e2a\u4e8c\u53c9\u6811\u89c6\u4f5c\u4e0e\u6ee1\u4e8c\u53c9\u6811\u7ed3\u6784\u76f8\u540c\uff0c\u4e24\u7aef\u70b9\u95f4\u4f1a\u51fa\u73b0\u4e00\u4e9b\u5ef6\u4f38\u5230\u8fd9\u4e00\u5c42\u7684<code>null</code>\u8282\u70b9\uff0c\u8fd9\u4e9b<code>null</code>\u8282\u70b9\u4e5f\u8ba1\u5165\u957f\u5ea6\u3002 \u9898\u76ee\u6570\u636e\u4fdd\u8bc1\u7b54\u6848\u5c06\u4f1a\u5728  <code>32 \u4f4d</code> \u5e26\u7b26\u53f7\u6574\u6570\u8303\u56f4\u5185\u3002</p>"},{"location":"LeetCode/Tree/BinaryTree/#_5","title":"\u9898\u89e3","text":"<p>\u6211\u4eec\u8fd9\u9898\u4e3b\u8981\u4f7f\u7528\u7684\u662f<code>BFS</code>\u6765\u8fdb\u884c\u5c42\u5e8f\u904d\u5386\uff0c\u83b7\u5f97\u6bcf\u4e00\u5c42\u7684\u6700\u5de6\u548c\u6700\u53f3\u8fb9\u975e<code>null</code>\u8282\u70b9\uff0c\u4ece\u800c\u83b7\u5f97\u6bcf\u4e00\u5c42\u7684\u5bbd\u5ea6\uff0c\u4f9d\u6b21\u904d\u5386\u4ece\u800c\u83b7\u5f97\u6700\u5927\u7684\u4e8c\u53c9\u6811\u5bbd\u5ea6\u3002</p> <p>\u8fd9\u91cc\u63d0\u4e00\u53e5\uff0c\u6211\u4eec\u4f7f\u7528\u4e86 <code>move</code> \u5c06<code>vector&lt;pair&lt;TreeNode* , unsigned long long&gt;&gt; tmp</code> \u590d\u5236\u7ed9\u4e86 <code>res</code></p> <p>\u5bf9\u4e8e <code>move</code> \u53ef\u4ee5\u53c2\u8003  </p> <p></p>"},{"location":"LeetCode/Tree/BinaryTree/#code","title":"Code","text":"<p>\u4e0b\u9762\u662f\u7b80\u5355\u7684\u4ee3\u7801\u5b9e\u73b0: <pre><code>/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int widthOfBinaryTree(TreeNode* root) {\n        unsigned long long res = 1;\n        vector&lt;pair&lt;TreeNode*, unsigned long long&gt;&gt;arr;\n        arr.emplace_back(root,1L);\n        while(!arr.empty()){\n            vector&lt;pair&lt;TreeNode*,unsigned long long&gt;&gt;tmp;\n            for(auto &amp;[node,index]:arr){\n                if(node-&gt;left)\n                    tmp.emplace_back(node-&gt;left,index*2);\n                if(node-&gt;right)\n                    tmp.emplace_back(node-&gt;right,index*2+1);\n            }\n            res = max(res,arr.back().second-arr[0].second+1);\n            arr = move(tmp);\n        }\n        return res;\n\n    }\n\n};\n</code></pre></p>"},{"location":"LeetCode/Tree/BinaryTree/#2-bstk","title":"2 BST\u7684\u7b2ck\u5c0f\u7684\u8282\u70b9","text":"<p>\u9898\u76ee\u6765\u6e90</p> <p></p>"},{"location":"LeetCode/Tree/BinaryTree/#_6","title":"\u9898\u89e3","text":"<p>\u8fd9\u9898\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e2d\u5e8f\u904d\u5386\u7684\u65b9\u5f0f\u6765\u8fdb\u884c\u904d\u5386\uff0c\u7136\u540e\u627e\u5230\u7b2c<code>k</code>\u4e2a\u8282\u70b9\u5373\u53ef\u3002\u56e0\u4e3a\u6211\u4eec\u77e5\u9053BST\u7684\u4e2d\u5e8f\u904d\u5386\u7684\u7ed3\u679c\u5c31\u662f\u4e00\u4e2a\u6709\u5e8f\u7684\u6570\u7ec4\uff0c\u90a3\u4e48\u7b2c<code>k</code>\u4e2a\u8282\u70b9\uff0c\u5176\u5b9e\u5c31\u662f\u6211\u4eec\u904d\u5386\u7684\u7b2c<code>k</code>\u4e2a\u8282\u70b9\u3002\u5bf9\u4e8e\u4e8c\u53c9\u6811\u7684\u904d\u5386\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u5e38\u89c4\u7684<code>DFS</code>\u9012\u5f52\u8fdb\u884c\u904d\u5386\u3002</p>"},{"location":"LeetCode/Tree/BinaryTree/#code_1","title":"Code","text":"<pre><code>/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int kthSmallest(TreeNode* root, int k) {\n        this-&gt;k = k;\n        dfs(root);\n        return res;\n    }\n\nprivate: \n    int res,k;\n    void dfs(TreeNode* root){\n        if(root == nullptr) \n            return;\n        dfs(root-&gt;left);\n        if(k==0)\n            return ;\n        if(--k==0)\n            res = root-&gt;val;\n        dfs(root-&gt;right);\n    }\n\n};\n</code></pre>"},{"location":"LeetCode/windows/windows/","title":"\u6ed1\u52a8\u7a97\u53e3","text":"<p>\u6ed1\u52a8\u7a97\u53e3\u5176\u5b9e\u662f\u4e00\u79cd\u601d\u60f3\uff0c\u5728\u89e3\u9898\u7684\u65f6\u5019\u907f\u514d\u4e86\u66b4\u529b\u679a\u4e3e\u800c\u4ea7\u751f\u7684\u5927\u91cf\u5197\u4f59\uff0c\u5e38\u89c1\u7684\u8fd0\u7528\u5728\u6570\u7ec4\u904d\u5386\u7684\u65f6\u5019\u9700\u8981\u627e\u5230\u7684\u4e00\u6bb5\u8fde\u7eed\u7684\u5177\u6709\u67d0\u4e2a\u7279\u5f81\u7684\u6570\u636e</p> <p>\u56e0\u4e3a\u6211\u4eec\u9700\u8981\u627e\u5230\u7684\u662f\u4e00\u6bb5\u8fde\u7eed\u7684\u533a\u95f4\uff0c\u90a3\u4e48\u9700\u8981\u505a\u7684\u662f:</p> <ul> <li>\u5148\u627e\u5230\u4e00\u6bb5\u7b26\u5408\u6761\u4ef6\u7684\u5b50\u533a\u95f4</li> <li>\u5f00\u59cb\u7ef4\u62a4\u4e24\u4e2a\u5de6\u53f3\u6307\u9488</li> <li>\u540c\u65f6\u7ef4\u62a4\u82e5\u5e72\u4e2a\u53d8\u91cf -&gt; \u7528\u4e8e\u4fdd\u8bc1\u5de6\u53f3\u6307\u9488\u533a\u95f4\u5185\u90e8\u7b26\u5408\u6761\u4ef6</li> <li>\u8fdb\u884c\u5faa\u73af\u5f80\u590d\u7684\u6267\u884c\u7ef4\u62a4\u533a\u95f4\u7684\u64cd\u4f5c\uff0c\u76f4\u5230\u904d\u5386\u5b8c\u6574\u4e2a\u6570\u7ec4/\u8fde\u7eed\u533a\u57df</li> </ul>"},{"location":"LeetCode/windows/windows/#_2","title":"\u4f8b\u9898","text":""},{"location":"LeetCode/windows/windows/#1","title":"1 \u957f\u5ea6\u6700\u5c0f\u7684\u5b50\u6570\u7ec4","text":"<p>\u9898\u76ee\u6765\u6e90</p> <p>\u7ed9\u5b9a\u4e00\u4e2a\u542b\u6709<code>n</code>\u4e2a\u6b63\u6574\u6570\u7684\u6570\u7ec4\u548c\u4e00\u4e2a\u6b63\u6574\u6570<code>target</code>\u3002 \u627e\u51fa\u8be5\u6570\u7ec4\u4e2d\u6ee1\u8db3\u5176\u603b\u548c\u5927\u4e8e\u7b49\u4e8e <code>target</code> \u7684\u957f\u5ea6\u6700\u5c0f\u7684  \u5b50\u6570\u7ec4 <code>[numsl, numsl+1, ..., numsr-1, numsr]</code> \uff0c\u5e76\u8fd4\u56de\u5176\u957f\u5ea6\u3002\u5982\u679c\u4e0d\u5b58\u5728\u7b26\u5408\u6761\u4ef6\u7684\u5b50\u6570\u7ec4\uff0c\u8fd4\u56de<code>0</code>\u3002</p> <p></p> <pre><code>class Solution {\npublic:\n    int minSubArrayLen(int target, vector&lt;int&gt;&amp; nums) {\n        int len = nums.size();\n        int min = -1;\n        int sum = 0;\n        for(int i=0;i&lt;len;i++){\n            sum += nums[i];\n            if(sum&gt;=target){\n                min = i+1;\n                break;\n            }\n        }\n        if(min==-1)\n            // it indicates that it doesn't exist;\n            return 0;\n        int left = 0;\n        int right = min;\n        while(right&lt;len){\n            for(;sum&gt;=target;left++){\n                sum -= nums[left];\n            }\n            if(right-left+1 &lt; min)\n                min = right-left+1;\n            for(;sum&lt;target&amp;&amp;right&lt;len;right++)\n                sum += nums[right];\n        }\n        if(right==len&amp;&amp;sum&gt;target){\n            for(;sum&gt;=target;left++){\n                sum-=nums[left];\n            }\n        }\n        min = (min &gt; right - left + 1) ? right - left + 1 : min;\n\n        return min;\n    }\n};\n</code></pre>"},{"location":"LeetCode/windows/windows/#_3","title":"\u9898\u89e3","text":"<p>\u8fd9\u9898\u7684\u601d\u8def\u5c31\u6bd4\u8f83\u6e05\u6670\uff0c\u5c31\u662f\u5148\u627e\u5230\u4e00\u4e2a\u7b26\u5408\u6761\u4ef6 (sum &gt;= target) \u7684\u6570\u7ec4\uff0c\u7136\u540e\u5f00\u59cb\u7ef4\u62a4\u5de6\u53f3\u4e24\u4e2a\u6307\u9488 <code>left</code> \u548c <code>right</code>,\u901a\u8fc7\u53f3\u79fb <code>left</code> \u5de6\u6307\u9488\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u7f29\u5c0f\u540e\u7684\u533a\u95f4\u957f\u5ea6(update),\u4f46\u53f3\u79fb<code>right</code>\u6307\u9488\u7684\u76ee\u7684\u662f\u83b7\u5f97\u5168\u65b0\u7684\u7b26\u5408\u6761\u4ef6\u7684\u533a\u95f4\uff0c\u4f9d\u6b21\u5f80\u590d\u3002 \u540c\u65f6\uff0c\u5728\u904d\u5386\u5b8c\u6574\u4e2a\u6570\u7ec4\u7684\u65f6\u5019\uff0c\u6211\u4eec\u8981\u5bf9<code>left</code>\u6307\u9488\u5355\u72ec\u505a\u4e00\u6b21\u53f3\u79fb\u5904\u7406\uff0c\u6765\u505a\u6700\u540e\u7684\u4e00\u6b21\u66f4\u65b0\u6700\u5c0f\u533a\u95f4\u7684\u64cd\u4f5c\u3002 </p>"},{"location":"LeetCode/windows/windows/#2","title":"2 \u6ed1\u52a8\u7a97\u53e3\u7684\u6700\u5927\u503c","text":"<p>\u9898\u76ee\u6765\u6e90</p> <p>\u7ed9\u4f60\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 <code>nums</code>\uff0c\u6709\u4e00\u4e2a\u5927\u5c0f\u4e3a <code>k</code> \u7684\u6ed1\u52a8\u7a97\u53e3\u4ece\u6570\u7ec4\u7684\u6700\u5de6\u4fa7\u79fb\u52a8\u5230\u6570\u7ec4\u7684\u6700\u53f3\u4fa7\u3002\u4f60\u53ea\u53ef\u4ee5\u770b\u5230\u5728\u6ed1\u52a8\u7a97\u53e3\u5185\u7684 <code>k</code> \u4e2a\u6570\u5b57\u3002\u6ed1\u52a8\u7a97\u53e3\u6bcf\u6b21\u53ea\u5411\u53f3\u79fb\u52a8\u4e00\u4f4d\u3002</p> <p>\u8fd4\u56de \u6ed1\u52a8\u7a97\u53e3\u4e2d\u7684\u6700\u5927\u503c \u3002</p> <p></p> <pre><code>class Solution {\npublic:\n    vector&lt;int&gt; maxSlidingWindow(vector&lt;int&gt;&amp; nums, int k) {\n        vector&lt;int&gt;result;\n        priority_queue&lt;pair&lt;int,int&gt;&gt; pq;\n        int len = nums.size();\n        for(int i=0;i&lt;k;i++){\n            pq.emplace(nums[i],i);\n        }\n        result.push_back(pq.top().first);\n        for(int i = k;i&lt;len;i++){\n            pq.emplace(nums[i],i);\n            while(pq.top().second&lt;=i-k){\n                pq.pop();\n            }\n            result.push_back(pq.top().first);\n        }\n        return result;\n    }\n};\n</code></pre>"},{"location":"LeetCode/windows/windows/#_4","title":"\u9898\u89e3","text":"<p>\u7b80\u5355\u7684\u6765\u8bf4\u5c31\u662f\uff0c\u6211\u4eec\u6784\u9020\u4e86\u4e00\u4e2a\u6700\u5927\u5806<code>priority_queue&lt;pair&lt;int,int&gt;&gt; pq</code>,\u91cc\u9762\u5b58\u653e\u7684\u662f\u4e00\u4e2a\u5143\u7ec4\\((nums[i],i)\\)\uff0c\u7136\u540e\u6211\u4eec\u53ea\u9700\u8981\u7ef4\u62a4\u8fd9\u4e2a\u6700\u5927\u5806\u5373\u53ef\uff0c\u5728\u6bcf\u6b21\u5c06\u7a97\u53e3\u5f80\u53f3\u5e73\u79fb\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u65f6\u523b\u5173\u6ce8\u6700\u5927\u5806\u7684\u5806\u9876\uff0c\u5f88\u81ea\u7136\u7684\u60f3\u5230\uff0c\u6211\u4eec\u53ea\u9700\u8981\u6bcf\u6b21\u7ef4\u62a4\u7684\u65f6\u5019\uff0c\u89c2\u5bdf\u8fd9\u4e2a\u5806\u9876\u5143\u7d20\u662f\u5426\u662f\u6ed1\u5757\u5185\u7684\u6700\u5927\u503c\u5373\u53ef\u3002\u5018\u82e5\u8fd9\u4e2a\u6700\u5927\u503c\u4e0d\u662f\u6ed1\u5757\u5185\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u5c06\u8fd9\u4e2a\u5806\u9876\u5f39\u51fa\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\u76f4\u5230\u5806\u9876\u7684\u5143\u7d20\u662f\u6ed1\u5757\u5185\u7684\u6700\u5927\u503c\u3002\u8fd9\u6837\u7684\u597d\u5904\u662f\u4e0d\u7528\u50cf\u6211\u4eec\u4e00\u5f00\u59cb\u7684\u65b9\u6848\u4e00\u6837\uff0c\u5982\u679c\u51fa\u73b0\u4e86\u6ed1\u5757\u6700\u5de6\u8fb9\u662f\u4e4b\u524d\u6ed1\u5757\u5185\u7684\u6700\u5927\u5143\u7d20\uff0c\u5728\u5411\u53f3\u8fb9\u79fb\u52a8\u7684\u4e00\u4e2a\u5355\u4f4d\u4e4b\u540e\uff0c\u5c31\u8fc5\u901f\u7684\u5bf9\u5269\u4e0b\u7684\u5185\u5bb9\u8fdb\u884c<code>sort</code>\u3002\u8fd9\u4e2a\u505a\u6cd5\u7684\u65f6\u95f4\u6210\u672c\u5176\u5b9e\u662f\u633a\u5927\u7684\uff0c\u5c24\u5176\u662f\u5728\u5982\u679c\u6211\u4eec\u5728\u4e00\u4e2a\u964d\u5e8f\u7684\u5e8f\u5217\u4e2d\uff0c\u90a3\u4e48\u5c31\u7b49\u4e8e\u8bf4\u6bcf\u6b21\u90fd\u8981\u8fdb\u884c\u6392\u5e8f\uff0c\u4f8b\u5982\u4ee5\u4e0b\u7684\u60c5\u51b5\uff1a</p> \\[\\{10,9,8,7,6,5,4,3,2,1\\},k = 3\\] <p>\u90a3\u4e48\u5c31\u662f\u6bcf\u6b21\u90fd\u9700\u8981\u91cd\u65b0\u6392\u5e8f\uff0c\u4f46\u5018\u82e5\u7ef4\u62a4\u4e00\u4e2a\u7b80\u5355\u7684\u6700\u5927\u5806\uff0c\u6211\u4eec\u7684\u5355\u6b65\u64cd\u4f5c\u4e5f\u53ea\u9700\\(O(\\log{N})\\)\u7684\u590d\u6742\u5ea6\uff0c\u5c31\u7b97\u662f\u6bcf\u4e00\u6b65\u90fd\u9700\u8981\u7ef4\u62a4\uff0c\u90a3\u4e5f\u53ea\u9700\u8981\\(O(N\\log{N})\\)\u7684\u590d\u6742\u5ea6\uff0c\u4f46\u5018\u82e5\u662f\\(O(N\\log{N})\\)\u7684\u5185\u7f6e\u6392\u5e8f\uff0c\u5982\u679c\u9047\u5230\u7279\u6b8a\u60c5\u51b5\uff0c\u5c31\u9700\u8981\\(O(N^2\\log{N})\\)\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u3002\u8fd9\u53ef\u662f\u4e00\u7b14\u5f88\u5927\u7684\u5f00\u9500\uff01</p>"},{"location":"LeetCode/%E6%99%BA%E5%8A%9B%E9%A2%98/Smart/","title":"\u667a\u529b\u9898","text":"<p>\u667a\u529b\u9898\u597d\u50cf\u601d\u8def\u90fd\u662f\u6bd4\u8f83\u968f\u673a\u5e94\u53d8\uff0c\u4e0d\u592a\u597d\u505a\u5f52\u7c7b\uff0c\u5c31\u653e\u5728\u4e00\u5757\u513f\u4e86</p>"},{"location":"LeetCode/%E6%99%BA%E5%8A%9B%E9%A2%98/Smart/#1","title":"1.\u9664\u81ea\u8eab\u4ee5\u5916\u7684\u6570\u7ec4\u4e58\u79ef","text":"<p> \u9898\u76ee\u5730\u5740 </p> <p></p>"},{"location":"LeetCode/%E6%99%BA%E5%8A%9B%E9%A2%98/Smart/#_2","title":"\u9898\u89e3","text":"<p>\u8fd9\u9898\u4e00\u5f00\u59cb\u81ea\u5df1\u4e0d\u592a\u4f1a\u505a\uff0c\u611f\u89c9\u5f88\u96be\u505a\u5230\\(O(N)\\) \u7684\u590d\u6742\u5ea6\uff0c\u5c24\u5176\u662f\u5728\u7ed9\u5b9a\u4e0d\u80fd\u5229\u7528\u9664\u6cd5\u7684\u6761\u4ef6\u4e0b\u3002\u540e\u9762\u4ed4\u7ec6\u60f3\u4e86\u4e00\u4e0b\uff0c\u5176\u5b9e\u662f\u6709\u89c4\u5f8b\u53ef\u5faa\u7684\uff0c\u6211\u4eec\u5229\u7528\u4e0a\u4e09\u89d2\u548c\u4e0b\u4e09\u89d2\u8fdb\u884c\u4e24\u6b21\u904d\u5386\u5373\u53ef\u3002\u5982\u4e0b\u56fe\u5c31\u5f88\u597d\u7406\u89e3\u4e86:</p> <p></p> <p>\u4e3a\u4ec0\u4e48\u8fd9\u4e48\u8bf4\u5462\uff0c\u6211\u4eec\u770b\u4e0a\u56fe\uff0c\u5148\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u72b6\u6001\u65b9\u7a0b\u4e3a:</p> \\[ B[i] = B[i-1] * A[i-1]  \\] <p>\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u7b2c\u4e00\u8f6e\u7684\u65f6\u5019\uff0c\u5c31\u53ef\u4ee5\u603b\u4f53\u904d\u5386\u4e00\u904d\uff0c\u7136\u540e\u7684\u8bdd\u5c31\u53ef\u4ee5\u5f97\u5230\u4e0b\u4e09\u89d2\u7684\u7ed3\u679c\u3002\u7d27\u63a5\u7740\u6211\u4eec\u6765\u5904\u7406\u4e0a\u4e09\u89d2\u7684\u7ed3\u679c\u3002\u8fd9\u4e2a\u65f6\u5019\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u4ece\u6700\u540e\u6765\u8fdb\u884c\u904d\u5386\u3002\u8fd9\u4e2a\u65f6\u5019\u9700\u8981\u4e00\u4e2a\u4e34\u65f6\u53d8\u91cf\u6765\u5b58\u50a8\u4e0a\u4e09\u89d2\u7684\u8fed\u4ee3\u60f3\u4e58\u7ed3\u679c\u3002\u8fd9\u4e2a\u662f\u7b2c\u4e8c\u4e2a\u72b6\u6001\u65b9\u7a0b:</p> \\[ tmp *= A[i] \\]"},{"location":"LeetCode/%E6%99%BA%E5%8A%9B%E9%A2%98/Smart/#code","title":"Code","text":"<pre><code>class Solution {\npublic:\n    vector&lt;int&gt; productExceptSelf(vector&lt;int&gt;&amp; nums) {\n        int temp = 1;\n        vector&lt;int&gt; result;\n        int len = nums.size();\n        result.resize(len);\n        result.assign(len,1);\n        // Here we compute for the low-trangle;\n        for(int i=1;i&lt;len;i++){\n            result[i] = result[i-1]*nums[i-1];\n            cout&lt;&lt;result[i]&lt;&lt;\" \";\n        }\n\n        // Then we compute for the top-trangle;\n        for(int i=len-2;i&gt;=0;i--){\n            temp*= nums[i+1];\n            result[i] *= temp;\n        }\n        return result;\n    }\n};\n</code></pre>"},{"location":"LeetCode/%E6%99%BA%E5%8A%9B%E9%A2%98/Smart/#sort","title":"\u6392\u5e8fSort","text":""},{"location":"LeetCode/%E6%99%BA%E5%8A%9B%E9%A2%98/Smart/#1_1","title":"1 \u989c\u8272\u5206\u7c7b","text":"<p>\u9898\u76ee\u5730\u5740</p> <p></p>"},{"location":"LeetCode/%E6%99%BA%E5%8A%9B%E9%A2%98/Smart/#_3","title":"\u9898\u89e3","text":"<p>\u6211\u4eec\u5f88\u81ea\u7136\u7684\u60f3\u5230\u7684\u529e\u6cd5\u5c31\u662f\u7b80\u5355\u7684\u6392\u5e8f\uff0c\u4f46\u662f\u65f6\u95f4\u590d\u6742\u5ea6\u90fd\u592a\u9ad8\u4e86\uff0c\u6700\u8d77\u7801\u4e5f\u8981 \\(O(NlogN)\\),\u6211\u4eec\u89c2\u5bdf\u5230\u8fd9\u9898\u6709\u4e2a\u7279\u70b9\u5c31\u662f\u53ea\u67093\u79cd\u989c\u8272\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5206\u7c7b\u653e\u597d\u5373\u53ef\u3002\u6211\u4eec\u60f3\u5230\u4e86\u4ec0\u4e48\uff1f \u5feb\u6392\u7684\u5b50\u8fc7\u7a0b\uff0c\u6211\u4eec\u5728QuickSorting\u7684\u65f6\u5019\uff0c\u5c31\u6709\u8fd9\u4e00\u6b65\uff0c\u6307\u5b9a\u4e00\u4e2a ptr \uff0c\u7136\u540e\u8fdb\u884c\u5206\u7c7b\uff0c\u5c06\u5c0f\u4e8e\u7684\u653e\u5728\u5de6\u8fb9\uff0c\u5927\u4e8e\u7684\u653e\u5728\u53f3\u8fb9\uff0c\u8fd9\u6837\u7684\u8bdd\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f88\u81ea\u7136\u7684\u60f3\u5230\u8fd9\u4e2a\u65b9\u6cd5\u3002\u5176\u5b9e\u5c31\u662f\u4e00\u6837\u7684\u8fc7\u7a0b\u3002</p>"},{"location":"LeetCode/%E6%99%BA%E5%8A%9B%E9%A2%98/Smart/#code_1","title":"Code","text":"<pre><code>class Solution {\npublic:\n    void sortColors(vector&lt;int&gt;&amp; nums) {\n        int left = 0;\n        int right = nums.size()-1;\n        int curr = 0;\n        while(curr&lt;=right){\n            if(nums[curr] == 0){\n                int temp = nums[left];\n                nums[left] = nums[curr];\n                nums[curr] = temp;\n                curr ++;\n                left ++;\n            }else if(nums[curr]==1){\n                curr++;\n            }else{\n                int temp = nums[right];\n                nums[right] = nums[curr];\n                nums[curr] = temp;\n                right--;\n            }\n        }\n\n    }\n};\n</code></pre>"},{"location":"LeetCode/%E6%99%BA%E5%8A%9B%E9%A2%98/Smart/#search","title":"\u67e5\u627eSearch","text":""},{"location":"LeetCode/%E6%99%BA%E5%8A%9B%E9%A2%98/Smart/#1-ii","title":"1 \u63a2\u7d22\u4e8c\u7ef4\u77e9\u9635 II","text":"<p>\u9898\u76ee\u5730\u5740</p> <p>\u672c\u9898\u5176\u5b9e\u662f\u4e8c\u5206\u67e5\u627e\u7684\u4e00\u4e2a\u53d8\u5f0f</p> <p></p>"},{"location":"LeetCode/%E6%99%BA%E5%8A%9B%E9%A2%98/Smart/#_4","title":"\u9898\u89e3","text":"<p>\u770b\u5230\u67e5\u627e+\u6709\u5e8f\uff0c\u6211\u8ba4\u4e3a\u5f88\u81ea\u7136\u7684\u5c31\u4f1a\u5f80\u4e8c\u5206\u67e5\u627e\u7684\u65b9\u5411\u53bb\u60f3\u3002\u8fd9\u6837\u7684\u4e8c\u7ef4\u77e9\u9635\u5176\u5b9e\u4e5f\u662f\uff0c\u4e0d\u8fc7\u6709\u4e2a\u5de7\u5999\u7684\u70b9\u5c31\u5728\u4e8e\uff0c\u6211\u4eec\u9009\u62e9\u4e86\u77e9\u9635\u7684\u53f3\u4e0a\u89d2\u4f5c\u4e3a\u8d77\u70b9\u6765\u8fdb\u884c\u67e5\u627e\uff0c\u8fd9\u6837\u7684\u8bdd\u6211\u4eec\u53ef\u4ee5\u5f88\u81ea\u7136\u7684\u8d70\u5b8c\u6574\u4e2a\u77e9\u9635\u3002\u4e5f\u5c31\u662f\u53ea\u6709\u4e24\u4e2a\u65b9\u5411\uff0c\u5411\u5de6\u548c\u5411\u4e0b\u3002</p>"},{"location":"LeetCode/%E6%99%BA%E5%8A%9B%E9%A2%98/Smart/#code_2","title":"Code","text":"<pre><code>class Solution {\npublic:\n    bool searchMatrix(vector&lt;vector&lt;int&gt;&gt;&amp; matrix, int target) {\n        int m = matrix.size();\n        int n = matrix[0].size();\n        int minN = matrix[0][0];\n        int maxN = matrix[m-1][n-1];\n        if(target&gt;maxN||target&lt;minN)\n            return false;\n        int x = 0;\n        int y = n-1;\n        while(x&lt;m&amp;&amp;y&gt;=0){\n            int value = matrix[x][y];\n            if(value == target)\n                return true;\n            else if(value &gt; target){\n                y--;\n            }else{\n                x++;\n            }\n        }\n        return false;\n    }\n};\n</code></pre>"},{"location":"SourceCode/Java/Timer/","title":"Timer","text":"<p>\u8fd9\u4e00\u7ae0\u662f\u4e3a\u4e86\u5b66\u4e60 Java \u7684 Timer \u7c7b\u6765\u5199\u7684\uff0c\u540c\u65f6\u4e5f\u6765\u5b66\u4e60\u4e00\u4e0b\u6e90\u7801\u3002</p>"},{"location":"SourceCode/Java/Timer/#introduce","title":"Introduce","text":"<p>\u7b80\u5355\u7684\u4e86\u89e3\u4e00\u4e0b <code>Timer</code> \u8fd9\u4e2a\u7c7b\u7684\u4f5c\u7528, <code>Timer</code> \u7c7b\u662f\u7528\u6765\u6267\u884c\u8ba1\u5212\u4efb\u52a1\u7684\uff0c\u5b83\u53ef\u4ee5\u5728\u6307\u5b9a\u7684\u65f6\u95f4\u6267\u884c\u67d0\u4e00\u4e2a\u4efb\u52a1\uff0c\u4e5f\u53ef\u4ee5\u5728\u6307\u5b9a\u7684\u65f6\u95f4\u5f00\u59cb\u6267\u884c\u67d0\u4e00\u4e2a\u4efb\u52a1\uff0c\u8fd8\u53ef\u4ee5\u5728\u6307\u5b9a\u7684\u65f6\u95f4\u5f00\u59cb\u6267\u884c\u67d0\u4e00\u4e2a\u4efb\u52a1\uff0c\u5e76\u4e14\u6309\u7167\u56fa\u5b9a\u7684\u901f\u7387\u91cd\u590d\u6267\u884c\u3002 </p> <p>\u4f46\u662f <code>Timer</code> \u4ec5\u4ec5\u662f\u6309\u7167\u9700\u8981\u6267\u884c\u7684\u65f6\u95f4\u8fdb\u884c\u4e00\u4e2a\u8c03\u5ea6\uff0c\u4f46\u662f\u6ca1\u6709\u8003\u8651\u5230\u4f18\u5148\u7ea7\uff0c\u56e0\u4e3a\u53ef\u80fd\u4f1a\u51fa\u73b0\u540c\u4e00\u7684\u6267\u884c\u65f6\u95f4\u4e0b\uff0c\u8fdb\u884c\u76f8\u5173\u7684\u8c03\u5ea6\u3002</p> <pre><code>Timer timer = new Timer();\nTimeTask task = new TimeTask(){\n    public void run(){\n        System.out.println(\"Hello World\");\n    }\n};\n\n// \u5ef6\u8fdf 1s \u540e\u6267\u884c\ntimer.schedule(task,1000);\n// \u5ef6\u8fdf 1s \u56fa\u5b9a\u95f4\u9694 1s \u5468\u671f\u6253\u5370\u4e00\u6b21\ntimer.schedule(task,1000,1000);\n// \u5ef6\u8fdf 1s \u56fa\u5b9a\u901f\u7387\u6bcf\u9694 1s \u6267\u884c\u4e00\u6b21\ntimer.scheduleAtFixedRate(task,1000,1000);\n</code></pre>"},{"location":"SourceCode/Java/Timer/#timer_1","title":"Timer \u7684\u5b9e\u73b0\u539f\u7406","text":"<p>\u6211\u4eec\u5148\u6765\u770b\u4e00\u4e0b <code>Timer</code> \u7684\u5185\u90e8\u7ed3\u6784 <pre><code>public class Timer {\n\n    // \u4efb\u52a1\u961f\u5217\n    private final TaskQueue queue = new TaskQueue();\n\n    // \u5de5\u4f5c\u7ebf\u7a0b\uff0c\u5faa\u73af\u53d6\u4efb\u52a1\n    private final TimerThread thread = new TimerThread(queue);\n\n    private final Object threadReaper = new Object() {\n        protected void finalize() throws Throwable {\n            synchronized(queue) {\n                thread.newTasksMayBeScheduled = false;\n                queue.notify(); // In case queue is empty.\n            }\n        }\n    };\n\n    // Timer\u7684\u5e8f\u5217\u53f7\uff0c\u547d\u540d\u5de5\u4f5c\u7ebf\u7a0b\uff08\u9759\u6001\u53d8\u91cf\uff0c\u5728\u542f\u52a8\u591a\u4e2aTimer\u7684\u60c5\u51b5\u53ef\u4ee5\u7528\u4e8e\u533a\u5206\u5bf9\u5e94\u7684\u5de5\u4f5c\u7ebf\u7a0b\uff09\n    private final static AtomicInteger nextSerialNumber = new AtomicInteger(0);  \n}\n</code></pre></p> <p>\u6211\u4eec\u5148\u770b\u4e00\u4e2a <code>Timer</code> \u5bf9\u8c61\u7684\u5185\u90e8\u5b9a\u4e49\uff0c\u5b83\u6709\u4e00\u4e2a <code>TaskQueue</code> \u5bf9\u8c61\uff0c\u4e00\u4e2a <code>TimerThread</code> \u5bf9\u8c61\uff0c\u4e00\u4e2a <code>threadReaper</code> \u5bf9\u8c61\uff0c\u4e00\u4e2a <code>nextSerialNumber</code> \u5bf9\u8c61\u3002</p> <ul> <li> <p><code>TaskQueue</code> \u5bf9\u8c61\u662f\u4e00\u4e2a\u4efb\u52a1\u961f\u5217\uff0c\u7528\u6765\u5b58\u50a8\u4efb\u52a1\uff0c\u6211\u4eec\u6bcf\u521b\u5efa\u4e00\u4e2a\u4efb\u52a1\u5c31\u5f80\u4efb\u52a1\u961f\u5217\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u4efb\u52a1\u3002\u56e0\u4e3a\u6211\u4eec\u8981\u8003\u8651\u5e76\u53d1\u7684\u95ee\u9898\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5bf9\u4efb\u52a1\u961f\u5217\u8fdb\u884c\u52a0\u9501\u3002  </p> </li> <li> <p><code>TimerThread</code> \u5bf9\u8c61\u662f\u4e00\u4e2a\u5de5\u4f5c\u7ebf\u7a0b\uff0c\u5b83\u662f\u4e00\u4e2a\u5faa\u73af\u53d6\u4efb\u52a1\u7684\u7ebf\u7a0b\uff0c\u6211\u4eec\u6bcf\u6b21\u5f80\u4efb\u52a1\u961f\u5217\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u4efb\u52a1\uff0c\u5b83\u5c31\u4f1a\u53bb\u53d6\u4efb\u52a1\u3002\u56e0\u4e3a\u6211\u4eec\u9700\u8981\u7ba1\u7406\u8fd9\u4e9b\u4efb\u52a1\u7ebf\u7a0b\u3002</p> </li> <li> <p><code>threadReaper</code> \u5bf9\u8c61\u662f\u4e00\u4e2a\u7ebf\u7a0b\u56de\u6536\u5668\uff0c\u5b83\u662f\u4e00\u4e2a\u5185\u90e8\u7c7b\uff0c\u7528\u6765\u56de\u6536\u7ebf\u7a0b\u7684\u3002</p> </li> <li> <p><code>nextSerialNumber</code> \u5bf9\u8c61\u662f\u4e00\u4e2a\u9759\u6001\u53d8\u91cf\uff0c\u7528\u6765\u547d\u540d\u5de5\u4f5c\u7ebf\u7a0b\u7684\uff0c\u56e0\u4e3a\u6211\u4eec\u53ef\u80fd\u4f1a\u542f\u52a8\u591a\u4e2a <code>Timer</code> \u5bf9\u8c61\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5bf9\u5de5\u4f5c\u7ebf\u7a0b\u8fdb\u884c\u547d\u540d\u3002</p> </li> </ul>"},{"location":"SourceCode/Java/Timer/#taskqueue","title":"<code>TaskQueue</code>","text":"<p>\u8fd9\u91cc\u662f\u6709\u5173 <code>TaskQueue</code> \u7684\u6e90\u4ee3\u7801 <pre><code>class TaskQueue {\n\n    private TimerTask[] queue = new TimerTask[128];\n\n    private int size = 0;\n\n    int size() {\n        return size;\n    }\n\n    // \u9700\u8981\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u6bcf\u6b21\u6211\u4eec\u6dfb\u52a0\u4e00\u4e2a\u4efb\u52a1\u5143\u7d20\u7684\u65f6\u5019\uff0c\u90fd\u9700\u8981\u5411\u4e0a\u7ef4\u62a4\u8fd9\u4e2a\u6700\u5c0f\u5806\uff0c\u56e0\u4e3a\u662f\u5c06\u5b83\u7f6e\u4e8e\u6570\u7ec4\u7684\u672b\u5c3e\u3002\n    void add(TimerTask task) {\n        if (size + 1 == queue.length)\n            queue = Arrays.copyOf(queue, 2*queue.length);\n\n        queue[++size] = task;\n        fixUp(size);\n    }\n\n    TimerTask getMin() {\n        return queue[1];\n    }\n\n    TimerTask get(int i) {\n        return queue[i];\n    }\n\n    void removeMin() {\n        queue[1] = queue[size];\n        queue[size--] = null;  // Drop extra reference to prevent memory leak\n        fixDown(1);\n    }\n\n    /**\n     * Here the quickRemove is used to remove the specific\n     * task in the queue,but it do not guarantee the\n     * order of the queue.\n     */\n    void quickRemove(int i) {\n        assert i &lt;= size;\n\n        queue[i] = queue[size];\n        queue[size--] = null;  // Drop extra ref to prevent memory leak\n    }\n\n    void rescheduleMin(long newTime) {\n        queue[1].nextExecutionTime = newTime;\n        fixDown(1);\n    }\n\n    boolean isEmpty() {\n        return size==0;\n    }\n\n    void clear() {\n        for (int i=1; i&lt;=size; i++)\n            queue[i] = null;\n\n        size = 0;\n    }\n\n    // \u5411\u4e0a\u7ef4\u62a4\u8fd9\u4e2a\u6700\u5c0f\u5806 ;\n    private void fixUp(int k) {\n        while (k &gt; 1) {\n            int j = k &gt;&gt; 1;\n            if (queue[j].nextExecutionTime &lt;= queue[k].nextExecutionTime)\n                break;\n            TimerTask tmp = queue[j];  queue[j] = queue[k]; queue[k] = tmp;\n            k = j;\n        }\n    }\n\n    // \u5411\u4e0b\u7ef4\u62a4\u8fd9\u4e2a\u6700\u5c0f\u5806 ;\n    private void fixDown(int k) {\n        int j;\n        while ((j = k &lt;&lt; 1) &lt;= size &amp;&amp; j &gt; 0) {\n            if (j &lt; size &amp;&amp;\n                queue[j].nextExecutionTime &gt; queue[j+1].nextExecutionTime)\n                j++; // j indexes smallest kid\n            if (queue[k].nextExecutionTime &lt;= queue[j].nextExecutionTime)\n                break;\n            TimerTask tmp = queue[j];  queue[j] = queue[k]; queue[k] = tmp;\n            k = j;\n        }\n    }\n\n    void heapify() {\n        for (int i = size/2; i &gt;= 1; i--)\n            fixDown(i);\n    }\n}\n</code></pre></p> <p>\u9996\u5148\uff0c\u6211\u4eec\u89c2\u5bdf<code>TaskQueue</code> \u7684\u6e90\u4ee3\u7801\u53ef\u4ee5\u53d1\u73b0\uff0c\u8fd9\u4e2a\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a\u4ee5<code>execTime</code> \u4f5c\u4e3a\u7ef4\u62a4\u7684\u53d8\u91cf\u7684\u4e00\u4e2a\u6700\u5c0f\u5806\u3002\u6211\u4eec\u9700\u8981\u4fdd\u8bc1\u4ed6\u4eec\u6309\u7167\u6267\u884c\u65f6\u95f4\u8fdb\u884c\u6392\u5e8f\u3002\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u8fd9\u91cc\u6709\u4e00\u4e2a<code>fixUp</code> \u548c <code>fixDown</code> \u65b9\u6cd5\uff0c\u8fd9\u4e24\u4e2a\u65b9\u6cd5\u5c31\u662f\u7528\u6765\u7ef4\u62a4\u8fd9\u4e2a\u6700\u5c0f\u5806\u7684\u3002\u8fd9\u4e2a\u6700\u5c0f\u5806\u540c\u65f6\u4e5f\u5177\u6709\u81ea\u52a8\u6269\u5bb9\u7684\u529f\u80fd\u3002</p>"},{"location":"SourceCode/Java/Timer/#timerthread","title":"<code>TimerThread</code>","text":"<p>\u9996\u5148\u6765\u770b\u8fd9\u4e2a\u7c7b\u7684\u5185\u90e8\u7ec4\u6210 <pre><code>class TimerThread extends Thread{\n    boolean newTasksMayBeScheduled = true;\n\n    private TaskQueue queue;\n\n    TimerThread(TaskQueue queue){\n        this.queue = queue;\n    }\n}\n</code></pre></p> <p>\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a\u7c7b\uff0c\u5b83\u7528\u6765\u7ef4\u62a4\u6267\u884c\u90a3\u4e2a\u4efb\u52a1\u961f\u5217\u3002\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u8fd9\u4e2a\u7c7b\u662f\u7ee7\u627f\u4e86<code>Thread</code> \u63a5\u53e3\uff0c\u4e5f\u5c31\u662f\u8bf4\u5b83\u662f\u4e00\u4e2a\u4e00\u76f4\u8fdb\u884c\u7684\u7ebf\u7a0b\u3002\u540c\u65f6\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u8fd9\u4e2a\u7c7b\u6709\u4e00\u4e2a<code>newTasksMayBeScheduled</code> \u53d8\u91cf\uff0c\u8fd9\u4e2a\u53d8\u91cf\u662f\u7528\u6765\u63a7\u5236\u662f\u5426\u53ef\u4ee5\u6dfb\u52a0\u65b0\u7684\u4efb\u52a1\u7684\u3002\u4e5f\u5c31\u662f\u6362\u53e5\u8bdd\u8bf4\uff0c\u5176\u5b9e\u5c31\u662f\u4e00\u79cd\u544a\u77e5\u6211\u4eec\u5df2\u7ecf\u542f\u7528\u4e86 <code>ThreadReaper</code> \u8fd9\u4e2a\u7ebf\u7a0b\u4e86\uff0c\u4f5c\u4e3a<code>Timer</code>\u7684\u5bf9\u8c61\u6e05\u7406\u5904\u7406\u7a0b\u5e8f\u3002\u5f53\u8ba1\u65f6\u5668\u5bf9\u8c61\u6ca1\u6709\u5b9e\u65f6\u5f15\u7528\u4e14\u8ba1\u65f6\u5668\u961f\u5217\u4e2d\u6ca1\u6709\u4efb\u52a1\u65f6\uff0c\u8fd9\u4f1a\u5bfc\u81f4\u6267\u884c\u7ebf\u7a0b\u4f18\u96c5\u5730\u9000\u51fa\u3002</p> <p>\u7136\u540e\u7ee7\u7eed\u6765\u770b\u8fd9\u4e2a\u7c7b\u662f\u600e\u4e48\u8fd0\u884c\u7684  <pre><code>public void run() {\n        try {\n            mainLoop();\n        } finally {\n            // Someone killed this Thread, behave as if Timer cancelled\n            synchronized(queue) {\n                newTasksMayBeScheduled = false;\n                queue.clear();  // Eliminate obsolete references\n            }\n        }\n    }\nprivate void mainLoop() {\n        while (true) {\n            try {\n                TimerTask task;\n                boolean taskFired;\n                synchronized(queue) {\n                    // Wait for queue to become non-empty\n                    while (queue.isEmpty() &amp;&amp; newTasksMayBeScheduled)\n                        queue.wait();\n                    if (queue.isEmpty())\n                        break; // Queue is empty and will forever remain; die\n\n                    // Queue nonempty; look at first evt and do the right thing\n                    long currentTime, executionTime;\n                    task = queue.getMin();\n                    synchronized(task.lock) {\n                        if (task.state == TimerTask.CANCELLED) {\n                            queue.removeMin();\n                            continue;  // No action required, poll queue again\n                        }\n                        currentTime = System.currentTimeMillis();\n                        executionTime = task.nextExecutionTime;\n                        if (taskFired = (executionTime&lt;=currentTime)) {\n                            if (task.period == 0) { // Non-repeating, remove\n                                queue.removeMin();\n                                task.state = TimerTask.EXECUTED;\n                            } else { // Repeating task, reschedule\n                                queue.rescheduleMin(\n                                  task.period&lt;0 ? currentTime   - task.period\n                                                : executionTime + task.period);\n                            }\n                        }\n                    }\n                    if (!taskFired) // Task hasn't yet fired; wait\n                        queue.wait(executionTime - currentTime);\n                }\n                if (taskFired)  // Task fired; run it, holding no locks\n                    task.run();\n            } catch(InterruptedException e) {\n            }\n        }\n    }\n</code></pre></p> <p>\u6211\u4eec\u6765\u770b\u4e0a\u9762\u7684\u903b\u8f91\uff0c\u5176\u5b9e\u5c31\u662f\u5206\u6210\u4e86\u4e24\u6b65\u3002</p> <ul> <li>\u5176\u5b9e\u5c31\u662f\u4e00\u76f4\u7ef4\u62a4\u8fd0\u884c\u7740<code>mainLoop</code>\u7684\u5faa\u73af\uff0c\u76f4\u5230\u6211\u4eec\u6267\u884c<code>finally</code>\u5b50\u53e5\u7684\u65f6\u5019\uff0c\u5c31\u4f1a\u5bf9<code>queue</code>\u4e0a<code>synchronized</code>\u540c\u6b65\u9501\uff08\u4efb\u4f55\u60f3\u8fdb\u5165<code>synchronized(queue)</code>\u8fd9\u4e2a\u7ebf\u7a0b\u7684\u4ee3\u7801\u5757\u90fd\u4f1a\u88ab\u963b\u585e\uff09\uff0c\u7136\u540e\u6e05\u7a7a\u961f\u5217\uff0c\u7136\u540e\u9000\u51fa\u7ebf\u7a0b\u3002<code>synchronized(queue)</code></li> </ul>"},{"location":"SourceCode/Java/Timer/#timertask","title":"<code>TimerTask</code>","text":"<p>\u6211\u4eec\u5148\u5bf9 <code>TimerTask</code> \u8fdb\u884c\u4e00\u4e2a\u89e3\u91ca\uff0c<code>TimerTask</code> \u662f\u4e00\u4e2a\u62bd\u8c61\u7c7b\uff0c\u5b83\u662f\u4e00\u4e2a\u4efb\u52a1\u7c7b\uff0c\u6211\u4eec\u53ef\u4ee5\u7ee7\u627f\u8fd9\u4e2a\u7c7b\u6765\u5b9e\u73b0\u6211\u4eec\u7684\u4efb\u52a1\u3002</p> <p>\u91cc\u9762\u6709\u51e0\u4e2a\u503c\u5f97\u6ce8\u610f\u7684\u6210\u5458\u53d8\u91cf\uff0c\u6765\u65b9\u4fbf\u6211\u4eec\u7406\u89e3</p> <ul> <li> <p><code>period</code> \u8868\u793a\u7684\u5176\u5b9e\u5c31\u662f\u6211\u4eec\u7684\u5468\u671f\u3002\u5982\u679c<code>period == 0</code> \u8868\u793a\u7684\u662f\u8fd9\u4e2a\u4efb\u52a1\u4e0d\u4f1a\u91cd\u590d\u6267\u884c\u3002\u5982\u679c<code>period&gt;0</code> \u8868\u793a\u7684\u662f\u8fd9\u4e2a\u4efb\u52a1\u4f1a\u4ee5\u56fa\u5b9a\u7684\u901f\u7387\u6267\u884c\u3002\u5982\u679c<code>period&lt;0</code> \u8868\u793a\u7684\u662f\u8fd9\u4e2a\u4efb\u52a1\u4f1a\u4ee5\u56fa\u5b9a\u7684\u5ef6\u8fdf\u6267\u884c\u3002</p> <p>Period in milliseconds for repeating tasks. A positive value indicates fixed-rate execution. A negative value indicates fixed-delay execution. A value of 0 indicates a non-repeating task.</p> </li> </ul> <p></p> <p>\u540c\u65f6\uff0c<code>TimerTask</code> \u6709\u51e0\u4e2a\u72b6\u6001\u5e38\u91cf\u9700\u8981\u6ce8\u610f:</p> <ul> <li><code>static final int VIRGIN = 0</code> : \u8868\u793a\u7684\u662f\u8fd9\u4e2a\u4efb\u52a1\u8fd8\u6ca1\u6709\u88ab\u8c03\u5ea6</li> <li><code>static final int SCHEDULED = 1</code> : \u8868\u793a\u8fd9\u4e2a\u4efb\u52a1\u5df2\u7ecf\u88ab\u8c03\u5ea6\uff0c\u7279\u522b\u7684\u5982\u679c\u662f\u5355\u6267\u884c\u7684\u4efb\u52a1\uff0c\u8fd9\u4e2a\u8bf4\u660e\u8fd8\u6ca1\u6709\u88ab\u6267\u884c\u3002\u6211\u4eec\u8fd9\u91cc\u7684\u8c03\u5ea6\u662f\u6307\u5df2\u7ecf\u52a0\u5165\u4e86\u4efb\u52a1\u961f\u5217\u3002</li> <li><code>static final int EXECUTED = 2</code> : \u8868\u793a\u8fd9\u4e2a\u4efb\u52a1\u5df2\u7ecf\u88ab\u6267\u884c\u4e86</li> <li><code>static final int CANCELLED = 3</code> : \u8868\u793a\u8fd9\u4e2a\u4efb\u52a1\u5df2\u7ecf\u88ab\u53d6\u6d88\u4e86</li> </ul> <p>\u4e0b\u9762\u7ee7\u7eed\u770b\u6e90\u4ee3\u7801 \u9996\u5148\uff0c\u8fd9\u4e2a <code>mainLoop()</code> \u4e3b\u5faa\u73af\u7684\u903b\u8f91\u662f\u8fd9\u6837\u7684\uff1a</p> <ul> <li> <p>\u5148\u67e5\u770b\u8fd9\u4e2a\u4efb\u52a1\u961f\u5217\u662f\u5426\u4e3a\u7a7a\uff1f\u5982\u679c\u4e3a\u7a7a\uff0c\u90a3\u4e48\u5c31\u4f1a\u4e00\u76f4\u7b49\u5f85\uff0c\u76f4\u5230\u6709\u4efb\u52a1\u52a0\u5165\u3002\u9664\u975e\u5df2\u7ecf <code>newTasksMayBeScheduled</code> \u4e3a <code>false</code>, \u90a3\u4e48\u5c31\u4f1a\u9000\u51fa\u8fd9\u4e2a\u4e3b\u5faa\u73af\u3002</p> </li> <li> <p>\u7531\u4e8e<code>queue</code>\u662f\u4e00\u4e2a\u5171\u4eab\u8d44\u6e90\uff0c\u4e5f\u5c31\u662f\u8bf4\u5f88\u591a\u7ebf\u7a0b\u90fd\u53ef\u80fd\u4f1a\u540c\u65f6\u6765\u8bbf\u95ee\u8fd9\u4e2a\u5171\u4eab\u8d44\u6e90\uff0c\u4f1a\u9020\u6210 \u7ade\u6001\u95ee\u9898\uff0c\u6240\u4ee5\u6211\u4eec\u9009\u62e9\u4e86\u7ed9<code>queue</code>\u52a0\u4e0a\u540c\u6b65\u9501\uff0c\u6765\u907f\u514d\u7ebf\u7a0b\u51b2\u7a81\u3002</p> </li> <li> <p>\u7136\u540e\u5c31\u662f\u8fdb\u884c\u4efb\u52a1\u8c03\u5ea6\u7684\u9636\u6bb5\u4e86</p> <ul> <li>\u6211\u4eec\u53d6\u51fa\u6267\u884c\u65f6\u95f4\u6700\u8fd1\u7684\u4efb\u52a1\uff0c\u6765\u8fdb\u884c\u5224\u65ad\u3002<ul> <li>\u5982\u679c\u53d6\u51fa\u7684\u8fd9\u4e2a\u4efb\u52a1\u88ab\u53d6\u6d88\u4e86\uff0c\u90a3\u4e48\u5c31\u76f4\u63a5\u8df3\u8fc7\u8fd9\u4e2a\u4efb\u52a1\u3002</li> <li>\u6211\u4eec\u8fd9\u91cc\u4f7f\u7528\u4e86\u4e00\u4e2a <code>taskFired</code> \u53d8\u91cf\uff0c\u6765\u4f5c\u4e3a\u6807\u5fd7\uff0c\u5224\u65ad\u8fd9\u4e2a\u4efb\u52a1\u662f\u5426\u88ab\u89e6\u53d1\u4e86\uff1f</li> <li>\u5018\u82e5\u6ca1\u6709\u88ab\u89e6\u53d1\uff0c\u4e5f\u5c31\u662f\u6267\u884c\u65f6\u95f4\u5728\u6211\u4eec\u5f53\u524d\u65f6\u95f4\u4e4b\u540e\uff0c\u90a3\u4e48\u5c31\u4f1a\u7b49\u5f85\u8fd9\u4e2a\u4efb\u52a1\u7684\u6267\u884c\u65f6\u95f4\u3002</li> <li>\u5018\u82e5\u89e6\u53d1\u4e86\uff0c\u90a3\u4e48\u6211\u4eec\u4f1a\u901a\u8fc7\u5224\u65ad\u8fd9\u4e2a\u4efb\u52a1\u7684<code>period</code>\u6765\u8fdb\u884c\u76f8\u5e94\u7684\u903b\u8f91\u5904\u7406\u3002<ul> <li>\u5982\u679c<code>period == 0</code> \u8868\u793a\u7684\u662f\u8fd9\u4e2a\u4efb\u52a1\u4e0d\u4f1a\u91cd\u590d\u6267\u884c\uff0c\u90a3\u4e48\u5c31\u4f1a\u5c06\u8fd9\u4e2a\u4efb\u52a1\u4ece\u961f\u5217\u4e2d\u79fb\u9664\u3002</li> <li>\u5982\u679c<code>period &gt; 0</code> \u8868\u793a\u7684\u662f\u8fd9\u4e2a\u4efb\u52a1\u4f1a\u4ee5\u56fa\u5b9a\u7684\u901f\u7387\u6267\u884c\uff0c\u90a3\u4e48\u5c31\u4f1a\u91cd\u65b0\u8c03\u5ea6\u8fd9\u4e2a\u4efb\u52a1\u3002</li> <li>\u5982\u679c<code>period &lt; 0</code> \u8868\u793a\u7684\u662f\u8fd9\u4e2a\u4efb\u52a1\u4f1a\u4ee5\u56fa\u5b9a\u7684\u5ef6\u8fdf\u6267\u884c\uff0c\u90a3\u4e48\u5c31\u4f1a\u91cd\u65b0\u8c03\u5ea6\u8fd9\u4e2a\u4efb\u52a1\u3002</li> </ul> </li> </ul> </li> </ul> </li> </ul> <p>\u63a5\u4e0b\u6765\u6765\u5206\u6790<code>Timer</code>\u7684\u5177\u4f53\u5b9e\u73b0\u903b\u8f91\uff0c\u56e0\u4e3a\u6709\u51e0\u4e2a\u65b9\u6cd5</p>"},{"location":"SourceCode/Java/Timer/#schedule","title":"<code>schedule</code> \u65b9\u6cd5","text":""},{"location":"SourceCode/Java/Timer/#private-void-schedtimertask-task-long-time-long-period","title":"<code>private void sched(TimerTask task, long time, long period)</code> \u65b9\u6cd5","text":"<pre><code>/**\n * Schedule for the task;\n */\nprivate void sched(TimerTask task, long time, long period) {\n        if (time &lt; 0)\n            throw new IllegalArgumentException(\"Illegal execution time.\");\n\n        // Constrain value of period sufficiently to prevent numeric\n        // overflow while still being effectively infinitely large.\n        if (Math.abs(period) &gt; (Long.MAX_VALUE &gt;&gt; 1))\n            period &gt;&gt;= 1;\n\n        synchronized(queue) {\n            if (!thread.newTasksMayBeScheduled)\n                throw new IllegalStateException(\"Timer already cancelled.\");\n\n            synchronized(task.lock) {\n                if (task.state != TimerTask.VIRGIN)\n                    throw new IllegalStateException(\n                        \"Task already scheduled or cancelled\");\n                task.nextExecutionTime = time;\n                task.period = period;\n                task.state = TimerTask.SCHEDULED;\n            }\n\n            queue.add(task);\n            if (queue.getMin() == task)\n                queue.notify();\n        }\n    }\n</code></pre> <p>\u9700\u8981\u6ce8\u610f\u7684\u662f\u4e3b\u8981\u662f\u8fdb\u884c\u51e0\u4e2a\u8fb9\u754c\u5904\u7406</p> <ul> <li><code>time&lt;0</code> \u9632\u6b62\u6dfb\u52a0\u7684\u65f6\u95f4\u662f\u4e00\u4e2a\u8d1f\u6570\uff0c\u90a3\u4e48\u5c31\u4f1a\u5bfc\u81f4\u6700\u5c0f\u5806\u91cc\u6c38\u8fdc\u90fd\u662f\u8fd9\u4e2a\u4efb\u52a1\uff0c\u4f46\u662f\u59cb\u7ec8\u4e0d\u4f1a\u6267\u884c</li> <li><code>period</code> \u7684\u7edd\u5bf9\u503c\u4e0d\u80fd\u592a\u5927\uff0c\u9632\u6b62\u6ea2\u51fa</li> <li><code>newTasksMayBeScheduled</code> \u4e3a <code>false</code> \u7684\u65f6\u5019\uff0c\u5c31\u4f1a\u629b\u51fa\u5f02\u5e38\uff0c\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u8fd9\u4e2a<code>Timer</code>\u5bf9\u8c61\u5df2\u7ecf\u8fdb\u884c\u4e86<code>clean</code>\u64cd\u4f5c\uff0c\u90a3\u4e48\u5c31\u4e0d\u80fd\u518d\u6dfb\u52a0\u4efb\u52a1\u4e86\u3002</li> </ul> <p>\u56e0\u4e3a\u8981\u9632\u6b62\u5176\u4ed6\u7684\u7ebf\u7a0b\u5bf9\u5f53\u524d\u8981\u6dfb\u5165\u4efb\u52a1\u961f\u5217\u7684\u4efb\u52a1\u8fdb\u884c\u64cd\u4f5c\uff0c\u6211\u4eec\u9700\u8981\u5bf9\u8fd9\u4e2a\u4efb\u52a1\u8fdb\u884c\u52a0\u9501\uff0c\u7136\u540e\u8fdb\u884c\u76f8\u5e94\u7684\u64cd\u4f5c\u3002\u540c\u65f6\u56e0\u4e3a<code>queue</code>\u662f\u4e00\u4e2a\u5171\u4eab\u7684\u8d44\u6e90\uff0c\u6211\u4eec\u5982\u679c\u53d1\u73b0\u5f53\u524d\u7684\u4efb\u52a1\u6700\u5c0f\u503c\u5c31\u662f\u6211\u4eec\u521a\u6dfb\u5165\u7684\u4efb\u52a1\uff0c\u90a3\u4e48\u5c31\u4f1a<code>queue.notify()</code>\uff0c\u544a\u77e5\u5176\u4ed6\u6b63\u5728\u7b49\u5f85\u6d88\u8d39\u7684\u7ebf\u7a0b\uff0c\u6211\u4eec\u5df2\u7ecf\u6dfb\u52a0\u4e86\u4e00\u4e2a\u5373\u5c06\u6267\u884c\u7684\u4efb\u52a1\u3002</p>"},{"location":"SourceCode/Java/Timer/#public-void-scheduletimertask-taskdata-firsttime-long-period","title":"<code>public void schedule(TimerTask task,Data firstTime, long period)</code>","text":"<pre><code>public void schedule(TimerTask task, Date firstTime, long period) { \n    if (period &lt;= 0) \n        throw new IllegalArgumentException(\"Non-positive period.\"); \n    sched(task, firstTime.getTime(), -period); \n}\n</code></pre> <p>... \u540e\u7eed\u7684\u51e0\u4e2a\u65b9\u6cd5\u90fd\u7c7b\u4f3c\uff0c\u5c31\u4e0d\u518d\u8d58\u8ff0\u4e86\u3002</p>"},{"location":"SourceCode/Java/Collections/List/ArrayList/","title":"ArrayList","text":"<p><code>ArrayList</code> \u662f\u4e00\u4e2a <code>List</code> \u7684\u5b9e\u73b0\u7c7b\u3002\u8fd9\u4e2a\u94fe\u8868\u662f\u57fa\u4e8e\u6570\u7ec4\u5b9e\u73b0\u7684\uff0c\u6240\u4ee5\u5b83\u7684\u67e5\u8be2\u6548\u7387\u975e\u5e38\u7684\u9ad8\uff0c\u4f46\u662f\u63d2\u5165\u548c\u5220\u9664\u7684\u6548\u7387\u5c31\u6bd4\u8f83\u4f4e\u4e86\u3002<code>ArrayList</code> \u662f\u975e\u7ebf\u7a0b\u5b89\u5168\u7684\uff0c\u5982\u679c\u9700\u8981\u7ebf\u7a0b\u5b89\u5168\u7684\u8bdd\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>Vector</code> \u6216\u8005\u662f <code>Collections.synchronizedList</code> \u6765\u8fdb\u884c\u5305\u88c5\u3002</p>"},{"location":"SourceCode/Java/Collections/List/ArrayList/#introduce","title":"Introduce","text":"<p>\u9996\u5148\uff0c\u4e3a\u4ec0\u4e48\u9700\u8981\u6709<code>ArrayList</code>? </p> <p>\u53ef\u80fd\u4f60\u4f1a\u60f3\uff0c\u6211\u4eec\u5728<code>Java</code>\u4e2d\u4e0d\u662f\u6709<code>Array</code>\u4e86\u5417\uff1f\u4e3a\u4ec0\u4e48\u8fd8\u9700\u8981<code>ArrayList</code>\u5462\uff1f </p> <pre><code>public class Example{\n    public static void main(String[] args){\n        // Array\n        int[] testArray = new int[10];\n\n        // ArrayList\n        ArrayList&lt;Integer&gt; testArrayList = new ArrayList&lt;&gt;();\n    }\n}\n</code></pre> <p>\u6211\u4eec\u770b\u4e0a\u9762\u7684\u4e24\u4e2a\u58f0\u660e\u7684\u6570\u7ec4\uff0c\u5f88\u660e\u663e\u7684\u4f1a\u53d1\u73b0\u524d\u8005\u662f\u9700\u8981\u6307\u5b9a\u6570\u7ec4\u7684\u5927\u5c0f\u7684\uff0c\u4f46\u662f\u540e\u8005\u4e0d\u9700\u8981\u3002\u8fd9\u5c31\u662f<code>ArrayList</code>\u7684\u4f18\u52bf\u6240\u5728\uff0c\u5b83\u662f\u4e00\u4e2a\u52a8\u6001\u6570\u7ec4\uff0c\u53ef\u4ee5\u6839\u636e\u9700\u8981\u8fdb\u884c\u6269\u5bb9\u3002\u800c<code>Array</code>\u662f\u4e00\u4e2a\u9759\u6001\u6570\u7ec4\uff0c\u4e00\u65e6\u58f0\u660e\u4e86\u5927\u5c0f\uff0c\u5c31\u4e0d\u80fd\u8fdb\u884c\u6269\u5bb9\u4e86\u3002</p> <p>\u540c\u65f6\u6211\u4eec\u8fd8\u53ef\u4ee5\u660e\u786e\u7684\u4e00\u70b9\u662f\u3002\u5b83\u65e2\u7136\u662f\u4e00\u4e2a<code>List</code>\u7684\u5b9e\u73b0\u7c7b\uff0c\u90a3\u4e48\u5b83\u4e00\u5b9a\u6709\u5b83\u7684\u4f18\u52bf\u3002\u4e5f\u5c31\u662f\u5b83\u7ee7\u627f\u4e86\u5f88\u591a\u4e2a\u63a5\u53e3 <code>List</code> , <code>RandomAccess</code> , <code>Cloneable</code> , <code>Serializable</code>\u3002\u8fd9\u5c31\u610f\u5473\u7740\u5b83\u53ef\u4ee5\u8fdb\u884c\u968f\u673a\u8bbf\u95ee\uff0c\u53ef\u4ee5\u8fdb\u884c\u514b\u9686\uff0c\u53ef\u4ee5\u8fdb\u884c\u5e8f\u5217\u5316\u7b49\u7b49\u3002</p> <pre><code>public class ArrayList&lt;E&gt; extends AbstractList&lt;E&gt;\n        implements List&lt;E&gt;, RandomAccess, Cloneable, java.io.Serializable{\n\n  }\n</code></pre> <p></p>"},{"location":"SourceCode/Java/Collections/List/ArrayList/#_1","title":"\u6e90\u7801\u5206\u6790","text":"<p>\u6211\u4eec\u89c2\u5bdf <code>ArrayList</code> \u7684\u5185\u90e8\uff0c\u4f1a\u53d1\u73b0 <code>transient Object[] elementData</code> \u8fd9\u4e2a\u6570\u7ec4\u3002\u5176\u5b9e\u8fd9\u91cc\u7528\u4e86\u4e00\u4e2a <code>transient</code> \u5173\u952e\u5b57\u3002</p> <ul> <li> <p><code>transient</code> \u5173\u952e\u5b57\u7684\u4f5c\u7528:</p> <p>\u5728\u7f16\u8bd1\u7684\u8fc7\u7a0b\u4e2d\u544a\u77e5\u7f16\u8bd1\u5668\uff0c\u8fd9\u4e2a\u53d8\u91cf\u4e0d\u9700\u8981\u88ab\u5e8f\u5217\u5316\u3002\u4e5f\u5c31\u662f\u65b9\u4fbf\u6307\u660e\u54ea\u4e9b\u4e0d\u9700\u8981\u88ab\u5e8f\u5217\u5316\uff0c\u4ee5\u4f5c\u533a\u5206\u3002</p> </li> </ul> <p>\u6211\u4eec\u4e3b\u8981\u56f4\u7ed5\u7740 <code>ArrayList</code> \u7684\u6269\u5bb9\u673a\u5236\u6765\u8fdb\u884c\u5206\u6790\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u662f\u548c<code>Array</code>\u7684\u6700\u5927\u533a\u5206\u3002</p>"},{"location":"SourceCode/Java/Collections/List/ArrayList/#arraylist_1","title":"<code>ArrayList</code> \u6784\u9020\u51fd\u6570","text":"<p>\u9996\u5148\u662f\u4e86\u89e3 <code>ArrayList</code> \u7684\u6784\u9020\u51fd\u6570\uff0c\u6211\u4eec\u80fd\u53d1\u73b0\u7684\u662f\uff0c\u5b83\u5176\u5b9e\u4e00\u5f00\u59cb\u662f\u8d4b\u503c\u4e86\u4e00\u4e2a\u7a7a\u6570\u7ec4\uff0c\u53ea\u6709\u4f60\u5f80\u5176\u4e2d\u6dfb\u52a0\u5143\u7d20\u7684\u65f6\u5019\uff0c\u624d\u4f1a\u771f\u7684\u5206\u914d\u5bb9\u91cf\u3002</p> <pre><code>// \u4e0b\u9762\u662f ArrayList \u7684\u6784\u9020\u51fd\u6570\u5185\u90e8\u7ec6\u8282\n/**\n * \u9ed8\u8ba4\u521d\u59cb\u5bb9\u91cf\u5927\u5c0f\n */\nprivate static final int DEFAULT_CAPACITY = 10;\n\nprivate static final Object[] DEFAULTCAPACITY_EMPTY_ELEMENTDATA = {};\n\n/**\n * \u9ed8\u8ba4\u6784\u9020\u51fd\u6570\uff0c\u4f7f\u7528\u521d\u59cb\u5bb9\u91cf10\u6784\u9020\u4e00\u4e2a\u7a7a\u5217\u8868(\u65e0\u53c2\u6570\u6784\u9020)\n */\npublic ArrayList() {\n    this.elementData = DEFAULTCAPACITY_EMPTY_ELEMENTDATA;\n}\n\n/**\n * \u5e26\u521d\u59cb\u5bb9\u91cf\u53c2\u6570\u7684\u6784\u9020\u51fd\u6570\u3002\uff08\u7528\u6237\u81ea\u5df1\u6307\u5b9a\u5bb9\u91cf\uff09\n */\npublic ArrayList(int initialCapacity) {\n    if (initialCapacity &gt; 0) {//\u521d\u59cb\u5bb9\u91cf\u5927\u4e8e0\n        //\u521b\u5efainitialCapacity\u5927\u5c0f\u7684\u6570\u7ec4\n        this.elementData = new Object[initialCapacity];\n    } else if (initialCapacity == 0) {//\u521d\u59cb\u5bb9\u91cf\u7b49\u4e8e0\n        //\u521b\u5efa\u7a7a\u6570\u7ec4\n        this.elementData = EMPTY_ELEMENTDATA;\n    } else {//\u521d\u59cb\u5bb9\u91cf\u5c0f\u4e8e0\uff0c\u629b\u51fa\u5f02\u5e38\n        throw new IllegalArgumentException(\"Illegal Capacity: \" + initialCapacity);\n    }\n}\n\n\n/**\n *\u6784\u9020\u5305\u542b\u6307\u5b9acollection\u5143\u7d20\u7684\u5217\u8868\uff0c\u8fd9\u4e9b\u5143\u7d20\u5229\u7528\u8be5\u96c6\u5408\u7684\u8fed\u4ee3\u5668\u6309\u987a\u5e8f\u8fd4\u56de\n *\u5982\u679c\u6307\u5b9a\u7684\u96c6\u5408\u4e3anull\uff0cthrows NullPointerException\u3002\n */\npublic ArrayList(Collection&lt;? extends E&gt; c) {\n    elementData = c.toArray();\n    if ((size = elementData.length) != 0) {\n        // c.toArray might (incorrectly) not return Object[] (see 6260652)\n        if (elementData.getClass() != Object[].class)\n            elementData = Arrays.copyOf(elementData, size, Object[].class);\n    } else {\n        // replace with empty array.\n        this.elementData = EMPTY_ELEMENTDATA;\n    }\n}\n</code></pre> <p>\u7b80\u5355\u7684\u6982\u62ec\u5c31\u662f\uff0c\u6211\u4eec\u5728\u6784\u9020\u51fd\u6570\u7684\u65f6\u5019\uff0c\u5176\u5b9e\u5206\u4e3a\u4e86\u4e09\u79cd\u60c5\u51b5:</p> <ul> <li>\u6211\u4eec\u76f4\u63a5\u5229\u7528\u65e0\u53c2\u6784\u9020\u51fd\u6570</li> <li>\u6211\u4eec\u6307\u5b9a\u4e86\u521d\u59cb\u5bb9\u91cf\u7684\u6784\u9020\u51fd\u6570</li> <li>\u6211\u4eec\u5229\u7528\u4e86<code>Collection</code>\u7684\u6784\u9020\u51fd\u6570\uff0c\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u6211\u4eec\u9700\u8981\u68c0\u67e5<code>elementData.getClass()!=Object[].class</code> \u8fd9\u4e2a\u662f\u56e0\u4e3a\uff0c<code>toArray()</code>\u65b9\u6cd5\u53ef\u80fd\u4f1a\u8fd4\u56de\u4e00\u4e2a\u4e0d\u662f<code>Object[]</code>\u7684\u6570\u7ec4\u3002</li> </ul>"},{"location":"SourceCode/Java/Collections/List/ArrayList/#_2","title":"\u5e38\u89c1\u7684\u65b9\u6cd5","text":""},{"location":"SourceCode/Java/Collections/List/ArrayList/#adde-e","title":"<code>add(E e)</code>","text":"<pre><code>public boolean add(E e){\n    // \u52a0\u5143\u7d20\u4e4b\u524d\uff0c\u5148\u8c03\u7528ensureCapacityInternal\u65b9\u6cd5\n    ensureCapacityInternal(size + 1);  // Increments modCount!!\n    // \u8fd9\u91cc\u770b\u5230ArrayList\u6dfb\u52a0\u5143\u7d20\u7684\u5b9e\u8d28\u5c31\u76f8\u5f53\u4e8e\u4e3a\u6570\u7ec4\u8d4b\u503c\n    elementData[size++] = e;\n    return true;\n}\n</code></pre> <ul> <li>\u8fd4\u56de\u503c : <code>boolean</code> , \u5982\u679c\u6dfb\u52a0\u6210\u529f\uff0c\u8fd4\u56de<code>true</code>\uff0c\u5426\u5219\u8fd4\u56de<code>false</code>\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\u5f88\u591a\u8fd9\u79cd\u65b9\u6cd5\u5176\u5b9e\u90fd\u662f\u6709\u8fd4\u56de\u503c\u7684\uff0c\u4e0d\u80fd\u5ffd\u7565\u3002</li> </ul> <p>\u8fd9\u91cc\u6709\u63d0\u5230\u4e00\u4e2a <code>ensureCapacityInternal()</code>\u65b9\u6cd5</p>"},{"location":"SourceCode/Java/Collections/List/ArrayList/#ensurecapacityinternalint-mincapacity","title":"<code>ensureCapacityInternal(int minCapacity)</code>","text":"<p><pre><code>// \u6839\u636e\u7ed9\u5b9a\u7684\u6700\u5c0f\u5bb9\u91cf\u548c\u5f53\u524d\u6570\u7ec4\u5143\u7d20\u6765\u8ba1\u7b97\u6240\u9700\u5bb9\u91cf\u3002\nprivate static int calculateCapacity(Object[] elementData, int minCapacity) {\n    // \u5982\u679c\u5f53\u524d\u6570\u7ec4\u5143\u7d20\u4e3a\u7a7a\u6570\u7ec4\uff08\u521d\u59cb\u60c5\u51b5\uff09\uff0c\u8fd4\u56de\u9ed8\u8ba4\u5bb9\u91cf\u548c\u6700\u5c0f\u5bb9\u91cf\u4e2d\u7684\u8f83\u5927\u503c\u4f5c\u4e3a\u6240\u9700\u5bb9\u91cf\n    if (elementData == DEFAULTCAPACITY_EMPTY_ELEMENTDATA) {\n        return Math.max(DEFAULT_CAPACITY, minCapacity);\n    }\n    // \u5426\u5219\u76f4\u63a5\u8fd4\u56de\u6700\u5c0f\u5bb9\u91cf\n    return minCapacity;\n}\n\n// \u786e\u4fdd\u5185\u90e8\u5bb9\u91cf\u8fbe\u5230\u6307\u5b9a\u7684\u6700\u5c0f\u5bb9\u91cf\u3002\nprivate void ensureCapacityInternal(int minCapacity) {\n    ensureExplicitCapacity(calculateCapacity(elementData, minCapacity));\n}\n\n//\u5224\u65ad\u662f\u5426\u9700\u8981\u6269\u5bb9\nprivate void ensureExplicitCapacity(int minCapacity) {\n    modCount++;\n    //\u5224\u65ad\u5f53\u524d\u6570\u7ec4\u5bb9\u91cf\u662f\u5426\u8db3\u4ee5\u5b58\u50a8minCapacity\u4e2a\u5143\u7d20\n    if (minCapacity - elementData.length &gt; 0)\n        //\u8c03\u7528grow\u65b9\u6cd5\u8fdb\u884c\u6269\u5bb9\n        grow(minCapacity);\n}\n</code></pre> \u7b80\u5355\u7684\u6765\u8bf4 <code>ensureCapacityInternal</code> \u65b9\u6cd5\u7684\u4f5c\u7528\u5c31\u662f\u5224\u65ad\u5f53\u524d\u6570\u7ec4\u7684\u5bb9\u91cf\u548c\u6211\u4eec\u5df2\u7ecf\u89c4\u5b9a\u7684\u9ed8\u8ba4\u5bb9\u91cf\u662f\u5426\u6709\u8d85\u51fa\uff0c\u5018\u82e5\u8d85\u51fa\u4e86\u7684\u8bdd\uff0c\u5c31\u4f1a\u8fdb\u884c\u6269\u5bb9<code>grow()</code>.</p>"},{"location":"SourceCode/Java/Collections/List/ArrayList/#_3","title":"\u5e38\u89c1\u95ee\u9898","text":""},{"location":"SourceCode/Java/Collections/List/ArrayList/#q1arraylist-vector","title":"Q1:<code>ArrayList</code> \u548c <code>Vector</code> \u7684\u533a\u522b","text":"<p>\u5176\u5b9e\u4e24\u8005\u90fd\u662f <code>List</code> \u7684\u5b9e\u73b0\u7c7b\uff0c\u4f46\u662f\u524d\u8005\u7ebf\u7a0b\u4e0d\u5b89\u5168\uff0c\u4f46\u662f\u540e\u8005\u7ebf\u7a0b\u5b89\u5168\u3002</p>"},{"location":"SourceCode/Java/Collections/List/ArrayList/#q2-arraylist-linkedlist","title":"Q2: <code>ArrayList</code> \u548c <code>LinkedList</code> \u7684\u533a\u522b","text":"<ul> <li> <p>\u662f\u5426\u4fdd\u8bc1\u7ebf\u7a0b\u5b89\u5168 ? </p> <p>\u4e8c\u8005\u90fd\u662f\u7ebf\u7a0b\u4e0d\u5b89\u5168\u7684\uff0c\u5982\u679c\u9700\u8981\u7ebf\u7a0b\u5b89\u5168\u7684\u8bdd\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>Vector</code> \u6216\u8005\u662f <code>Collections.synchronizedList</code> \u6765\u8fdb\u884c\u5305\u88c5\u3002</p> </li> <li> <p>\u5e95\u5c42\u7684\u6570\u636e\u7ed3\u6784 </p> <p><code>ArrayList</code> \u662f\u57fa\u4e8e\u6570\u7ec4\u5b9e\u73b0\u7684\uff0c\u6240\u4ee5\u5b83\u7684\u67e5\u8be2\u6548\u7387\u975e\u5e38\u7684\u9ad8\uff0c\u4f46\u662f\u63d2\u5165\u548c\u5220\u9664\u7684\u6548\u7387\u5c31\u6bd4\u8f83\u4f4e\u4e86\u3002<code>LinkedList</code> \u662f\u57fa\u4e8e\u53cc\u5411\u94fe\u8868\u5b9e\u73b0\u7684\uff0c\u6240\u4ee5\u5b83\u7684\u63d2\u5165\u548c\u5220\u9664\u7684\u6548\u7387\u975e\u5e38\u7684\u9ad8\uff0c\u4f46\u662f\u67e5\u8be2\u7684\u6548\u7387\u5c31\u6bd4\u8f83\u4f4e\u4e86\u3002</p> </li> <li> <p>\u63d2\u5165\u548c\u5220\u9664\u662f\u5426\u53d7\u5143\u7d20\u4f4d\u7f6e\u7684\u5f71\u54cd\uff1a</p> <p><code>ArrayList</code> \u91c7\u7528\u6570\u7ec4\u5b58\u50a8\uff0c\u6240\u4ee5\u63d2\u5165\u548c\u5220\u9664\u5143\u7d20\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u53d7\u5143\u7d20\u4f4d\u7f6e\u7684\u5f71\u54cd\u3002 \u6bd4\u5982\uff1a\u6267\u884c<code>add(E e)</code>\u65b9\u6cd5\u7684\u65f6\u5019\uff0c <code>ArrayList</code> \u4f1a\u9ed8\u8ba4\u5728\u5c06\u6307\u5b9a\u7684\u5143\u7d20\u8ffd\u52a0\u5230\u6b64\u5217\u8868\u7684\u672b\u5c3e\uff0c\u8fd9\u79cd\u60c5\u51b5\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u662f <code>O(1)</code>\u3002\u4f46\u662f\u5982\u679c\u8981\u5728\u6307\u5b9a\u4f4d\u7f6e <code>i</code> \u63d2\u5165\u548c\u5220\u9664\u5143\u7d20\u7684\u8bdd<code>\uff08add(int index, E element)\uff09</code>\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u4e3a <code>O(n)</code>\u3002\u56e0\u4e3a\u5728\u8fdb\u884c\u4e0a\u8ff0\u64cd\u4f5c\u7684\u65f6\u5019\u96c6\u5408\u4e2d\u7b2c <code>i</code> \u548c\u7b2c <code>i</code> \u4e2a\u5143\u7d20\u4e4b\u540e\u7684<code>(n-i)</code>\u4e2a\u5143\u7d20\u90fd\u8981\u6267\u884c\u5411\u540e\u4f4d/\u5411\u524d\u79fb\u4e00\u4f4d\u7684\u64cd\u4f5c\u3002</p> <p><code>LinkedList</code> \u91c7\u7528\u94fe\u8868\u5b58\u50a8\uff0c\u6240\u4ee5\u5728\u5934\u5c3e\u63d2\u5165\u6216\u8005\u5220\u9664\u5143\u7d20\u4e0d\u53d7\u5143\u7d20\u4f4d\u7f6e\u7684\u5f71\u54cd<code>\uff08add(E e)\u3001addFirst(E e)\u3001addLast(E e)\u3001removeFirst()\u3001 removeLast()\uff09</code>\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a <code>O(1)</code>\uff0c\u5982\u679c\u662f\u8981\u5728\u6307\u5b9a\u4f4d\u7f6e <code>i</code> \u63d2\u5165\u548c\u5220\u9664\u5143\u7d20\u7684\u8bdd<code>\uff08add(int index, E element)\uff0cremove(Object o),remove(int index)\uff09</code>\uff0c \u65f6\u95f4\u590d\u6742\u5ea6\u4e3a <code>O(n)</code> \uff0c\u56e0\u4e3a\u9700\u8981\u5148\u79fb\u52a8\u5230\u6307\u5b9a\u4f4d\u7f6e\u518d\u63d2\u5165\u548c\u5220\u9664\u3002</p> </li> </ul>"},{"location":"SourceCode/Java/Collections/List/ArrayList/#q3-arraylist-null","title":"Q3: <code>ArrayList</code> \u53ef\u4ee5\u5b58\u653e <code>null</code> \u5417\uff1f","text":"<p>\u53ef\u4ee5\u7684\uff0c\u56e0\u4e3a\u5b83\u662f\u4e00\u4e2a\u6cdb\u578b\u7c7b\uff0c\u6240\u4ee5\u53ef\u4ee5\u5b58\u653e\u4efb\u4f55\u7c7b\u578b\u7684\u6570\u636e\u3002</p>"},{"location":"SourceCode/Java/Collections/Map/HashMap/","title":"HashMap","text":"<p>HashMap \u4e3b\u8981\u7528\u6765\u5b58\u653e\u952e\u503c\u5bf9\uff0c\u5b83\u662f \u57fa\u4e8eHashMap\u7684\u63a5\u53e3\u5b9e\u73b0\uff0c\u5e38\u7528\u7684Java\u96c6\u5408\u4e4b\u4e00\uff0c\u4f46\u662f \u5b83\u662f\u975e\u7ebf\u7a0b\u5b89\u5168\u7684</p> <p>\u51e0\u4e2a\u9700\u8981\u6ce8\u610f\u7684\u70b9: </p> <ol> <li> <p><code>HashMap</code> \u53ef\u4ee5\u50a8\u5b58 <code>null</code> \u7684\u952e\uff0c\u4f46\u662f\u53ea\u80fd\u6709\u4e00\u4e2a\u3002<code>value</code> \u53ef\u4ee5\u6709\u591a\u4e2a\u4e3a <code>null</code> \u7684\u503c\u3002</p> </li> <li> <p><code>JDK1.8</code> \u4e4b\u524d\u7684 <code>HashMap</code> \u662f\u5229\u7528 <code>\u62c9\u94fe\u6cd5</code> \u6765\u89e3\u51b3\u54c8\u5e0c\u51b2\u7a81\u7684\uff0c<code>JDK1.8</code> \u4e4b\u540e\uff0c\u5f53\u94fe\u8868\u957f\u5ea6\u5927\u4e8e <code>8</code> \u7684\u65f6\u5019\uff0c\u4f1a\u8f6c\u6362\u6210\u7ea2\u9ed1\u6811\u3002 \u4e5f\u5c31\u662f\u8bf4\u4e3b\u4f53\u8fd8\u662f\u6570\u7ec4\uff0c\u56e0\u4e3a\u6570\u7ec4\u662f\u67e5\u8be2\u6548\u7387\u6700\u9ad8\u7684\uff0c\u4f46\u662f\u5982\u679c\u9047\u5230\u4e86\u54c8\u5e0c\u51b2\u7a81\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5c31\u4f1a\u9009\u62e9\u5229\u7528\u94fe\u8868\u6216\u8005\u662f\u7ea2\u9ed1\u6811\u6765\u89e3\u51b3\u3002</p> </li> </ol>"},{"location":"SourceCode/Java/Collections/Map/HashMap/#hashmap_1","title":"HashMap\u4e2d\u7684\u51e0\u4e2a\u5e38\u89c1\u7684\u65b9\u6cd5","text":"<ol> <li><code>put</code> \u65b9\u6cd5</li> <li><code>get</code> \u65b9\u6cd5</li> <li><code>resize</code> \u65b9\u6cd5</li> </ol>"},{"location":"Tech/Concurrency/Concurrency/","title":"\u5e76\u53d1\u7f16\u7a0b","text":"<p>\u6211\u4eec\u4ee5 <code>Java</code> \u8bed\u8a00\u4e3a\u4f8b\uff0c\u6765\u8bb2\u89e3\u4e00\u4e0b\u5e76\u53d1\u7f16\u7a0b\u7684\u57fa\u7840\u77e5\u8bc6\u3002</p> <p>JUC \u7f16\u7a0b <code>Java.util.concurrent</code> \u5305\u7684\u7f29\u5199</p>"},{"location":"Tech/Concurrency/Concurrency/#q1","title":"Q1 : \u5982\u4f55\u63a7\u5236\u7ebf\u7a0b\u7684\u6267\u884c\u987a\u5e8f\uff1f","text":"<p>\u6211\u4eec\u4e0b\u9762\u4ee5\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u6765\u8bf4\u660e\u4e00\u4e0b</p> <p><pre><code>// thread A \nThread t1 = new Thread(()-&gt;{\n    System.out.println(\"A\");\n})\n\n// thread B\nThread t2 = new Thread(()-&gt;{\n    System.out.println(\"B\");\n})\n\n// thread C\nThread t3 = new Thread(()-&gt;{\n    System.out.println(\"C\");\n})\n</code></pre> \u65f6\u95f4\u7247\u662f\u8f6e\u6362\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u65e0\u6cd5\u63a7\u5236\u7ebf\u7a0b\u7684\u6267\u884c\u987a\u5e8f\uff0c\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e9b\u65b9\u6cd5\u6765\u63a7\u5236\u7ebf\u7a0b\u7684\u6267\u884c\u987a\u5e8f\u3002</p> <p>\u6211\u4eec\u5148\u4e86\u89e3\u4e00\u4e0b\u4e09\u4e2a\u5de5\u5177\u6765\u8fdb\u884c\u7ebf\u7a0b\u7684\u63a7\u5236\uff1a</p> <ul> <li><code>Semaphore</code> : \u4fe1\u53f7\u91cf\uff0c\u7528\u6765\u63a7\u5236\u540c\u65f6\u8bbf\u95ee\u7279\u5b9a\u8d44\u6e90\u7684\u7ebf\u7a0b\u6570\u91cf</li> <li><code>CountDownLatch</code> : \u95ed\u9501\uff0c\u7528\u6765\u7b49\u5f85\u5176\u4ed6\u7ebf\u7a0b\u5b8c\u6210 3,2,1 \u8dd1</li> <li><code>CyclicBarrier</code> : \u6805\u680f\uff0c\u7528\u6765\u7b49\u5f85\u5176\u4ed6\u7ebf\u7a0b\u5b8c\u6210\uff0c\u7136\u540e\u518d\u4e00\u8d77\u6267\u884c</li> </ul>"},{"location":"Tech/Concurrency/Concurrency/#semaphore","title":"Semaphore \u4fe1\u53f7\u91cf","text":"<p>\u7528\u4e8e\u9650\u5236\u8d44\u6e90\u7684\u8bbf\u95ee\u6570\u91cf\uff0c\u53ef\u4ee5\u7528\u6765\u63a7\u5236\u540c\u65f6\u8bbf\u95ee\u67d0\u4e2a\u8d44\u6e90\u7684\u7ebf\u7a0b\u6570\u91cf\uff0c\u4f8b\u5982\u9650\u5236\u67d0\u4e2a\u670d\u52a1\u7684\u6700\u5927\u5e76\u53d1\u8bf7\u6c42\u6b21\u6570\u3002</p> <p>\u4e24\u4e2a\u5e38\u7528\u7684\u65b9\u6cd5: </p> <ul> <li><code>acquire</code> : \u83b7\u53d6\u4e00\u4e2a\u8bb8\u53ef</li> <li><code>release</code> : \u91ca\u653e\u4e00\u4e2a\u8bb8\u53ef</li> </ul> <p>\u5bf9\u4e8e <code>Semaphore</code> \u6765\u8bf4\uff0c\u6211\u4eec\u5b9a\u4e49\u4fe1\u53f7\u91cf\u6570\u76ee <code>permits</code> \u8868\u793a\u7684\u662f\u53ef\u4ee5\u6700\u5927\u8bbf\u95ee\u7684\u7ebf\u7a0b\u6570\u76ee\u3002</p> <pre><code>import java.util.concurrent.Semaphore;\n\npublic class SemaphoreExample {\n    public static void main(String[] args) {\n        // \u521b\u5efa\u4e00\u4e2a\u4fe1\u53f7\u91cf\uff0c\u6700\u591a\u5141\u8bb83\u4e2a\u7ebf\u7a0b\u540c\u65f6\u8bbf\u95ee\n        Semaphore semaphore = new Semaphore(3);\n\n        // \u6a21\u62df\u591a\u4e2a\u7ebf\u7a0b\n        for (int i = 1; i &lt;= 10; i++) {\n            new Thread(() -&gt; {\n                try {\n                    System.out.println(Thread.currentThread().getName() + \" \u5c1d\u8bd5\u83b7\u53d6\u8bb8\u53ef...\");\n                    semaphore.acquire(); // \u83b7\u53d6\u8bb8\u53ef\n                    System.out.println(Thread.currentThread().getName() + \" \u83b7\u53d6\u8bb8\u53ef\uff0c\u5f00\u59cb\u6267\u884c\u4efb\u52a1\");\n                    Thread.sleep(2000); // \u6a21\u62df\u4efb\u52a1\u6267\u884c\n                } catch (InterruptedException e) {\n                    e.printStackTrace();\n                } finally {\n                    System.out.println(Thread.currentThread().getName() + \" \u91ca\u653e\u8bb8\u53ef\");\n                    semaphore.release(); // \u91ca\u653e\u8bb8\u53ef\n                }\n            }, \"\u7ebf\u7a0b-\" + i).start();\n        }\n    }\n}\n</code></pre>"},{"location":"Tech/Concurrency/Concurrency/#countdownlatch","title":"CountDownLatch \u95ed\u9501","text":"<p>\u7528\u4e8e\u7b49\u5f85\u5176\u4ed6\u7ebf\u7a0b\u5b8c\u6210\uff0c\u4f8b\u5982\u4e3b\u7ebf\u7a0b\u7b49\u5f85\u5176\u4ed6\u7ebf\u7a0b\u5b8c\u6210\u540e\u518d\u6267\u884c\u3002 \u4e5f\u5c31\u662f\u8bf4 <code>CountDownLatch</code> \u5141\u8bb8\u591a\u4e2a\u7ebf\u7a0b\u7b49\u5f85\u5176\u4ed6\u7ebf\u7a0b\u5b8c\u6210\u64cd\u4f5c\u4e4b\u540e\u518d\u8fdb\u884c\u3002</p> <p>\u4e24\u4e2a\u5173\u952e\u7684\u65b9\u6cd5:</p> <ul> <li><code>countDown()</code> : \u51cf\u5c11\u8ba1\u6570\u5668\u7684\u503c</li> <li><code>await()</code> : \u7b49\u5f85\u8ba1\u6570\u5668\u7684\u503c\u4e3a0</li> </ul> <p>\u540c\u65f6\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u5f88\u81ea\u7136\u7684\u77e5\u9053\uff0c\u8fd9\u4e2a\u95ed\u9501\u7684\u4f7f\u7528\u662f\u4e00\u6b21\u6027\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u4e00\u65e6\u8ba1\u6570\u5668\u4e3a0\uff0c\u90a3\u4e48\u5c31\u4e0d\u80fd\u518d\u6b21\u4f7f\u7528\u4e86\u3002</p> <pre><code>import java.util.concurrent.CountDownLatch;\n\npublic class CountDownLatchExample {\n    public static void main(String[] args) throws InterruptedException {\n        // \u521b\u5efa CountDownLatch\uff0c\u8ba1\u6570\u5668\u521d\u59cb\u503c\u4e3a3\n        CountDownLatch latch = new CountDownLatch(3);\n\n        // \u6a21\u62df\u4e09\u4e2a\u5b50\u4efb\u52a1\n        for (int i = 1; i &lt;= 3; i++) {\n            new Thread(() -&gt; {\n                System.out.println(Thread.currentThread().getName() + \" \u6b63\u5728\u6267\u884c\u4efb\u52a1...\");\n                try {\n                    Thread.sleep(2000); // \u6a21\u62df\u4efb\u52a1\u8017\u65f6\n                } catch (InterruptedException e) {\n                    e.printStackTrace();\n                }\n                System.out.println(Thread.currentThread().getName() + \" \u5b8c\u6210\u4efb\u52a1\");\n                latch.countDown(); // \u4efb\u52a1\u5b8c\u6210\u540e\u8ba1\u6570\u5668\u51cf\u4e00\n            }, \"\u5b50\u4efb\u52a1-\" + i).start();\n        }\n\n        System.out.println(\"\u4e3b\u7ebf\u7a0b\u7b49\u5f85\u6240\u6709\u5b50\u4efb\u52a1\u5b8c\u6210...\");\n        latch.await(); // \u7b49\u5f85\u8ba1\u6570\u5668\u5f52\u96f6\n        System.out.println(\"\u6240\u6709\u5b50\u4efb\u52a1\u5b8c\u6210\uff0c\u4e3b\u7ebf\u7a0b\u7ee7\u7eed\u6267\u884c\");\n    }\n}\n</code></pre> <p>\u4e0a\u9762\u8fd9\u4e2a\u4ee3\u7801\u6bb5\u7684\u903b\u8f91\u4e5f\u5f88\u6e05\u6670\uff0c\u4e5f\u5c31\u662f\u8bf4\u8ba9\u4e3b\u7ebf\u7a0b\u7b49\u5f85\u5176\u4ed6\u7684\u7ebf\u7a0b\u8fd0\u884c\u5b8c\u6bd5\u4e4b\u540e\u518d\u8fdb\u884c\u3002</p>"},{"location":"Tech/Concurrency/Concurrency/#cyclicbarrier","title":"CyclicBarrier \u6805\u680f","text":"<p>\u5c31\u50cf\u662f\u5b57\u9762\u610f\u601d\u4e00\u6837\uff0c\u5faa\u73af\u6805\u680f\u7684\u76ee\u7684\u5c31\u662f,\u5141\u8bb8\u4e00\u7ec4\u7ebf\u7a0b\u4e92\u76f8\u7b49\u5f85\uff0c\u76f4\u5230\u6240\u6709\u7684\u7ebf\u7a0b\u90fd\u8fbe\u5230\u67d0\u4e2a\u5171\u540c\u70b9\u7684\uff0c\u53ef\u4ee5\u9009\u62e9\u6267\u884c\u4e00\u4e2a\u53ef\u9009\u7684\u56de\u8c03\u4efb\u52a1(\u7531<code>Runnable</code>\u5b9e\u73b0)\u3002</p> <p>\u4e00\u4e2a\u5173\u952e\u7684\u65b9\u6cd5:</p> <ul> <li><code>await()</code> \u8ba9\u7ebf\u7a0b\u7b49\u5f85\uff0c\u77e5\u9053\u6240\u6709\u7684\u7ebf\u7a0b\u90fd\u8c03\u7528\u4e86\u8be5\u65b9\u6cd5\u3002</li> <li>\u53ef\u9009\u7684\u56de\u8c03\u51fd\u6570</li> </ul> <pre><code>import java.util.concurrent.BrokenBarrierException;\nimport java.util.concurrent.CyclicBarrier;\n\npublic class CyclicBarrierExample {\n    public static void main(String[] args) {\n        // \u521b\u5efa CyclicBarrier\uff0c\u8bbe\u7f6e\u6805\u680f\u70b9\u4e3a3\uff0c\u6307\u5b9a\u4e00\u4e2a\u56de\u8c03\u4efb\u52a1\n        CyclicBarrier barrier = new CyclicBarrier(3, () -&gt; {\n            System.out.println(\"\u6240\u6709\u7ebf\u7a0b\u5df2\u5230\u8fbe\u6805\u680f\uff0c\u6267\u884c\u7edf\u4e00\u4efb\u52a1...\");\n        });\n\n        // \u6a21\u62df\u4e09\u4e2a\u7ebf\u7a0b\n        for (int i = 1; i &lt;= 3; i++) {\n            new Thread(() -&gt; {\n                try {\n                    System.out.println(Thread.currentThread().getName() + \" \u6b63\u5728\u6267\u884c\u7b2c\u4e00\u9636\u6bb5\u4efb\u52a1...\");\n                    Thread.sleep(2000); // \u6a21\u62df\u7b2c\u4e00\u9636\u6bb5\u4efb\u52a1\u8017\u65f6\n                    System.out.println(Thread.currentThread().getName() + \" \u5b8c\u6210\u7b2c\u4e00\u9636\u6bb5\u4efb\u52a1\uff0c\u7b49\u5f85\u5176\u4ed6\u7ebf\u7a0b...\");\n                    barrier.await(); // \u7b49\u5f85\u5176\u4ed6\u7ebf\u7a0b\u5230\u8fbe\u6805\u680f\u70b9\n                    System.out.println(Thread.currentThread().getName() + \" \u5f00\u59cb\u6267\u884c\u7b2c\u4e8c\u9636\u6bb5\u4efb\u52a1...\");\n                } catch (InterruptedException | BrokenBarrierException e) {\n                    e.printStackTrace();\n                }\n            }, \"\u7ebf\u7a0b-\" + i).start();\n        }\n    }\n}\n</code></pre> <ul> <li>\u4e09\u4e2a\u7ebf\u7a0b\u4ea4\u66ff\u8fdb\u884c </li> </ul> <p>\u6211\u4eec\u5f88\u81ea\u7136\u7684\u7b2c\u4e00\u4e2a\u601d\u8def\u5c31\u662f\u5982\u4e0b\u4ee3\u7801\u6240\u793a\uff0c\u4f46\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u4e2a\u4ee3\u7801\u662f\u65e0\u6cd5\u4fdd\u8bc1\u4e09\u4e2a\u7ebf\u7a0b\u7684\u6267\u884c\u987a\u5e8f\u7684\u3002\u56e0\u4e3a \u6211\u4eec\u8981\u8003\u8651\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u7684\u65f6\u95f4\u7247\u3002</p> <pre><code>t1.start();\nt2.start();\nt3.start();\n</code></pre> <p>\u5982\u679c\u8fd9\u6837\u4e0d\u884c\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u8003\u8651\u4fe1\u53f7\u91cf <code>semaphore</code> ,\u53e6\u4e00\u4e2a\u5f88\u81ea\u7136\u7684\u60f3\u6cd5\u662f\u6211\u4eec\u8bbe\u7f6e\u4e00\u4e2a\u4fe1\u53f7\u91cf\u7531\u4e09\u4e2a\u4eba\u4e00\u8d77\u5171\u4eab\u3002\u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u63a7\u5236\u4e09\u4e2a\u7ebf\u7a0b\u7684\u6267\u884c\u987a\u5e8f\uff0c\u4f46\u662f\u6211\u4eec\u53c8\u5982\u4f55\u63a7\u5236\u4ed6\u4eec\u7684\u987a\u5e8f\u5462\uff1f\u53c8\u600e\u4e48\u6765\u4fdd\u8bc1\u4ed6\u4eec\u53ef\u4ee5\u4ea4\u66ff\u7684\u8fdb\u884c\u5462\uff1f</p> <p>\u6240\u4ee5\u53e6\u4e00\u4e2a\u5f88\u81ea\u7136\u7684\u60f3\u6cd5\u5c31\u662f\uff0c\u6211\u4eec\u53ef\u4ee5\u8bbe\u7f6e\u4e09\u4e2a\u4fe1\u53f7\u91cf\uff0c\u7531\u4e09\u4e2a\u7ebf\u7a0b\u5171\u4eab\uff0c\u8fd9\u6837\u5b50\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u4e09\u4e2a\u7ebf\u7a0b\u7684\u4ea4\u66ff\u8fdb\u884c\u4e86\u3002</p> <pre><code>public static void main(){\n    int size = 3;\n    Semaphore semaphore1 = new Semaphore(1);\n    Semaphore semaphore2 = new Semaphore(1);\n    Semaphore semaphore3 = new Semaphore(1);\n\n    // The task which we want to implement is that we want to print A,B,C in order\n\n    try{\n        // \u6211\u4eec\u5148\u8ba9\u4e0b\u4e00\u4e2a\u8981\u8f6e\u5230\u7684\u7ebf\u7a0b\u5148\u5f97\u5230\u4e86\u4e24\u628a\u9501\n        semaphore2.acquire();\n        semaphore3.acquire();\n    }catch(InterruptedException e){\n        e.printStackTrace();\n    }\n\n    new Thread(()-&gt;{\n        while(true){\n            try{\n                semaphore1.acquire();\n                // \u6b64\u65f6\u6211\u4eec\u6253\u5370A\u7ebf\u7a0b\u7684\u5185\u5bb9\u5df2\u7ecf\u62e5\u6709\u4e86\u4e09\u4e2a\u4fe1\u53f7\u91cf\u4e86.\n            }catch(InterruptedException e){\n                e.printStackTrace();\n            }\n            try{\n                Thread.sleep(100);\n            }catch(Exception e){\n                e.printStackTrace();\n            }\n            System.out.println(\"A\");\n            // \u653e\u5f00\u7b2c\u4e8c\u4e2a\u4fe1\u53f7\u91cf;\n            semaphore2.release();\n        }\n    }).start();\n\n    // print B ;\n    new Thread(()-&gt;{\n        while(true){\n            try{\n                // \u56e0\u4e3a\u6b64\u65f6 \u7ebf\u7a0bA \u5df2\u7ecf\u653e\u51fa\u4e86\u4fe1\u53f7\u91cfsemaphore2\u7684\u4fe1\u53f7\u91cf;\n                semaphore2.acquire();\n                // \u6b64\u65f6\u6211\u4eec\u6253\u5370A\u7ebf\u7a0b\u7684\u5185\u5bb9\u5df2\u7ecf\u62e5\u6709\u4e86\u4e09\u4e2a\u4fe1\u53f7\u91cf\u4e86.\n            }catch(InterruptedException e){\n                e.printStackTrace();\n            }\n            try{\n                Thread.sleep(100);\n            }catch(Exception e){\n                e.printStackTrace();\n            }\n            System.out.println(\"B\");\n            // \u653e\u5f00\u7b2c\u4e8c\u4e2a\u4fe1\u53f7\u91cf;\n            semaphore3.release();\n        }\n    }).start();\n\n    // print C;\n    new Thread(()-&gt;{\n        while(true){\n            try{\n                semaphore3.acquire();\n                // \u6b64\u65f6\u6211\u4eec\u6253\u5370A\u7ebf\u7a0b\u7684\u5185\u5bb9\u5df2\u7ecf\u62e5\u6709\u4e86\u4e09\u4e2a\u4fe1\u53f7\u91cf\u4e86.\n            }catch(InterruptedException e){\n                e.printStackTrace();\n            }\n            try{\n                Thread.sleep(100);\n            }catch(Exception e){\n                e.printStackTrace();\n            }\n            System.out.println(\"C\");\n            // \u653e\u5f00\u7b2c\u4e8c\u4e2a\u4fe1\u53f7\u91cf;\n            semaphore1.release();\n        }\n    }).start();\n}\n</code></pre> <p>\u4ee5\u4e0a\u7684\u4ee3\u7801\u5c31\u53ef\u4ee5\u63a7\u5236\u4e09\u4e2a\u6253\u5370\u4ea4\u66ff\u8fdb\u884c\uff1b</p> <ul> <li>\u4e09\u4e2a\u7ebf\u7a0b\u6309\u7167\u987a\u5e8f\u8fdb\u884c</li> </ul> <p>\u6211\u4eec\u8fd9\u91cc\u7684\u601d\u8def\u5c31\u53ef\u4ee5\u8ddf\u4e0a\u9762\u7c7b\u4f3c\uff0c\u4f46\u662f\u4e0d\u4e00\u6837\u7684\u662f\u6211\u4eec\u5229\u7528<code>volatile</code>\u5173\u952e\u5b57\u6765\u8fdb\u884c\u63a7\u5236\u3002\u8ba9\u4e09\u4e2a\u7ebf\u7a0b\u540c\u65f6\u53ef\u89c1</p> <pre><code>public static void main(){\n    int size = 3;\n    volatile int flag = 1;\n\n    new Thread(()-&gt;{\n        while(true){\n            if(flag == 1){\n                System.out.println(\"A\");\n                flag = 2;\n            }\n        }\n    }).start();\n\n    new Thread(()-&gt;{\n        while(true){\n            if(flag == 2){\n                System.out.println(\"B\");\n                flag = 3;\n            }\n        }\n    }).start();\n\n    new Thread(()-&gt;{\n        while(true){\n            if(flag == 3){\n                System.out.println(\"C\");\n                flag = 1;\n            }\n        }\n    }).start();\n}\n</code></pre> <p>\u8fd9\u6837\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u4e09\u4e2a\u7ebf\u7a0b\u6309\u7167\u987a\u5e8f\u8fdb\u884c\u4e86\u3002\u540c\u65f6\u53ea\u4f1a\u8fdb\u884c\u4e00\u6b21\u3002\u4e0d\u4f1a\u50cf\u4e0a\u9762\u7684\u4ee3\u7801\u4e00\u6837\u4e00\u76f4\u8fdb\u884c\u4e0b\u53bb\u3002</p> <ul> <li>\u5982\u4f55\u8ba9\u4e09\u4e2a\u7ebf\u7a0b\u540c\u65f6\u8fdb\u884c</li> </ul> <p>\u6211\u4eec\u8fd9\u91cc\u5c31\u8981\u9009\u62e9 <code>CountDownLatch</code> \u6765\u8fdb\u884c\u63a7\u5236\u4e09\u4e2a\u7ebf\u7a0b\u3002\u56e0\u4e3a<code>CountDownLatch</code>\u7684\u4f5c\u7528\u5c31\u662f\u5012\u8ba1\u65f6\u7ebf\u7a0b\uff0c\u4e00\u65e6\u53d1\u4ee4\u67aa\u54cd\u4e86 <code>countDown == 0</code> \u7684\u65f6\u5019\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u8ba9\u4e09\u4e2a\u7ebf\u7a0b\u540c\u65f6\u8fdb\u884c\u3002</p> <pre><code>```java\npublic static void main(){\n    int size = 3;\n    CountDownLatch latch = new CountDownLatch(1);\n\n    for(int i=0;i&lt;size;i++){\n        try{\n            // Here we wait for the latch to be 0\n            // Once the latch is 0,then we can start the thread\n            countDownLatch.await();\n            System.out.println(\"System.currentTimeMillis()\");\n        }catch(InterruptedException e){ \n            e.printStackTrace();\n        }\n    }\n    // simulate the process \n    Thread.sleep(100);\n    countDownLatch.countDown();\n}\n```\n</code></pre> <p>\u4f46\u662f\uff0c\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\u7684\u662f <code>CountDownLatch</code> \u662f\u4e0d\u80fd\u590d\u7528\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u81ea\u5df1\u5b9e\u73b0\u53ef\u4ee5\u590d\u7528\u7684 <code>CountDownLatch</code>\u3002-&gt;\u6e90\u7801\u5728<code>RocketMQ</code>\u4e2d\u3002\u4e5f\u5c31\u662f\u8bf4\u662f\u652f\u6301 <code>reset</code>\u7684\uff0c\u5c31\u4e0d\u7528\u6bcf\u6b21\u90fd\u91cd\u65b0\u521b\u5efa\u4e00\u4e2a<code>CountDownLatch</code>\u4e86\u3002</p> <p>\u5177\u4f53\u7684\u7ec6\u8282</p>"},{"location":"Tech/Concurrency/Lock/","title":"\u9501","text":"<p>\u6211\u4eec\u77e5\u9053\uff0c\u5728 Java \u7684\u5904\u7406\u9ad8\u5e76\u53d1\u7684\u65f6\u5019\uff0c\u672c\u8d28\u5c31\u662f\u5bf9\u4e8e\u7ade\u4e89\u8d44\u6e90\u8fdb\u884c\u52a0\u9501\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u8d44\u6e90\u7684\u5b89\u5168\u6027\u3002\u6211\u4eec\u4e0b\u9762\u6765\u770b\u4e00\u4e0b Java \u4e2d\u7684\u9501\u3002</p> <p>\u9996\u5148\uff0c\u6211\u4eec\u77e5\u9053\u5bf9\u4e8e\u9ad8\u5e76\u53d1\u7684\u65f6\u5019\uff0c\u901a\u5e38\u4f1a\u9009\u62e9\u52a0\u9501\u7684\u65b9\u5f0f\u3002\u800c\u5728<code>Java</code>\u4e2d\u7684\u52a0\u9501\u65b9\u5f0f\u4e00\u822c\u6709\u4e24\u79cd:</p> <ul> <li> <p>\u4f7f\u7528 <code>Synchornized</code> \u5173\u952e\u5b57\uff0c\u5bf9\u67d0\u5bf9\u8c61\u8fdb\u884c\u540c\u6b65\u9501\u4fdd\u62a4\uff0c\u59cb\u7ec8\u4fdd\u6301\u53ea\u6709\u4e00\u4e2a\u7ebf\u7a0b\u5728\u6267\u884c\u3002</p> </li> <li> <p>\u4f7f\u7528 <code>JDK</code> \u7684 <code>Lock</code> \u63a5\u53e3\uff0c\u5b83\u63d0\u4f9b\u4e86\u66f4\u591a\u7684\u65b9\u6cd5\u6765\u63a7\u5236\u7ebf\u7a0b\u7684\u540c\u6b65\u3002\u8fd9\u4e2a\u7ae0\u8282\u6211\u4eec\u5c31\u8be6\u7ec6\u7684\u8fdb\u884c <code>Lock</code> \u63a5\u53e3\u7684\u5206\u6790\u4e0e\u5b66\u4e60\u3002</p> </li> </ul>"},{"location":"Tech/Concurrency/Lock/#introduce","title":"Introduce","text":""},{"location":"Tech/Concurrency/Lock/#lock","title":"Lock \u63a5\u53e3","text":"<p>\u81ea Java SE 5\u4e4b\u540e\uff0c\u51fa\u73b0\u4e86\u8fd9\u4e2a <code>Lock</code> \u63a5\u53e3</p> <p><pre><code>// \u4e00\u4e2a\u5173\u4e8e Lock \u7684\u7b80\u5355\u4f8b\u5b50\nLock lock = new ReentrantLock();\nlock.lock();\ntry {\n    // do something\n} finally {\n    lock.unlock();\n}\n</code></pre> \u51e0\u4e2a\u6ce8\u610f\u4e8b\u9879 :</p> <ul> <li>\u4e0d\u8981\u5c06\u83b7\u53d6\u9501\u7684\u8fc7\u7a0b\u653e\u5728 <code>try</code> \u7684\u4ee3\u7801\u5757\u4e2d\uff0c\u56e0\u4e3a\u5982\u679c\u5728\u83b7\u53d6\u9501\u7684\u65f6\u5019\u51fa\u73b0\u5f02\u5e38\uff0c\u90a3\u4e48\u5c31\u65e0\u6cd5\u91ca\u653e\u9501\u4e86\u3002</li> <li>\u4e00\u5b9a\u8981\u5728 <code>finally</code> \u4ee3\u7801\u5757\u4e2d\u91ca\u653e\u9501\uff0c\u5426\u5219\u4f1a\u5bfc\u81f4\u6b7b\u9501\u3002<code>finally</code> \u5b50\u53e5\u7684\u76ee\u7684\u5c31\u662f\u8fdb\u884c\u91ca\u653e\u8d44\u6e90\u7684\u64cd\u4f5c\u3002</li> </ul>"},{"location":"Tech/Concurrency/Lock/#lock_1","title":"Lock \u63a5\u53e3\u7684\u7279\u6027","text":"<p>Lock \u63a5\u53e3\u63d0\u4f9b\u7684\uff0c\u4f46\u662f<code>Syncronized</code> \u4e0d\u5177\u5907\u7684\u7279\u6027</p> <p></p> <p>\u5176\u4ed6\u4e24\u4e2a\u90fd\u6bd4\u8f83\u597d\u7406\u89e3\uff0c\u4f46\u662f\u6211\u4eec\u7684\u7b2c\u4e00\u70b9\u7279\u522b\u8bf4\u660e\u4e00\u4e0b:</p> <pre><code>    Lock lock = new ReentrantLock();\n    // \u5c1d\u8bd5\u83b7\u53d6\u9501\uff0c\u5982\u679c\u83b7\u53d6\u4e0d\u5230\uff0c\u5c31\u8fd4\u56de false;\n    lock.tryLock();\n</code></pre> <p>\u6211\u4eec\u770b\u4e0a\u9762\u7684\u4ee3\u7801\u3002\u6709\u4e00\u4e2a <code>tryLock</code>\u7684\u65b9\u6cd5\uff0c\u5982\u679c\u6211\u4eec\u5c1d\u8bd5\u83b7\u53d6\u9501\uff0c\u4f46\u662f\u8fd9\u4e2a\u9501\u4ecd\u65e7\u672a\u88ab\u91ca\u653e\uff0c\u5219\u8bf4\u660e\u8fd9\u4e2a\u9501\u5df2\u7ecf\u88ab\u5176\u4ed6\u7ebf\u7a0b\u5360\u7528\u4e86\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u8fd4\u56de <code>false</code>\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u907f\u514d\u4e00\u76f4\u7b49\u5f85\u9501\u7684\u91ca\u653e\u3002\u4f46\u662f\u5982\u679c\u662f <code>Syncronized</code> \u7684\u8bdd\uff0c\u6211\u4eec\u5c31\u53ea\u80fd\u4e00\u76f4\u7b49\u5f85\u9501\u7684\u91ca\u653e\u3002\u4e5f\u5c31\u662f\u8fdb\u5165\u4e86 \u963b\u585e\u72b6\u6001 </p>"},{"location":"Tech/Concurrency/Lock/#lock-apimethod","title":"Lock API/Method","text":"<p>\u4e0b\u9762\u7684\u56fe\u4e2d\u4e3a\u4ecb\u7ecd\u7684 <code>Lock</code> \u63a5\u53e3\u7684\u4e00\u4e9b\u65b9\u6cd5 </p> <p>\u5176\u5b9e\u4e5f\u5c31\u662f\u6211\u4eec\u4e0a\u8ff0\u7684\u4e00\u4e9b<code>Lock</code>\u65b0\u52a0\u7684\u7279\u6027\u5bf9\u5e94\u7684\u65b9\u6cd5\u3002\u6bd4\u8f83\u901a\u4fd7\u6613\u61c2\uff0c\u4e3b\u8981\u5c31\u662f\u5176\u4e2d\u7684\u6709\u4e2a\u65b9\u6cd5 <code>void lockInterruptibly()</code>\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u662f\u53ef\u4ee5\u4e2d\u65ad\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u5982\u679c\u5728\u7b49\u5f85\u9501\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u88ab\u4e2d\u65ad\u3002\u6211\u4eec\u4f1a\u83b7\u53d6\u5230\u4e00\u4e2a\u5f02\u5e38\uff0c\u7136\u540e\u91ca\u653e\u9501\u3002</p>"},{"location":"Tech/Concurrency/Lock/#_2","title":"\u4e8c\u8005\u7684\u5bf9\u6bd4","text":"<p>\u4e8c\u8005\u90fd\u662f\u4e3a\u4e86\u5728\u591a\u7ebf\u7a0b\u8bbf\u95ee\u8d44\u6e90\u7684\u65f6\u5019\u4fdd\u8bc1\u8d44\u6e90\u7684\u5b89\u5168\u6027\uff0c\u4f46\u662f\u5728\u4f7f\u7528\u4e0a\u6709\u4e00\u4e9b\u533a\u522b:</p> <p>\u867d\u7136 <code>Lock</code> \u63a5\u53e3\u7f3a\u5c11\u4e86<code>Syncronized</code> \u9690\u5f0f\u83b7\u53d6\u91ca\u653e\u9501\u7684\u4fbf\u6377\u6027\uff0c\u4f46\u662f\u5374\u62e5\u6709\u4e86\u9501\u83b7\u53d6\u4e0e\u91ca\u653e\u7684\u53ef\u64cd\u4f5c\u6027\uff0c\u53ef\u4e2d\u65ad\u6027\uff0c\u4ee5\u53ca\u8d85\u65f6\u83b7\u53d6\u9501\u591a\u79cd\u529f\u80fd\u3002</p> <p>\u4e00\u4e2a\u7b80\u5355\u7684\u7c7b\u6bd4\uff0cC \u5bb6\u65cf\u8bed\u8a00\u548c Java \u6709\u5f88\u5927\u533a\u522b\uff0c\u5c31\u662f\u540e\u8005\u5bf9\u4e8e\u5185\u5b58\u662f\u81ea\u52a8\u7ba1\u7406\u7684\uff0c\u4f46\u662f\u524d\u8005\u9700\u8981\u624b\u52a8\u7ba1\u7406\u3002\u6211\u4eec\u8fd9\u91cc\u4e24\u79cd\u9501\u5176\u5b9e\u4e5f\u662f\u4e00\u6837\u7684\u3002\u4f46\u662f\u867d\u7136\u5b9e\u73b0<code>Lock</code>\u63a5\u53e3\uff0c\u6211\u4eec\u5bf9\u4e8e\u9501\u7684\u53ef\u64cd\u4f5c\u6027\u66f4\u5927\uff0c\u66f4\u52a0\u7075\u6d3b\u3002\u53ef\u4ee5\u7406\u89e3\u4e3a\u5177\u6709\u66f4\u591a\u7684\u4e3b\u52a8\u6743\u3002</p> <p>\u5728\u53c2\u8003\u4e66\u4e2d\u6709\u8fd9\u6837\u4e00\u53e5\u8bdd\u6bd4\u8f83\u5173\u952e Lock\u63a5\u53e3\u7684\u5b9e\u73b0\uff0c\u57fa\u672c\u90fd\u662f\u901a\u8fc7\u805a\u5408\u4e86\u4e00\u4e2a\u540c\u6b65\u5668\u7684\u5b50\u7c7b\u6765\u5b8c\u6210\u7ebf\u7a0b\u8bbf\u95ee\u7684\u63a7\u5236</p>"},{"location":"Tech/Concurrency/Lock/#_3","title":"\u961f\u5217\u540c\u6b65\u5668","text":"<p><code>AbstractQueuedSynchronizer</code> \u4e0b\u8ff0\u540c\u6b65\u5668</p> <p>\u7b80\u8ff0\u4e00\u4e0b\u5c31\u662f\u8fd9\u4e2a\u540c\u6b65\u5668\u7684\u5185\u90e8\u662f\u5229\u7528 <code>int</code> \u53d8\u91cf\u6765\u8bb0\u5f55\u540c\u6b65\u72b6\u6001\uff0c\u901a\u8fc7\u5185\u7f6e\u7684 <code>FIFO</code> \u961f\u5217\u6765\u5b8c\u6210\u8d44\u6e90\u7684\u83b7\u53d6\u7ebf\u7a0b\u7684\u6392\u961f\u5de5\u4f5c\u3002\u7b80\u5355\u7684\u6765\u8bf4\u5c31\u662f\u901a\u8fc7\u961f\u5217\u6765\u5b9e\u73b0\u7ebf\u7a0b\u7684\u6392\u961f\u3002 \u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528\u7684\u662f\u53cc\u5411\u961f\u5217</p> <p></p> <pre><code>// 3 \u4e2a\u57fa\u672c\u7684\u65b9\u6cd5\ngetState();\n\nsetState(int newState);\n\ncompareAndSetState(int expect, int update);\n</code></pre> <p>\u6709\u8fd9\u6837\u7684\u4e00\u6bb5\u8bdd\u6765\u7406\u89e3\u9501\u548c\u540c\u6b65\u5668\u7684\u5173\u7cfb\uff1a</p> <p>\u540c\u6b65\u5668\u662f\u5b9e\u73b0\u9501\u7684\u5173\u952e\uff0c\u5728\u9501\u7684\u5b9e\u73b0\u4e2d\u805a\u5408\u540c\u6b65\u5668\uff0c\u5229\u7528\u540c\u6b65\u5668\u5b9e\u73b0\u9501\u7684\u8bed\u4e49\u3002\u9501\u662f\u9762\u5411\u4f7f\u7528\u8005\u7684\uff0c\u5b83\u5b9a\u4e49\u4e86\u4f7f\u7528\u8005\u4e0e\u9501\u4ea4\u4e92\u7684\u63a5\u53e3\uff0c\u9690\u85cf\u4e86\u5b9e\u73b0\u7ec6\u8282\u3002\u4f46\u662f\u540c\u6b65\u5668\u662f\u9762\u5411\u9501\u7684\u5b9e\u73b0\u8005\u7684\uff0c\u5b83\u5b9a\u4e49\u4e86\u9501\u7684\u5b9e\u73b0\u673a\u5236\uff0c\u4e3a\u9501\u7684\u5b9e\u73b0\u63d0\u4f9b\u4e86\u5e95\u5c42\u7684\u64cd\u4f5c\u3002\u5c4f\u853d\u4e86\u540c\u6b65\u72b6\u6001\u7ba1\u7406\uff0c\u7ebf\u7a0b\u6392\u961f\u7b49\u5e95\u5c42\u64cd\u4f5c\u3002\u4e5f\u5c31\u662f\u7b80\u5355\u6765\u8bf4\uff0c\u4ed6\u4eec\u662f\u4e00\u4e2a\u5206\u79bb\u7684\u5173\u7cfb\uff0c\u9501\u662f\u5bf9\u5916\u7684\u63a5\u53e3\uff0c\u540c\u6b65\u5668\u662f\u5bf9\u5185\u7684\u5b9e\u73b0\u3002</p>"},{"location":"Tech/Concurrency/Lock/#_4","title":"\u540c\u6b65\u5668\u7684\u63a5\u53e3\u5b9e\u73b0","text":"<p>\u4e0a\u56fe\u5f88\u6e05\u6670\u7684\u5f97\u77e5\uff0c\u6211\u4eec\u7684\u540c\u6b65\u5668\u4e0d\u4ec5\u53ef\u4ee5\u72ec\u5360\u5f0f\u7684\u83b7\u53d6\u8d44\u6e90\uff0c\u8fd8\u53ef\u4ee5\u5171\u4eab\u5f0f \u7684\u83b7\u53d6\u8d44\u6e90\u3002\u8fd9\u6837\u5c31\u53ef\u4ee5\u5b9e\u73b0\u8bfb\u5199\u9501\u7684\u529f\u80fd\u3002</p> <p>\u4ec0\u4e48\u662f\u72ec\u5360\u5f0f\uff1f \u4ec0\u4e48\u53c8\u662f\u5171\u4eab\u5f0f\uff1f </p> <p>\u72ec\u5360\u6a21\u5f0f\uff0c\u4e5f\u5c31\u662f\u5b57\u9762\u610f\u601d\u7684\u53ea\u5141\u8bb8\u5355\u4e2a\u7ebf\u7a0b\u8bbf\u95ee\u8d44\u6e90(\u6301\u6709\u9501 ReentrantLock)\uff0c \u800c\u5171\u4eab\u5f0f\u5c31\u662f\u5141\u8bb8\u591a\u4e2a\u7ebf\u7a0b\u8bbf\u95ee\u8d44\u6e90(\u8bfb\u5199\u9501 ReentrantReadWriteLock)\u3002</p> <p></p> <p>\u4e5f\u5c31\u662f\u6211\u4eec\u89c2\u5bdf\u5230\u8fd9\u4e9b\u65b9\u6cd5\uff0c\u5176\u5b9e\u540c\u6b65\u5668\u8981\u5e72\u7684\u5c31\u662f\u4e09\u4ef6\u4e8b:</p> <ul> <li>\u72ec\u5360\u5f0f\u83b7\u53d6\u4e0e\u91ca\u653e\u540c\u6b65\u72b6\u6001</li> <li>\u5171\u4eab\u5f0f\u83b7\u53d6\u4e0e\u91ca\u653e\u540c\u6b65\u72b6\u6001</li> <li>\u67e5\u8be2\u540c\u6b65\u961f\u5217\u4e2d\u7684\u7b49\u5f85\u7ebf\u7a0b\u60c5\u51b5</li> </ul> <p>\u8fd9\u5c31\u662f\u540c\u6b65\u5668(AQS)\u9700\u8981\u5b8c\u6210\u7684\u4e8b\u60c5</p>"},{"location":"Tech/Concurrency/Lock/#_5","title":"\u961f\u5217\u7684\u5b9e\u73b0","text":"<p>\u4ec0\u4e48\u65f6\u5019\u9700\u8981\u52a0\u5165\u961f\u5217\u5462\uff1f  \u7b54\u6848\u662f\u663e\u800c\u6613\u89c1\u7684\uff0c\u5f53\u6211\u4eec\u60f3\u83b7\u53d6\u5171\u4eab\u8d44\u6e90\u5931\u8d25\u7684\u65f6\u5019\uff0c\u5c31\u9700\u8981\u52a0\u5165\u961f\u5217\uff0c\u7b49\u5f85\u8d44\u6e90\u7684\u91ca\u653e\u3002</p> <p>\u5f53\u7136\uff0c\u4e00\u4e2a\u8282\u70b9\u6240\u9700\u8981\u5305\u542b\u7684\u5185\u5bb9\u4e5f\u662f\u5f88\u591a\u7684\uff0c\u5176\u5b9e\u4e3b\u8981\u7684\u8fd8\u662f <code>waitStatus</code>\uff0c\u8fd9\u4e2a\u662f\u9700\u8981\u7ec6\u5206\u7684\u3002</p> <ul> <li><code>CANCELLED</code> : \u8868\u793a\u5f53\u524d\u8282\u70b9\u5df2\u7ecf\u53d6\u6d88\u4e86</li> <li><code>SIGNAL</code> : \u8868\u793a\u5f53\u524d\u8282\u70b9\u7684\u540e\u7ee7\u8282\u70b9\u5728\u7b49\u5f85\u5f53\u524d\u8282\u70b9\u5524\u9192</li> <li><code>CONDITION</code> : \u8868\u793a\u5f53\u524d\u8282\u70b9\u5728\u7b49\u5f85\u6761\u4ef6</li> <li><code>PROPAGATE</code> : \u8868\u793a\u5f53\u524d\u573a\u666f\u4e0b\uff0c\u4e0b\u4e00\u4e2a\u8282\u70b9\u4f1a\u88ab\u4f20\u64ad\u5524\u9192</li> <li><code>0</code> : \u8868\u793a\u5f53\u524d\u8282\u70b9\u5728 sync \u961f\u5217\u4e2d</li> </ul> <p>\u91cd\u70b9\u6ce8\u610f:</p> <p>\u6211\u4eec\u8fd9\u91cc\u7531\u4e8e\u662f\u5e76\u53d1\u7f16\u7a0b\uff0c\u6240\u4ee5\u65f6\u523b\u8981\u6ce8\u610f\u7ebf\u7a0b\u7684\u5b89\u5168\u6027\u3002\u5728\u5c06\u8282\u70b9\u52a0\u5165\u961f\u5217\u7684\u65f6\u5019\uff0c\u6211\u4eec\u4e5f\u9700\u8981\u4fdd\u8bc1\u7ebf\u7a0b\u7684\u5b89\u5168\u6027\u3002\u4e5f\u5c31\u662f\u6211\u4eec\u5355\u72ec\u6709\u4e2a\u65b9\u6cd5\u4e3a <code>compareAndSetTail(Node expect,Node update)</code> \u6765\u4fdd\u8bc1\u7ebf\u7a0b\u7684\u5b89\u5168\u6027\u3002\u6211\u4eec\u5c06\u5f53\u524d\u7ebf\u7a0b \u8ba4\u4e3a \u7684\u5c3e\u90e8\u8282\u70b9\u548c\u5f53\u524d\u7684\u8282\u70b9\u6765\u8fdb\u884c\u6bd4\u8f83\u3002\u53ea\u6709\u771f\u6b63\u7684\u8bbe\u7f6e\u6210\u529f\u4e86\uff0c\u624d\u80fd\u4ee3\u8868\u5f53\u524d\u7ebf\u7a0b\u662f\u961f\u5217\u7684\u5c3e\u90e8\u8282\u70b9\u3002</p>"},{"location":"Tech/Concurrency/Lock/#_6","title":"\u72ec\u5360\u9501\u540c\u6b65\u72b6\u6001\u7684\u83b7\u53d6\u4e0e\u91ca\u653e","text":"<p>\u4e0b\u9762\u770b\u4e00\u6bb5\u6709\u5173\u7684\u4ee3\u7801: <pre><code>/**\n * \n */\nprivate Node addWaiter(Node mode){\n    Node node = new Node(Thread.currentThread(),mode);\n    Node pred = tail;\n    if(pred != null){\n        node.prev = pred;\n        if(compareAndSetTail(pred,node)){\n            pred.next = node;\n            return node;\n        }\n    }\n    enq(node);\n    return node;\n}\n\n\n/**\n * \u8ba9 node \u52a0\u5165\u961f\u5217\n */\nprivate Node enq(final Node node){\n    for(;;){\n        Node t = tail;\n        // \u6211\u4eec\u59cb\u7ec8\u8981\u4fdd\u8bc1\u5b58\u5728\u4e00\u4e2a tail \u8282\u70b9\n        if(t == null){\n            if(compareAndSetHead(new Node())){\n                tail = head;\n            }\n        }else{\n            node.prev = t;\n            // \u786e\u4fdd\u80fd\u88ab\u7ebf\u7a0b\u5b89\u5168\u7684\u6dfb\u52a0;\n            if(compareAndSetTail(t,node)){\n                t.next = node;\n                return t;\n            }\n        }\n    }\n}\n</code></pre></p> <p>\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u4e0a\u8ff0\u7684\u6e90\u7801\u4e2d\uff0c\u4e5f\u662f\u65f6\u523b\u5173\u6ce8\u7ebf\u7a0b\u7684\u5b89\u5168\u6027\uff0c\u591a\u6b21\u5229\u7528<code>compareAndSetHead</code> \u548c <code>compareAndSetTail</code> \u6765\u4fdd\u8bc1\u7ebf\u7a0b\u7684\u5b89\u5168\u6027\u3002</p>"},{"location":"Tech/Concurrency/Lock/#acquire","title":"Acquire","text":"<p>\u63a5\u4e0b\u6765\u770b\u4e00\u4e9b\u7ec6\u8282\u3002\u6211\u4eec\u5728 CAS \u4e2d\u7684\u5934\u8282\u70b9\u6b63\u662f\u5f53\u524d\u6b63\u5728\u83b7\u5f97\u9501\u7684\u7ebf\u7a0b\u8282\u70b9\uff0c\u56e0\u4e3a\u662f\u72ec\u5360\u5f0f\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u4fdd\u8bc1\u5f53\u524d\u8282\u70b9\u662f\u961f\u5217\u7684\u5934\u8282\u70b9\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u83b7\u5f97\u9501\u3002</p> <p>\u90a3\u4e48\u63a5\u4e0b\u6765\u5c31\u6709\u4e00\u6bb5\u4ee3\u7801\u53ef\u4ee5\u6765\u5b9e\u73b0\u8fd9\u4e2a\u81ea\u65cb\u9501\u7684\u529f\u80fd: \u56e0\u4e3a\u6211\u4eec\u662f\u72ec\u5360\u5f0f\uff0c\u6240\u4ee5\u8868\u793a\u7740\u59cb\u7ec8\u53ea\u6709\u4e00\u4e2a\u7ebf\u7a0b\u8282\u70b9\u80fd\u5f97\u5230\u8fd9\u4e2a\u9501\uff0c\u6291\u6216\u662f\u8fd9\u4e2a\u961f\u5217\u662f\u7a7a\u7684\u3002\u4e24\u79cd\u53ef\u80fd\u6027\uff0c\u90a3\u4e48\u6211\u4eec\u4e0b\u9762\u7684\u5b9e\u73b0\u7ec6\u8282\u5c31\u8868\u793a\u7740\u81ea\u65cb\u9501\uff0c\u4e5f\u5c31\u662f\u4ed6\u4eec\u81ea\u8eab\u5728\u4e0d\u65ad\u7684\u5c1d\u8bd5\u83b7\u53d6\u9501\u3002\u5018\u82e5\u6761\u4ef6\u5141\u8bb8\uff0c\u81ea\u5df1\u5c31\u4f1a\u9000\u51fa\u6b7b\u5faa\u73af\u7684\u72b6\u6001\uff0c\u4ece\u800c\u83b7\u5f97\u9501\u5e76\u4e14\u6392\u5230\u961f\u4f0d\u7684\u5934\u90e8\u3002</p> <pre><code>/**\n * @param node \u662f\u5f53\u524d\u7ebf\u7a0b\u7684\u8282\u70b9\n * @param arg \u662f\u5f53\u524d\u7ebf\u7a0b\u7684\u72b6\u6001\n */\nfinal boolean anquireQueued(final Node node,int arg){\n    boolean failed = true;\n    try{\n        boolean interrupted = false;\n        for(;;){\n            // \u83b7\u5f97\u8fd9\u4e2anode\u8282\u70b9\u7684\u524d\u4e00\u4e2a\u8282\u70b9\uff0c\u67e5\u770b\u662f\u5426\u4e3a\u6b63\u5728\u4f7f\u7528\u9501\u7684\u8282\u70b9\n            final Node p = node.predecessor();\n            // \u5982\u679c\u524d\u4e00\u4e2a\u8282\u70b9\u5c31\u662f\u961f\u9996\uff0c\u5e76\u4e14\u6ee1\u8db3\u83b7\u53d6\u9501\u7684\u72b6\u6001; tryAcquire(1);\n            if(p == head &amp;&amp; tryAcquire(arg)){\n                setHead(node);\n                // GC \n                p.next = null;\n                failed = false;\n                return interrupted;\n            }\n            if(shouldParkAfterFailedAcquire(p,node) &amp;&amp; parkAndCheckInterrupt()){\n                interrupted = true;\n            }\n        }\n    }finally{\n        if(failed){\n            cancelAcquire(node);\n        }\n    }\n}\n</code></pre>"},{"location":"Tech/Concurrency/Lock/#release","title":"Release","text":"<p>\u4e0b\u9762\u662f\u4e00\u6bb5 <code>Release</code> \u7684\u65b9\u6cd5\u5b9e\u73b0</p> <pre><code>public final boolean release(int arg){\n    if(tryRelease(arg)){\n        Node h = head;\n        // \u5bf9\u5f53\u524d\u961f\u5217\u7684\u5934\u8282\u70b9\u8fdb\u884c\u68c0\u67e5;\n        if(h != null &amp;&amp; h.waitStatus != 0){\n            // \u5524\u9192\u540e\u9762\u7684\u8282\u70b9; \n            unparkSuccessor(h);\n        }\n        return true;\n    }\n    return false;\n}\n</code></pre>"},{"location":"Tech/Concurrency/Lock/#_7","title":"\u5171\u4eab\u5f0f\u540c\u6b65\u72b6\u6001\u83b7\u53d6\u4e0e\u91ca\u653e","text":"<p>BackGround : \u5171\u4eab\u5f0f\u548c\u72ec\u5360\u5f0f\u7684\u533a\u522b\u5c31\u662f\u662f\u5426\u5141\u8bb8\u591a\u4e2a\u7ebf\u7a0b\u5728\u540c\u4e00\u65f6\u95f4\u5bf9\u8d44\u6e90\u83b7\u53d6\u5230\u540c\u6b65\u72b6\u6001\u3002\u6211\u4eec\u4ee5\u6587\u4ef6\u7684\u8bfb\u5199\u4e3a\u4f8b\uff0c\u5199\u4e00\u5b9a\u662f\u72ec\u5360\u7684\uff0c\u4f46\u662f\u8bfb\u64cd\u4f5c\u662f\u5171\u4eab\u7684\u3002</p> <p>\u90a3\u4e48\u5177\u4f53\u600e\u4e48\u5b9e\u73b0\u5462\uff1f\u6211\u4eec\u770b\u4e0b\u6765\u7684\u4ee3\u7801:</p>"},{"location":"Tech/Concurrency/Lock/#acquire_1","title":"Acquire","text":"<pre><code>public final void acquireShared(int arg){\n    // \u56e0\u4e3a\u662f\u5171\u4eab\u5f0f\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u68c0\u67e5\u5f53\u524d\u4ecd\u65e7\u5141\u8bb8\u7684\u7ebf\u7a0b\u6570\u662f\u5426\u4e3a0\uff0c\u4e5f\u5c31\u662f\u8bf4\u662f\u5426\u80fd\u591f\u5c1d\u8bd5\u83b7\u53d6\u5230\u9501\n    if(tryAcquireShared(arg) &lt; 0){\n        doAcquireShared(arg);\n    }\n}\n\nprivate void doAcquireShared(int arg){\n    final Node node = addWaiter(Node.SHARED);\n    boolean failed = true;\n    try{\n        boolean interrupted = false;\n        for(;;){\n            final Node p = node.predecessor();\n            // \u56e0\u4e3a\u961f\u5217\u7684\u6709\u5e8f\u6027\uff0c\u6211\u4eec\u4f9d\u65e7\u9700\u8981\u8003\u8651\u524d\u4e00\u4e2a\u8282\u70b9\u662f\u5426\u662f\u961f\u9996\u8282\u70b9\uff0c\u56e0\u4e3a\u5148\u6765\u540e\u5230\uff0c\u867d\u7136\u662f\u5171\u4eab\u5f0f\uff0c\u4f46\u6211\u4eec\u4f9d\u65e7\u8981\u8003\u8651\u8fd9\u4e2a\u95ee\u9898\u3002\u5982\u679c\u4e0d\u8981\u6c42\u524d\u9a71\u8282\u70b9\u4e3a\u5934\u8282\u70b9\uff0c\u5c31\u4f1a\u53ef\u80fd\u51fa\u73b0\u961f\u5217\u4e2d\u7684\u6240\u6709\u8282\u70b9\u90fd\u540c\u65f6\u5c1d\u8bd5\u83b7\u53d6\u9501\u7684\u60c5\u51b5\u3002\n            if(p == head){\n                int r = tryAcquireShared(arg);\n                // \u5141\u8bb8\u83b7\u53d6\u9501/\u8d44\u6e90\u8bbf\u95ee;\n                if(r &gt;= 0){\n                    // \u5c06 node \u8bbe\u7f6e\u4e3a\u5934\u8282\u70b9;\n                    setHeadAndPropagate(node,r);\n                    p.next = null;\n                    if(interrupted){\n                        selfInterrupt();\n                    }\n                    failed = false;\n                    return;\n                }\n            }\n            if(shouldParkAfterFailedAcquire(p,node) &amp;&amp; parkAndCheckInterrupt()){\n                interrupted = true;\n            }\n        }\n    }finally{\n        if(failed){\n            cancelAcquire(node);\n        }\n    }\n}\n</code></pre>"},{"location":"Tech/Concurrency/Lock/#release_1","title":"Release","text":"<pre><code>public final boolean releaseShared(int arg){\n    if(tryReleaseShared(arg)){\n        doReleaseShared();\n        return true;\n    }\n    return false;\n}\n</code></pre> <p>\u5206\u6790\u5b8c\u4e0a\u8ff0\u7684\u4e24\u79cd\u60c5\u51b5(\u72ec\u5360\u5f0f/\u5171\u4eab\u5f0f)\uff0c\u6211\u4eec\u59cb\u7ec8\u5e94\u8be5\u94ed\u8bb0\u7684\u662f\u90fd\u662f\u57fa\u4e8e\u961f\u5217\u6765\u5b9e\u73b0\u7684\uff0c\u6240\u4ee5\u65e0\u8bba\u662f\u5426\u5171\u4eab\uff0c\u6211\u4eec\u8bbf\u95ee\u8d44\u6e90\u90fd\u662f\u6709\u5e8f\u7684\u3002</p>"},{"location":"Tech/Concurrency/Lock/#_8","title":"\u72ec\u5360\u5f0f\u8d85\u65f6\u83b7\u53d6\u540c\u6b65\u72b6\u6001","text":"<p>\u6709\u65f6\u5019\u6211\u4eec\u5728\u83b7\u53d6\u9501\u7684\u65f6\u5019\uff0c\u6211\u4eec\u4e0d\u5e0c\u671b\u4e00\u76f4\u7b49\u5f85\uff0c\u6211\u4eec\u5e0c\u671b\u5728\u4e00\u5b9a\u7684\u65f6\u95f4\u5185\u83b7\u53d6\u5230\u9501\uff0c\u5982\u679c\u8d85\u65f6\u4e86\uff0c\u6211\u4eec\u5c31\u4e0d\u518d\u7b49\u5f85\u4e86\u3002\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u5c31\u9700\u8981\u8d85\u65f6\u83b7\u53d6\u540c\u6b65\u72b6\u6001\u3002  </p> <p>\u7b80\u5355\u7684\u6765\u8bf4\uff0c\u5c31\u662f\u6211\u4eec\u901a\u8fc7\u8c03\u7528\u540c\u6b65\u5668\u7684 <code>doAcquireNanos(int arg,long nanosTimeout)</code> \u65b9\u6cd5\u6765\u5b9e\u73b0\u8d85\u65f6\u83b7\u53d6\u540c\u6b65\u72b6\u6001\u3002\u5728\u6307\u5b9a\u65f6\u95f4\u6bb5\u5185\u83b7\u53d6\u9501\u7684\u60c5\u51b5\u3002\u5982\u679c\u83b7\u53d6\u5230\u540c\u6b65\u72b6\u6001\uff0c\u5219\u8fd4\u56detrue.\u5176\u5b9e\u76ee\u7684\u5c31\u662f\u4e3a\u4e86\u9632\u6b62\u67d0\u4e2a\u7ebf\u7a0b\u957f\u65f6\u95f4\u5904\u4e8e\u7b49\u5f85\u963b\u585e\u72b6\u6001\uff0c\u5bfc\u81f4\u8d44\u6e90\u7684\u6d6a\u8d39\u3002</p> <p>\u6211\u4eec\u6709 <code>nanosTimeout</code> , \u5176\u5b9e\u903b\u8f91\u4e5f\u5f88\u7b80\u5355\uff0c\u5c31\u662f\u6bcf\u6b21\u901a\u8fc7 <code>nanosTimeout = nanosTimeout - (now - lastTime)</code> \u7684\u6b63\u8d1f\uff0c\u6765\u5224\u65ad\u662f\u5426\u5df2\u7ecf\u8d85\u65f6\u4e86\u3002</p> <ul> <li>now -&gt; \u5f53\u524d\u7684\u65f6\u95f4\u6233</li> <li>lastTime -&gt; \u4e0a\u4e00\u6b21\u5524\u9192\u7684\u65f6\u95f4\u6233</li> </ul> <pre><code>private boolean doAcquireNanos(int arg,long nanosTimeout) throws InterruptedException{\n    long lastTime = System.nanoTime();\n    final Node node = addWaiter(Node.EXCLUSIVE);\n    boolean failed = true;\n    try{\n        // \u4f9d\u65e7\u662f\u8fdb\u884c\u81ea\u65cb\u9501\u7684\u64cd\u4f5c;\n        for(;;){\n            final Node p = node.predecessor();\n            if(p == head &amp;&amp; tryAcquire(arg)){\n                setHead(node);\n                p.next = null;\n                failed = false;\n                return true;\n            }\n            // \u8bf4\u660e\u5df2\u7ecf\u8d85\u65f6\u4e86\uff0c\u6211\u4eec\u5c31\u4e0d\u518d\u7b49\u5f85\u4e86;\n            if(nanosTimeout &lt;= 0){\n                return false;\n            }\n            if(shouldParkAfterFailedAcquire(p,node) &amp;&amp; nanosTimeout &gt; spinForTimeoutThreshold){\n                LockSupport.parkNanos(this,nanosTimeout);\n            }\n            long now = System.nanoTime();\n            nanosTimeout -= now - lastTime;\n            lastTime = now;\n            if(Thread.interrupted()){\n                throw new InterruptedException();\n            }\n        }\n}\n</code></pre> <p>\u8d85\u65f6\u7b49\u5f85\u7684\u7ebf\u7a0b\uff0c\u5e76\u4e0d\u4f1a\u76f4\u63a5\u7684\u5c06\u522b\u7684\u7ebf\u7a0b\u7684\u9501\u7ed9\u91ca\u653e\uff0c\u800c\u662f\u8bf4\u4f1a\u76f4\u63a5\u544a\u77e5\u4f60\uff0c\u6211\u4eec\u5df2\u7ecf\u8d85\u65f6\u4e86\uff0c\u4e0d\u80fd\u518d\u7ee7\u7eed\u7b49\u5f85\u4e86\u3002\u8fd9\u70b9\u5c31\u662f\u548c<code>Syncronized</code>\u7684\u533a\u522b\u3002\u540e\u8005\u662f\u4f1a\u4e00\u76f4\u7b49\u5f85\u7684\u3002</p>"},{"location":"Tech/Concurrency/Lock/#twinslock","title":"TwinsLock","text":"<p>\u8bbe\u8ba1\u4e00\u4e2a\u53cc\u80de\u80ce\u9501\uff0c\u4e5f\u5c31\u662f\u6700\u591a\u540c\u65f6\u62e5\u6709\u4e24\u4e2a\u7ebf\u7a0b\u540c\u65f6\u8bbf\u95ee\u8d44\u6e90\u3002\u8fd9\u4e2a\u9501\u7684\u8bbe\u8ba1\u662f\u57fa\u4e8e<code>AQS</code>\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u4e00\u4e0b\u4e0b\u9762\u7684\u4ee3\u7801:</p> <p><pre><code>public class TwinsLock implements Lock{\n    private final Sync sync = new Sync(2);\n    private static final class Sync extends AbstractQueuedSynchronizer{\n        Sync(int count){\n            if(count &lt;= 0){\n                throw new IllegalArgumentException(\"count must large than zero\");\n            }\n            setState(count);\n        }\n\n        public int tryAcquireShared(int reduceCount){\n            for(;;){\n                int current = getState();\n                int newCount = current - reduceCount;\n                if(newCount &lt; 0 || compareAndSetState(current,newCount)){\n                    return newCount;\n                }\n            }\n        }\n\n        public boolean tryReleaseShared(int returnCount){\n            for(;;){\n                int current = getState();\n                int newCount = current + returnCount;\n                if(compareAndSetState(current,newCount)){\n                    return true;\n                }\n            }\n        }\n    }\n\n    public void lock(){\n        sync.acquireShared(1);\n    }\n\n    public void unlock(){\n        sync.releaseShared(1);\n    }\n\n    public void lockInterruptibly() throws InterruptedException{\n        sync.acquireSharedInterruptibly(1);\n    }\n\n    public boolean tryLock(){\n        return sync.tryAcquireShared(1) &gt;= 0;\n    }\n\n    public boolean tryLock(long time,TimeUnit unit) throws InterruptedException{\n        return sync.tryAcquireSharedNanos(1,unit.toNanos(time));\n    }\n\n    public Condition newCondition(){\n        return null;\n    }\n}\n</code></pre> \u56e0\u4e3a\u6211\u4eec\u8bbe\u7f6e\u4e86 <code>private final Sync sync = new Sync(2);</code> \u4e5f\u5c31\u662f\u8bf4\u72b6\u6001\u91cf\u59cb\u7ec8\u53ea\u4f1a\u6709 <code>0,1,2</code> \u4e09\u79cd\u60c5\u51b5\u3002</p>"},{"location":"Tech/Concurrency/Lock/#_9","title":"\u6d4b\u8bd5\u4ee3\u7801","text":"<p>\u4e3a\u4e86\u6bd4\u8f83\u597d\u7406\u89e3\u4e0a\u8ff0\u7684<code>TwinLock</code>\u8fd9\u91cc\u6709\u4e00\u6bb5\u4ee3\u7801\u53ef\u4ee5\u65b9\u4fbf\u7406\u89e3: <pre><code>public class TwinsLockTest{\n    @Test\n    public void test(){\n        final Lock lock = new TwinsLock();\n        class Worker extends Thread {\n            public void run(){\n                lock.lock();\n                try{\n                    SleepUtils.second(1);\n                    System.out.println(Thread.currentThread().getName());\n                    SleepUtils.second(1);\n                }finally{\n                    lock.unlock();\n                }\n            }\n        }\n\n        //\u542f\u52a810\u4e2a\u7ebf\u7a0b\n        for(int i = 0; i &lt; 10; i++){\n            Worker w = new Worker();\n            w.setDaemon(true);\n            w.start();\n        }\n        // \u6bcf\u96941\u79d2\u6362\u884c\n        for(int i = 0; i &lt; 10; i++){\n            SleepUtils.second(1);\n            System.out.println();\n        }\n    }\n}\n</code></pre></p>"},{"location":"Tech/Concurrency/Lock/#reentrantlock","title":"\u91cd\u5165\u9501 ReentrantLock","text":"<p>\u6211\u4eec\u4e0a\u9762\u5206\u6790\u7684\u540c\u6b65\u961f\u5217\u5668\u90fd\u662f\u4e0d\u91cd\u5165\u9501\u7684\u5b9e\u73b0\u3002\u4e5f\u5c31\u662f\u8bf4\u4e0d\u652f\u6301\u4e00\u4e2a\u7ebf\u7a0b\u591a\u6b21\u83b7\u53d6\u540c\u4e00\u4e2a\u9501\u3002\u4f46\u662f\u6211\u4eec\u5728\u5b9e\u966b\u4e2d\uff0c\u6709\u65f6\u5019\u6211\u4eec\u9700\u8981\u652f\u6301\u91cd\u5165\u9501\u7684\u5b9e\u73b0\u3002\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u5c31\u9700\u8981\u4f7f\u7528 <code>ReentrantLock</code> \u6765\u5b9e\u73b0\u3002</p> <p>\u5c0f Question : <code>Syncronized</code> \u662f\u652f\u6301\u91cd\u5165\u9501\u7684\u5417\uff1f \u7b54\u6848\u662f\u80af\u5b9a\u7684\uff0c\u4e00\u4e2a<code>Syncronized</code> \u5728\u4fee\u9970\u9012\u5f52\u65b9\u6cd5\u7684\u65f6\u5019\uff0c\u662f\u652f\u6301\u91cd\u5165\u9501\u7684\u3002 \u4e0a\u9762\u7684<code>Mutex</code>\u4f1a\u51fa\u73b0\u83b7\u53d6\u4e86\u9501\u4e4b\u540e\uff0c\u800c\u4e0b\u4e00\u6b21\u83b7\u53d6\u9501\u7684\u65f6\u5019\uff0c\u4f1a\u628a\u81ea\u5df1\u7ed9\u963b\u585e\u4f4f\u3002</p>"},{"location":"Tech/Concurrency/Lock/#_10","title":"\u83b7\u53d6\u9501\u7684\u516c\u5e73\u6027","text":"<p>\u5176\u5b9e\u5f88\u597d\u7406\u89e3\uff0c\u4e5f\u5c31\u662f\u662f\u5426\u8981\u4f9d\u636e\u961f\u5217\u7684\u987a\u5e8f\u6765\u83b7\u53d6\u9501\u3002\u5982\u679c\u662f\u516c\u5e73\u7684\uff0c\u90a3\u4e48\u5c31\u662f\u4f9d\u636e\u961f\u5217\u7684\u987a\u5e8f\u6765\u83b7\u53d6\u9501\u3002\u5982\u679c\u662f\u975e\u516c\u5e73\u7684\uff0c\u90a3\u4e48\u5c31\u662f\u4e0d\u4f9d\u636e\u961f\u5217\u7684\u987a\u5e8f\u6765\u83b7\u53d6\u9501\u3002\u7b49\u5f85\u65f6\u95f4\u6700\u957f\u7684\u7ebf\u7a0b\u6700\u4f18\u5148\u83b7\u53d6\u5230\u9501\uff0c\u8fd9\u4e2a\u662f\u516c\u5e73\u7684\u83b7\u53d6\u9501\u3002 \u4f46\u662f\uff0c\u4e8b\u5b9e\u4e0a\u4e5f\u5f88\u597d\u7406\u89e3\uff0c\u516c\u5e73\u7684\u83b7\u53d6\u9501\u867d\u7136\u53ef\u4ee5\u89e3\u51b3\u7ebf\u7a0b\u9965\u997f\u7684\u95ee\u9898\uff0c\u4f46\u662f\u6548\u7387\u80af\u5b9a\u662f\u6bd4\u4e0d\u4e0a\u975e\u516c\u5e73\u7684\u83b7\u53d6\u9501\u7684\u3002</p>"},{"location":"Tech/Concurrency/Lock/#_11","title":"\u5b9e\u73b0\u91cd\u8fdb\u5165","text":"<p>\u8fd9\u91cc\u5b9a\u4e49\u4e00\u4e0b\u91cd\u8fdb\u5165\uff0c\u5176\u5b9e\u5c31\u662f\u67d0\u4e2a\u7ebf\u7a0b\u5df2\u7ecf\u83b7\u5f97\u4e86\u5171\u4eab\u8d44\u6e90\uff0c\u90a3\u4e48\u5728\u91ca\u653e\u8d44\u6e90\u4e4b\u524d\uff0c\u518d\u6b21\u83b7\u53d6\u8d44\u6e90\u7684\u65f6\u5019\uff0c\u662f\u53ef\u4ee5\u518d\u6b21\u83b7\u53d6\u5230\u7684\u3002\u8fd9\u4e2a\u5c31\u662f\u91cd\u8fdb\u5165\u3002 \u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u9501\u7684\u91cd\u8fdb\u5165\u9ed8\u8ba4\u662f \u975e\u516c\u5e73\u7684</p> <ul> <li> <p>\u7ebf\u7a0b\u518d\u6b21\u83b7\u5f97\u9501</p> <p>\u6211\u4eec\u7684\u7ebf\u7a0b\u91cd\u65b0\u83b7\u5f97\u9501\u7684\u65f6\u5019\uff0c\u662f\u4e0d\u4f1a\u989d\u5916\u6d88\u8017\u5171\u4eab\u8d44\u6e90\u7684\uff0c\u4f46\u662f\u4f1a\u6709\u4e13\u5c5e\u7684\u8ba1\u6570\u5668\u8fdb\u884c\u8bb0\u5f55\u3002\u6211\u4eec\u53ef\u4ee5\u5728\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u7684 <code>cow</code> \u7684\u64cd\u4f5c\u4e2d\uff0c\u4e5f\u6709\u7c7b\u4f3c\u7684\u64cd\u4f5c\u3002\u5728\u67d0\u4e9b\u7269\u7406\u5730\u5740\u4e0a\u8fdb\u884c\u9875\u5f15\u7528\u7684\u8ba1\u6570\u3002</p> </li> <li> <p>\u7ebf\u7a0b\u7ed3\u675f\u65f6\u5019\u91ca\u653e\u9501 </p> <p>\u76f4\u5230\u6240\u6709\u7684\u8ba1\u6570\u5668\u4e3a0\u7684\u65f6\u5019\uff0c\u5c31\u8bf4\u660e\u7ebf\u7a0b\u53ef\u4ee5\u53bb\u91ca\u653e\u3002</p> </li> </ul>"},{"location":"Tech/Concurrency/Lock/#acquire_2","title":"\u975e\u516c\u5e73 <code>Acquire</code>","text":"<p>\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u91cd\u5165\u9501\u90fd\u662f\u9488\u5bf9\u4e8e\u72ec\u5360\u9501\u7684\u3002\u6211\u4eec\u7684 <code>state</code> \u5c31\u662f\u8868\u793a\u7684\u662f\u8fd9\u4e2a\u9501\u88ab\u5360\u7528\u7684\u6b21\u6570\u3002</p> <p>\u6211\u4eec\u53ef\u4ee5\u770b\u4e0b\u9762\u7684\u4ee3\u7801:</p> <pre><code>/**\n * \u975e\u516c\u5e73\u7684\u83b7\u53d6\u9501\n * @param acquires \u8bf7\u6c42\u83b7\u5f97\u9501\u7684\u6b21\u6570\n * @return \u662f\u5426\u83b7\u5f97\u9501\n */\nfinal boolean nonfairTryAcquire(int acquires){\n    // \u83b7\u53d6\u5f53\u524d\u9501\u7684\u72b6\u6001\n    final Thread current = Thread.currentThread();\n    int c = getState();\n    // \u5982\u679c\u9501\u7684\u72b6\u6001\u4e3a0\uff0c\u8868\u793a\u5f53\u524d\u6ca1\u6709\u7ebf\u7a0b\u5360\u7528\u9501\n    if(c == 0){\n        // \u8bbe\u7f6e\u9501\u7684\u72b6\u6001\u4e3a acquires\n        if(compareAndSetState(0,acquires)){\n            // \u5c06\u5f53\u524d\u7684\u7ebf\u7a0b\u8bbe\u7f6e\u4e3a\u72ec\u5360\u7ebf\u7a0b\n            setExclusiveOwnerThread(current);\n            return true;\n        }\n    }else if(current == getExclusiveOwnerThread()){\n        // \u63a5\u4e0b\u6765\u7684\u90e8\u5206\u662f\u8868\u9762\u5f53\u524d\u7684\u7ebf\u7a0b\u662f\u5df2\u7ecf\u83b7\u53d6\u5230\u9501\u4e86\n        int nextc = c + acquires;\n        if(nextc &lt; 0){\n            throw new Error(\"Maximum lock count exceeded\");\n        }\n        // \u8bbe\u7f6e\u9501\u7684\u72b6\u6001\u4e3a `nextc` \u6211\u4eec\u5230\u65f6\u5019\u91ca\u653e\u9501\u7684\u65f6\u5019\uff0c\u5c31\u662f\u51cf\u53bb\u8fd9\u4e2a\u503c\n        setState(nextc);\n        return true;\n    }\n    return false;\n}\n</code></pre>"},{"location":"Tech/Concurrency/Lock/#release_2","title":"\u975e\u516c\u5e73\u9501\u7684 <code>Release</code>","text":"<pre><code>/**\n * @param releases \u91ca\u653e\u9501\u7684\u6b21\u6570\n */\nprotected final boolean tryRelease(int releases){\n    int c = getState() - releases;\n    // \u56e0\u4e3a\u6211\u4eec\u9ed8\u8ba4\u662f\u72ec\u5360\u9501\uff0c\u6240\u4ee5\u5982\u679c\u5f53\u524d\u7ebf\u7a0b\u5e76\u4e0d\u662f\u90a3\u4e2a\u5360\u636e\u9501\u7684\u7ebf\u7a0b\uff0c\u5c31\u4f1a\u629b\u51fa\u5f02\u5e38;\n    if(Thread.currentThread() != getExclusiveOwnerThread()){\n        throw new IllegalMonitorStateException();\n    }\n    boolean free = false;\n    // \u53ea\u6709\u5f53\u9501\u5b8c\u5168\u91ca\u653e\u7684\u65f6\u5019\uff0c\u6211\u4eec\u624d\u4f1a\u91ca\u653e\u8d44\u6e90\n    if(c == 0){\n        free = true;\n        setExclusiveOwnerThread(null);\n    }\n    setState(c);\n    return free;\n} \n</code></pre>"},{"location":"Tech/Concurrency/Lock/#_12","title":"\u975e\u516c\u5e73\u9501\u548c\u516c\u5e73\u9501\u7684\u533a\u522b","text":"<p>\u6211\u4eec\u5728\u4e0a\u9762\u7684\u4ee3\u7801\u5b9e\u73b0\u90fd\u662f\u57fa\u4e8e \u975e\u516c\u5e73\u9501\u7684\uff0c\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u4f1a\u8003\u8651\u516c\u5e73\u9501\uff0c\u4e5f\u5c31\u662f\u6309\u7167 FIFO \u7684\u539f\u5219\u6765\u8fdb\u884c\u8d44\u6e90\u83b7\u53d6\u7684\u6392\u961f\u3002\u5e76\u4e0d\u4f1a\u56e0\u4e3a\u4f60\u8fd9\u4e2a\u7ebf\u7a0b\u6b63\u5728\u7b49\u5f85\uff0c\u800c\u8ba9\u4f60\u63d0\u524d\u83b7\u53d6\u8d44\u6e90\u3002\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u5c31\u9700\u8981\u8003\u8651\u516c\u5e73\u9501\u7684\u5b9e\u73b0\u3002</p>"},{"location":"Tech/Concurrency/Lock/#acquire_3","title":"\u516c\u5e73\u9501\u7684 <code>Acquire</code>","text":"<pre><code>protected final boolean tryAcquire(int acquires){\n    final Thread current = Thread.currentThread();\n    int c = getState();\n    // \u5982\u679c\u9501\u7684\u72b6\u6001\u4e3a0\uff0c\u8868\u793a\u5f53\u524d\u6ca1\u6709\u7ebf\u7a0b\u5360\u7528\u9501\n    if(c == 0){\n        // \u5982\u679c\u961f\u5217\u4e2d\u6ca1\u6709\u7ebf\u7a0b\u5728\u7b49\u5f85\uff0c\u6216\u8005\u5f53\u524d\u7ebf\u7a0b\u662f\u961f\u5217\u4e2d\u7684\u7b2c\u4e00\u4e2a\u7ebf\u7a0b\n        if(!hasQueuedPredecessors() &amp;&amp; compareAndSetState(0,acquires)){\n            setExclusiveOwnerThread(current);\n            return true;\n        }\n    }else if(current == getExclusiveOwnerThread()){\n        int nextc = c + acquires;\n        if(nextc &lt; 0){\n            throw new Error(\"Maximum lock count exceeded\");\n        }\n        setState(nextc);\n        return true;\n    }\n    return false;\n}\n</code></pre> <p>\u770b\u4e0a\u9762\u7684\u5185\u5bb9\u5c31\u662f\uff0c\u6211\u4eec\u53ea\u6709\u5f53\u8fd9\u4e2a\u7ebf\u7a0b\u5904\u4e8e\u7684\u961f\u5217\u4e3a\u7a7a\uff0c\u6216\u8005\u8fd9\u4e2a\u7ebf\u7a0b\u5728\u7ebf\u7a0b\u7684\u961f\u9996\u7684\u65f6\u5019\uff0c\u624d\u4f1a\u7ed9\u4ed6\u5206\u914d\u9501\u3002\u8fd9\u4e2a\u5c31\u662f\u516c\u5e73\u9501\u7684\u5b9e\u73b0\u3002\u800c\u5bf9\u4e8e\u9501\u6b21\u6570\u7684\u589e\u52a0\u662f\u4e0d\u53d7\u5f71\u54cd\u7684\u3002</p> <p></p> <p>\u89c2\u5bdf\u4e0a\u56fe\uff0c\u5176\u5b9e\u53ef\u4ee5\u53d1\u73b0\u5c31\u662f\u8bf4\u6211\u4eec\u5229\u7528 \u975e\u516c\u5e73\u9501 \u8fdb\u884c\u7684\u8d44\u6e90\u7533\u8bf7\u8bbf\u95ee\u7684\u6b21\u6570\u662f\u66f4\u5c11\u7684\u3002</p>"},{"location":"Tech/Concurrency/Lock/#readwritelock","title":"\u8bfb\u5199\u9501 ReadWriteLock","text":"<p>\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\u7684\u662f \u524d\u9762\u7684\u4e24\u79cd <code>Mutex</code> \u548c <code>ReentrantLock</code> \u90fd\u662f\u6392\u4ed6\u9501\uff0c\u4f46\u662f\u8bfb\u5199\u9501\u662f\u4e00\u79cd\u5171\u4eab\u9501\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u8bfb\u5199\u9501\u5141\u8bb8\u591a\u4e2a\u7ebf\u7a0b\u540c\u65f6\u8bfb\u5171\u4eab\u8d44\u6e90\uff0c\u4f46\u662f\u5bf9\u4e8e\u5199\u8d44\u6e90\u662f\u6392\u4ed6\u7684\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5199\u9501\u662f\u72ec\u5360\u7684\uff0c\u8bfb\u9501\u662f\u5171\u4eab\u7684\u3002</p> <p>\u6211\u4eec\u8003\u8651\u5230\u4e00\u4e2a\u8ba1\u7b97\u673a\u7684\u8bbe\u8ba1\u539f\u5219 make common faster,\u56e0\u4e3a\u5728\u6b63\u5e38\u7684\u60c5\u51b5\u4e0b\uff0c\u8bfb\u7684\u6b21\u6570\u662f\u8fdc\u8fdc\u5927\u4e8e\u5199\u7684\u6b21\u6570\u7684\uff0c\u6240\u4ee5\u8bfb\u5199\u9501\u7684\u6027\u80fd\u4f1a\u6bd4\u6392\u4ed6\u9501\u7684\u6027\u80fd\u8981\u597d\u5f88\u591a\u3002</p> <p>\u7b80\u5355\u7684\u7406\u89e3\u5c31\u662f \u8bfb\u5199\u9501 \u5176\u5b9e\u662f\u4e00\u5bf9\u9501,\u7ef4\u62a4\u7684\u662f\u4e24\u628a\u9501\uff0c\u4e00\u4e2a\u8d1f\u8d23\u8bfb\uff0c\u4e00\u4e2a\u8d1f\u8d23\u5199\u3002\u8bfb\u5199\u9501\u7684\u5b9e\u73b0\u662f\u57fa\u4e8e <code>AQS</code> \u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u4e0b\u9762\u7684\u4ee3\u7801:</p> <p></p> <p>\u9996\u5148\u662f\u4e3a\u4e86\u719f\u6089 \u8bfb\u5199\u9501\u7684\u63a5\u53e3\uff0c\u6211\u4eec\u770b\u4e00\u4e0b\u4e0b\u9762\u7684\u793a\u4f8b\u4ee3\u7801:\u662f\u4e00\u6bb5\u5173\u4e8e <code>Cache</code> \u4e2d\u5bf9\u4e8e\u8bfb\u5199\u9501\u7684\u4f7f\u7528</p> <pre><code>public class Cache{\n    static Map&lt;String, Object&gt;map = new HashMap&lt;String,Object&gt;();\n    static ReentrantReadWriteLock rwl = new ReentrantReadWriteLock();   \n\n    // \u83b7\u53d6\u4e24\u4e2a\u9501\u7684\u5bf9\u8c61;\n    static Lock r = rwl.readLock();\n    static Lock w = rwl.writeLock();\n\n    /**\n     * \u8fd9\u4e2a\u662f\u4e00\u4e2a\u8bfb\u7684\u64cd\u4f5c\uff0c\u6240\u4ee5\u662f\u8bfb\u9501\u6765\u8fdb\u884c\u7ba1\u7406\n     * @param key \u9700\u8981\u8bfb\u53d6value\u7684\u952e\u503c\n     */\n    public static final Object get(String key){\n        r.lock();\n        try{\n            return map.get(key);\n        }finally{\n            r.unlock();\n        }\n    }\n\n    public static final Object put(String key,Object value){\n        // \u5f53\u83b7\u53d6\u5230\u4e86\u5199\u9501\u7684\u65f6\u5019\uff0c\u6211\u4eec\u6240\u6709\u7684\u8bfb\u9501\u5305\u62ec\u5176\u4ed6\u7684\u5199\u9501\u90fd\u4f1a\u88ab\u963b\u585e\n        w.lock();\n        try{\n            return map.put(key,value);\n        }finally{\n            w.unlock();\n        }\n    }\n\n    // \u6e05\u7a7a\u6240\u6709\u5185\u5bb9\n    public static final void clear(){\n        w.lock();\n        try{\n            map.clear();\n        }finally{\n            w.unlock();\n        }\n    }\n}\n</code></pre> <p>\u56e0\u4e3a <code>HashMap</code> \u662f\u975e\u7ebf\u7a0b\u5b89\u5168\u7684\uff0c\u6211\u4eec\u8fd9\u91cc\u4f7f\u7528\u4e86\u8bfb\u5199\u9501\u6765\u4fdd\u8bc1\u7ebf\u7a0b\u7684\u5b89\u5168\u6027\u3002</p>"},{"location":"Tech/Concurrency/Lock/#_13","title":"\u8bfb\u5199\u9501\u7684\u5b9e\u73b0","text":"<p>\u5982\u679c\u6ca1\u6709\u7279\u522b\u58f0\u660e\uff0c\u8bfb\u5199\u9501\u90fd\u662f <code>ReentrantReadWriteLock</code>\uff0c\u4e5f\u5c31\u662f\u8bf4\u5141\u8bb8\u91cd\u8fdb\u5165\u7684\u8bfb\u5199\u9501\u3002</p>"},{"location":"Tech/Concurrency/Lock/#_14","title":"\u8bfb\u5199\u9501\u7684\u8bbe\u8ba1","text":"<p>\u5728\u4e0a\u8ff0\u7684\u91cd\u5165\u9501\u7684\u8bbe\u8ba1\u4e2d\uff0c\u6211\u4eec\u660e\u786e\u7684\u77e5\u9053\u4e86\uff0c\u6211\u4eec\u7684\u8bfb\u5199\u9501\u662f\u57fa\u4e8e <code>AQS</code> \u6765\u5b9e\u73b0\u7684\u3002\u73b0\u5728\u7684\u8bfb\u5199\u9501\uff0c\u6211\u4eec\u4e5f\u662f\u57fa\u4e8e <code>AQS</code> \u6765\u5b9e\u73b0\u7684\u3002\u800c\u4f5c\u4e3a\u8bfb\u5199\u9501\uff0c\u6211\u4eec\u9700\u8981\u7684\u4e00\u4e2a\u5173\u952e\u6027\u8d28\u5c31\u662f \u8bfb\u5199\u9501\u7684\u81ea\u5b9a\u4e49\u540c\u6b65\u5668\u9700\u8981\u5728\u540c\u6b65\u72b6\u6001\uff08\u4e00\u4e2a\u6574\u578b\u53d8\u91cf\uff09\u4e0a\u7ef4\u62a4\u591a\u4e2a\u8bfb/\u5355\u4e2a\u5199\u7684\u72b6\u6001</p> <p>\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u73b0\u5728\u8981\u5229\u7528\u5230 \u4f4d\u8fd0\u7b97 \u6765\u8ba9\u5355\u4e2a\u6574\u578b\u53d8\u91cf\u652f\u6301\u591a\u4e2a\u8bfb\u7ebf\u7a0b\u548c\u4e00\u4e2a\u5199\u7ebf\u7a0b\u3002\u6211\u4eec\u53ef\u4ee5\u770b\u4e0b\u9762\u7684\u4ee3\u7801:</p> <p></p> <p>\u4e0a\u9762\u7ef4\u62a4\u7684\u4e00\u4e2a\u8bfb\u5199\u9501\u7684\u53d8\u91cf\u53ef\u4ee5\u660e\u663e\u7684\u770b\u5230\uff0c\u6211\u4eec\u9ad8<code>16</code>\u4f4d\u662f\u8bfb\u9501\u7684\u72b6\u6001\uff0c\u4f4e<code>16</code>\u4f4d\u662f\u5199\u9501\u7684\u72b6\u6001\u3002\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u5f88\u597d\u7684\u5b9e\u73b0\u8bfb\u5199\u9501\u7684\u529f\u80fd\u3002</p>"},{"location":"Tech/Concurrency/Lock/#_15","title":"\u5199\u9501\u7684\u83b7\u53d6\u4e0e\u91ca\u653e","text":"<pre><code>protected final boolean tryAcquire(int acquires){\n    Thread current = Thread.currentThread();\n    int c = getState();\n    // w \u8868\u793a\u7684\u662f\u8bfb\u9501\u7684\u6570\u76ee/\u72b6\u6001\n    int w = exclusiveCount(c);\n    if(c!=0){\n        // \u8bf4\u660e\u5f53\u524d\u5df2\u7ecf\u6709\u7ebf\u7a0b\u83b7\u53d6\u5230\u4e86\u5199\u9501\n        if( w==0 || current != getExclusiveOwnerThread()){\n            return false;\n        }\n\n        if(w + exclusiveCount(acquires) &gt; MAX_COUNT){\n            throw new Error(\"Maximum lock count exceeded\");\n        }\n        setState(c + acquires);\n        return true;\n    }\n\n    if(writeShouldBlock()||!compareAndSetState(c,c+acquires)){\n        return false;\n    }\n\n    setExclusiveOwnerThread(current);\n    return true;\n}\n</code></pre> <p>\u6211\u4eec\u770b\u4e0a\u9762\u7684\u4ee3\u7801\uff0c\u9996\u5148\u8981\u77e5\u9053\u7684\u662f \u5728\u5199\u9501\u4e2d\uff0c\u5b83\u662f\u6392\u4ed6\u9501\u5e76\u4e14\u662f \u5141\u8bb8\u91cd\u5165\u9501\u7684\u3002\u6240\u4ee5\u6211\u4eec\u5206\u6790\u4e0a\u8ff0\u7684\u4ee3\u7801\uff0c\u5206\u4e3a\u4ee5\u4e0b\u7684\u51e0\u79cd<code>cases</code>:</p> <ul> <li>Case1 : \u5982\u679c\u8fd9\u4e2a\u9501\u6ca1\u6709\u88ab\u5360\u7528\u8fc7\uff0c\u5e76\u4e14\u4e0d\u662f <code>writeShouldBlock</code> \u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u83b7\u53d6\u5230\u9501<ul> <li>Case 1.1 : \u5018\u82e5\u5b58\u5728\u8bfb\u9501\uff0c\u90a3\u4e48\u6211\u4eec\u4e5f\u662f\u4e0d\u80fd\u83b7\u53d6\u5230\u5199\u9501\u7684\u3002 <code>c!=0 &amp;&amp; w==0</code>; </li> </ul> </li> <li> <p>Case2 : \u5982\u679c\u5f53\u524d\u7ebf\u7a0b\u5df2\u7ecf\u83b7\u53d6\u5230\u4e86\u5199\u9501\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u7ee7\u7eed\u83b7\u53d6\u9501\u3002</p> <ul> <li>Case2.1 : \u5982\u679c\u5f53\u524d\u7ebf\u7a0b\u5df2\u7ecf\u83b7\u5f97\u8fc7\u5199\u9501\uff0c\u4f46\u662f\u5f53\u524d\u7ebf\u7a0b\u4e0d\u662f\u5199\u9501\u7684\u62e5\u6709\u8005\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u4e0d\u80fd\u83b7\u53d6\u9501\u3002</li> <li>Case2.2 : \u5982\u679c\u5f53\u524d\u7ebf\u7a0b\u5df2\u7ecf\u83b7\u5f97\u8fc7\u5199\u9501\uff0c\u4f46\u662f\u5f53\u524d\u7ebf\u7a0b\u662f\u5199\u9501\u7684\u62e5\u6709\u8005\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u7ee7\u7eed\u83b7\u53d6\u9501\u3002\u800c\u4e14\u9700\u8981\u91cd\u65b0\u8bb0\u5f55\u91cd\u5165\u7684\u6b21\u6570 <code>setState(c + acquires)</code></li> </ul> </li> </ul> <p>\u8bb0\u5f97\u8fdb\u884c\u4e00\u4e9b\u8fb9\u754c\u5904\u7406</p>"},{"location":"Tech/Concurrency/Lock/#_16","title":"\u8bfb\u9501\u7684\u83b7\u53d6\u4e0e\u91ca\u653e","text":"<pre><code>protected final int tryAcquireShared(int unused){\n    for(;;){\n        int c = getState();\n        int nextc = c + (1&lt;&lt;16);\n        if(nextc &lt; c)\n            throw new Error(\"Maximum lock count exceeded\");\n        // \u5b58\u5728\u5199\u9501 \u5e76\u4e14\u5f53\u524d\u7684 owner \u4e0d\u662f\u5f53\u524d\u7ebf\u7a0b\n        if(exclusiveCount(c) != 0 &amp;&amp; owner != Thread.currentThread()){\n            return -1;\n        }\n\n        // \u66f4\u65b0\u8bfb\u9501\u7684\u72b6\u6001\uff0c\u65f6\u523b\u4fdd\u8bc1\u7ebf\u7a0b\u5b89\u5168\n        if(compareAndSetState(c,nextc)){\n            return 1;\n        }\n    }\n}\n</code></pre> <p>\u8bfb\u9501\u662f\u4e00\u4e2a\u652f\u6301\u91cd\u8fdb\u5165\u7684\u5171\u4eab\u9501\uff0c\u5b83\u80fd\u591f\u88ab\u591a\u4e2a\u7ebf\u7a0b\u540c\u65f6\u83b7\u53d6\uff0c\u5728\u6ca1\u6709\u5176\u4ed6\u5199\u7ebf\u7a0b\u8bbf\u95ee\u7684\u65f6\u5019\uff0c\u8bfb\u9501\u603b\u662f\u53ef\u4ee5\u88ab\u6210\u529f\u7684\u83b7\u53d6\u3002</p>"},{"location":"Tech/Concurrency/Lock/#_17","title":"\u9501\u964d\u7ea7","text":"<p>BackGround : \u9501\u964d\u7ea7\u662f\u6307\u5199\u9501\u964d\u7ea7\u4e3a\u8bfb\u9501\uff0c\u800c\u4e0d\u662f\u5347\u7ea7\u3002\u8fd9\u4e2a\u662f\u4e3a\u4e86\u4fdd\u8bc1\u6570\u636e\u7684\u4e00\u81f4\u6027\u3002</p> <p>Case1 : \u5982\u679c\u5f53\u524d\u7684\u7ebf\u7a0b\u5b58\u5728\u5199\u9501\uff0c\u7136\u540e\u5c06\u5176\u91ca\u653e\uff0c\u6700\u540e\u83b7\u5f97\u8bfb\u9501\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u4e0d\u662f\u9501\u964d\u7ea7</p> <p>Case2 : \u628a\u6301\u4f4f\u5f53\u524d\u7684\u5199\u9501\uff0c\u518d\u83b7\u53d6\u5230\u8bfb\u9501\uff0c\u7136\u540e\u518d\u91ca\u653e\u6389\u539f\u5148\u7684\u5199\u9501\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u624d\u662f\u9501\u964d\u7ea7</p> <p>\u6765\u770b\u4e00\u6bb5\u9501\u964d\u7ea7\u7684\u4ee3\u7801:</p> <pre><code>public void processData{\n    readLock.lock();\n    if(!update){\n        // \u5148\u91ca\u653e\u8bfb\u9501\n        readLock.unlock();\n        // \u9501\u964d\u7ea7\u4ece\u5199\u9501\u7684\u83b7\u53d6\u5f00\u59cb\n        writeLock.lock();\n        try{\n            if(!update){\n                // \u51c6\u5907\u6570\u636e\uff0c\u65f6\u523b\u4fdd\u6301\u963b\u585e\n                update = true;\n            }\n            readLock.lock();\n        }finally{\n            writeLock.unlock();\n        }\n        // \u9501\u964d\u7ea7\u5b8c\u6210\uff0c\u91ca\u653e\u5199\u9501\n    }\n    try{\n\n    }finally{\n        readLock.unlock();\n    }\n}\n</code></pre> <p>\u9501\u964d\u7ea7\u7684\u672c\u8d28 :  \u9501\u964d\u7ea7\u7684\u672c\u8d28\u662f\u91ca\u653e\u6389\u72ec\u5360\u9501\uff0c\u4f7f\u5176\u4ed6\u7ebf\u7a0b\u53ef\u4ee5\u83b7\u53d6\u5230\u8bfb\u9501\uff0c\u63d0\u9ad8\u5e76\u53d1\uff0c\u800c\u5f53\u524d\u7ebf\u7a0b\u6301\u6709\u8bfb\u9501\u6765\u4fdd\u8bc1\u6570\u636e\u7684\u53ef\u89c1\u6027\u3002</p> <p>\u6211\u4eec\u4e0a\u8ff0\u7684 <code>update</code> \u53d8\u91cf\u662f\u7528 <code>volatile</code> \u4fee\u9970\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u5176\u4ed6\u6240\u6709\u7ebf\u7a0b\u90fd\u662f\u53ef\u89c1\u8fd9\u4e2a\u53d8\u91cf\u7684\u3002 \u5f53\u6570\u636e\u53d1\u751f\u53d8\u5316\u7684\u65f6\u5019\uff0c<code>update</code> \u4f1a\u53d8\u6210 <code>false</code>.\u4e5f\u5c31\u662f\u8bf4\u4f1a\u8fdb\u5165<code>if</code>\u4e4b\u540e\u7684\u5b50\u53e5\u3002\u6211\u4eec\u91ca\u653e\u8bfb\u9501\uff0c\u5f00\u59cb\u8fdb\u884c\u4e00\u4e2a\u6a21\u62df\u9501\u964d\u7ea7\u7684\u8fc7\u7a0b\u3002\u6211\u4eec\u5148\u83b7\u53d6\u5230\u5199\u9501\uff0c\u7136\u540e\u83b7\u53d6\u5230\u8bfb\u9501\u4e4b\u540e\uff0c\u7b49\u6240\u6709\u8fc7\u7a0b\u5b8c\u6210\u4e4b\u540e\uff0c\u901a\u8fc7<code>finally</code>\u5b50\u53e5\u6765\u5b8c\u6210\u5199\u9501\u7684\u91ca\u653e\u3002</p> <p>\u601d\u8003\u51e0\u4e2a\u95ee\u9898:</p> <ul> <li> <p>\u9501\u964d\u7ea7\u7684\u76ee\u7684\u662f\u4ec0\u4e48\uff1f </p> <ul> <li>\u63d0\u9ad8\u7cfb\u7edf\u6027\u80fd : \u5728\u4e00\u4e9b\u64cd\u4f5c\u4e2d\uff0c\u67d0\u4e9b\u7ebf\u7a0b\u53ea\u9700\u8981\u8f83\u4f4e\u7ea7\u522b\u7684\u9501\uff08\u5982\u8bfb\u9501\uff09\uff0c\u4f46\u662f\u5728\u64cd\u4f5c\u5f00\u59cb\u65f6\u53ef\u80fd\u83b7\u5f97\u4e86\u8f83\u9ad8\u7ea7\u522b\u7684\u9501\uff08\u5982\u5199\u9501\uff09\u3002\u5982\u679c\u5728\u64cd\u4f5c\u8fc7\u7a0b\u4e2d\u6ca1\u6709\u4fee\u6539\u5171\u4eab\u8d44\u6e90\uff0c\u964d\u7ea7\u4e3a\u8f83\u5f31\u7684\u9501\uff08\u5982\u4ece\u5199\u9501\u964d\u7ea7\u4e3a\u8bfb\u9501\uff09\u53ef\u4ee5\u63d0\u9ad8\u5e76\u53d1\u6027\uff0c\u5141\u8bb8\u66f4\u591a\u7684\u7ebf\u7a0b\u540c\u65f6\u8bbf\u95ee\u8d44\u6e90\uff0c\u4ece\u800c\u63d0\u5347\u7cfb\u7edf\u6027\u80fd\u3002</li> <li>\u51cf\u5c11\u6b7b\u9501\u7684\u53ef\u80fd\u6027 : \u9501\u964d\u7ea7\u53ef\u4ee5\u5728\u67d0\u4e9b\u573a\u666f\u4e2d\u51cf\u5c11\u6b7b\u9501\u7684\u53d1\u751f\u3002\u5982\u679c\u591a\u4e2a\u7ebf\u7a0b\u6301\u6709\u4e0d\u540c\u7684\u9501\u5e76\u8bd5\u56fe\u83b7\u53d6\u5bf9\u65b9\u7684\u9501\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6b7b\u9501\u3002\u5728\u4e00\u4e9b\u7279\u5b9a\u7684\u573a\u666f\u4e0b\uff0c\u5c06\u9501\u964d\u7ea7\u53ef\u4ee5\u907f\u514d\u4e92\u76f8\u7b49\u5f85\u7684\u60c5\u51b5\uff0c\u4ece\u800c\u964d\u4f4e\u6b7b\u9501\u7684\u98ce\u9669\u3002\u56e0\u4e3a\u6211\u4eec\u5982\u679c\u76f4\u63a5\u91ca\u653e\u5199\u9501\uff0c\u53ef\u80fd\u4f1a\u7acb\u9a6c\u6709\u5176\u4ed6\u7684\u7ebf\u7a0b\u8fdb\u5165\u7ade\u4e89\u5230\u8fd9\u4e2a\u5171\u4eab\u8d44\u6e90\uff0c\u7ed9\u5b83\u4e0a\u4e86\u5199\u9501\uff0c\u5f88\u96be\u4fdd\u8bc1\u6570\u636e\u7684\u4e00\u81f4\u6027</li> </ul> </li> <li> <p>\u9501\u964d\u7ea7\u4e2d\u8bfb\u53d6\u9501\u662f\u5426\u5fc5\u8981 ? </p> <ul> <li>\u5fc5\u8981\uff0c\u56e0\u4e3a\u4e3b\u8981\u662f \u4e3a\u4e86\u4fdd\u8bc1\u6570\u636e\u7684\u53ef\u89c1\u6027,\u5982\u679c\u5f53\u524d\u7ebf\u7a0b\u4e0d\u83b7\u53d6\u8bfb\u9501\uff0c\u800c\u662f\u76f4\u63a5\u91ca\u653e\u5199\u9501\u3002\u5047\u8bbe\u6b64\u65f6\u523b\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u83b7\u53d6\u4e86\u5199\u9501\uff0c\u5e76\u4e14\u4fee\u6539\u4e86\u6570\u636e\uff0c\u90a3\u4e48\u5f53\u524d\u7ebf\u7a0b\u662f\u65e0\u6cd5\u611f\u77e5\u5230\u7ebf\u7a0b\u7684\u6570\u636e\u53d8\u5316\u3002\u4f46\u662f\u5982\u679c\u6211\u4eec\u8fdb\u884c\u4e86 \u52a0\u4e00\u6b65\u8bfb\u9501 \u4e4b\u540e\uff0c\u5c31\u662f\u7ed9\u60f3\u83b7\u53d6\u5199\u9501\u7684\u7ebf\u7a0b\u8fdb\u884c\u4e86\u4e00\u4e2a\u963b\u585e\uff0c\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u5c31\u53ef\u4ee5\u4fdd\u8bc1\u6570\u636e\u7684\u4e00\u81f4\u6027\u3002</li> </ul> </li> </ul>"},{"location":"Tech/Concurrency/Lock/#locksupport","title":"LockSupport \u5de5\u5177","text":"<p><code>LockSupport</code> \u662f\u4e00\u4e2a\u975e\u5e38\u65b9\u4fbf\u7684\u5de5\u5177\uff0c\u5b83\u53ef\u4ee5\u5728\u7ebf\u7a0b\u4e2d\u6302\u8d77\u548c\u5524\u9192\u7ebf\u7a0b\u3002\u6211\u4eec\u53ef\u4ee5\u770b\u4e0b\u9762\u7684\u4ee3\u7801:</p> <p><code>LockSupport</code> \u5de5\u5177\u7c7b\u63d0\u4f9b\u7684\u5e38\u89c1\u65b9\u6cd5,\u4e3b\u8981\u5c31\u662f\u4e3a\u4e86\u65b9\u4fbf\u5524\u9192/\u963b\u585e\u7ebf\u7a0b.</p> <p></p> <p>\u5728 <code>Java 6</code> \u4e2d\uff0c\u7ed9\u4e0a\u8ff0\u7684<code>park</code>\u6709\u5173\u7684\u65b9\u6cd5\u4e2d\uff0c\u90fd\u52a0\u5165\u4e86\u4e00\u4e2a <code>Object block</code> \u53c2\u6570\uff0c\u7528\u4e8e\u5b9e\u73b0\u963b\u585e\u5f53\u8d77\u554a\u4f60\u7ebf\u7a0b\u7684\u529f\u80fd\uff0c\u5176\u4e2d\u7684\u8fd9\u4e2a\u53c2\u6570\u9002\u7528\u6765\u6807\u8bc6\u5f53\u524d\u7ebf\u7a0b\u5728\u7b49\u5f85\u7684\u5bf9\u8c61\uff0c\u8be5\u5bf9\u8c61\u662f\u7528\u6765\u95ee\u9898\u7684\u6392\u67e5\u548c\u7cfb\u7edf\u76d1\u63a7\u3002</p>"},{"location":"Tech/Concurrency/Lock/#condition","title":"Condition \u6761\u4ef6","text":""},{"location":"Tech/Concurrency/Lock/#wait-notify","title":"\u4e3a\u4ec0\u4e48\u6240\u6709\u5bf9\u8c61\u90fd\u6709 <code>wait</code> \u548c <code>notify</code> \u65b9\u6cd5\uff1f","text":"<p>\u4efb\u610f\u4e00\u4e2a Java \u5bf9\u8c61\uff0c\u90fd\u62e5\u6709\u4e00\u7ec4\u76d1\u89c6\u5668\u65b9\u6cd5\uff0c\u4e3b\u8981\u5305\u62ec <code>wait()</code>,<code>wait(long timeout)</code>,<code>notify()</code>,<code>notifyAll()</code> \u65b9\u6cd5\uff0c\u8fd9\u4e9b\u65b9\u6cd5\u7528\u6765\u548c<code>synchronized</code> \u540c\u6b65\u5173\u952e\u5b57\u914d\u5408\uff0c\u53ef\u4ee5\u5b9e\u73b0\u7b49\u5f85/\u901a\u77e5\u6a21\u5f0f\u3002</p> <p>\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u7406\u89e3\uff0c\u6211\u4eec\u7684 <code>synchronized</code> \u5173\u952e\u5b57\u7684\u4f5c\u7528\u672c\u8d28\u4e0a\u5c31\u662f\uff0c\u5bf9\u67d0\u4e9b\u9009\u4e2d\u7684\u5bf9\u8c61\u8fdb\u884c\u52a0\u9501\uff0c\u800c <code>wait</code> \u548c <code>notify</code> \u65b9\u6cd5\u5c31\u662f\u5bf9\u8fd9\u4e2a\u5bf9\u8c61\u8fdb\u884c\u7b49\u5f85\u548c\u901a\u77e5\u7684\u64cd\u4f5c\u3002</p> <p>\u5047\u8bbe\u6211\u4eec\u7528 <code>Syncronized(Obj)</code> \u90a3\u4e48\u6240\u6709\u8fdb\u5165\u8fd9\u4e2a\u4ee3\u7801\u5757\u7684\u7ebf\u7a0b\u4f1a\u88ab\u963b\u585e\uff0c\u6b64\u65f6\u6211\u4eec\u7528 <code>Obj.wait()</code> \u65b9\u6cd5\uff0c\u8fd9\u4e2a\u7ebf\u7a0b\u5c31\u4f1a\u88ab\u963b\u585e\uff0c\u76f4\u5230\u5176\u4ed6\u7ebf\u7a0b\u8c03\u7528 <code>Obj.notify()</code> \u65b9\u6cd5\uff0c\u8fd9\u4e2a\u7ebf\u7a0b\u624d\u4f1a\u88ab\u5524\u9192\u3002</p> <p>\u8fd9\u4e2a\u662f <code>Object Monitor Methods</code> \u548c <code>Condition</code> \u7684\u533a\u522b:</p> <p></p> <p>\u6211\u4eec\u53ef\u4ee5\u770b\u5230 <code>Condition</code> \u7684\u65b9\u6cd5\u66f4\u52a0\u7684\u4e30\u5bcc\uff0c\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u53ef\u4ee5\u66f4\u52a0\u7684\u7075\u6d3b\u7684\u63a7\u5236\u7ebf\u7a0b\u7684\u7b49\u5f85\u548c\u5524\u9192\u3002</p>"},{"location":"Tech/Concurrency/Lock/#condition_1","title":"Condition \u7684\u63a5\u53e3\u4e0e\u793a\u4f8b","text":"<p>\u672c\u8d28\u4e0a\uff0c<code>Condition</code> \u8fd8\u662f\u63d0\u4f9b\u7684\u4e3a <code>\u7b49\u5f85/\u901a\u77e5</code> \u4e24\u79cd\u65b9\u6cd5\u3002\u5f53\u524d\u7ebf\u7a0b\u9700\u8981\u8c03\u7528\u8fd9\u4e9b\u65b9\u6cd5\u90fd\u662f\u597d\uff0c\u9700\u8981\u63d0\u524d\u83b7\u53d6\u5230<code>Condition</code>\u5bf9\u8c61\u5173\u8054\u5230\u7684\u9501\u3002<code>Condition</code>\u5bf9\u8c61\u662f\u7531<code>Lock</code>\u5bf9\u8c61\u521b\u5efa\u51fa\u6765\u7684\uff0c\u6362\u53e5\u8bdd\u8bf4\uff0c<code>Condition</code>\u662f\u4f9d\u8d56<code>Lock</code>\u5bf9\u8c61\u7684\u3002</p> <pre><code>Lock lock = new ReentrantLock();\nCondition condition = lock.newCondition();\n\npublic void conditionWait() throws InterruptedException{\n    lock.lock();\n    try{\n        condition.await();\n    }finally{\n        lock.unlock();\n    }\n}\n\npublic void conditionSignal(){\n    lock.lock();\n    try{\n        condition.signal();\n    }finally{\n        lock.unlock();\n    }\n}\n</code></pre> <p>\u6211\u4eec\u4e00\u822c\u90fd\u4f1a\u628a<code>Condition</code> \u5bf9\u8c61\u4f5c\u4e3a\u6210\u5458\u53d8\u91cf\uff0c\u65b9\u4fbf\u8c03\u7528\u3002\u90a3\u4e48\u4f18\u52bf\u5728\u4e8e\uff0c\u6211\u4eec\u53ef\u4ee5\u66f4\u52a0\u7075\u6d3b\u7684\u63a7\u5236\u7ebf\u7a0b\u7684\u7b49\u5f85\u548c\u5524\u9192\u3002\u4e5f\u5c31\u662f\u8bf4\u53ef\u4ee5\u591a\u6761\u4ef6\u7684\u8fdb\u884c\u7b49\u5f85\u548c\u5524\u9192\u3002\u4f46\u6211\u4eec\u4e0a\u9762\u63d0\u5230\u7684\u57fa\u4e8e\u5bf9\u8c61\u672c\u8eab\u7684 <code>wait</code> \u548c <code>notify</code> \u65b9\u6cd5\uff0c\u53ea\u80fd\u5b9e\u73b0\u4e00\u79cd\u7b49\u5f85\u548c\u5524\u9192\u7684\u64cd\u4f5c\u3002</p>"},{"location":"Tech/Concurrency/Lock/#boundedqueue-condition","title":"\u901a\u8fc7\u4e00\u4e2a<code>BoundedQueue</code> \u6765\u7406\u89e3 <code>Condition</code> \u7684\u4f7f\u7528","text":"<p>\u5148\u6765\u4ecb\u7ecd\u4e00\u4e0b\u4e0a\u9762\u662f\u6709\u754c\u961f\u5217\uff0c\u6709\u754c\u961f\u5217\u5c31\u662f\u4e00\u4e2a\u7279\u6b8a\u7684\u961f\u5217\uff0c\u5f53\u961f\u5217\u4e3a\u7a7a\u7684\u65f6\u5019\uff0c\u961f\u5217\u7684\u83b7\u53d6\u64cd\u4f5c\u4f1a\u963b\u585e\u83b7\u53d6\u7ebf\u7a0b\uff0c\u76f4\u5230\u961f\u5217\u4e2d\u6709\u65b0\u7684\u5143\u7d20\u51fa\u73b0\u3002\u5f53\u961f\u5217\u5df2\u7ecf\u6ee1\u7684\u65f6\u5019\uff0c\u961f\u5217\u7684\u63d2\u5165\u64cd\u4f5c\u4e5f\u4f1a\u963b\u585e\u63d2\u5165\u7ebf\u7a0b\uff0c\u76f4\u5230\u961f\u5217\u4e2d\u6709\u7a7a\u7684\u4f4d\u7f6e\u51fa\u73b0\u3002\u5176\u5b9e\u4e5f\u5c31\u662f\u901a\u8fc7\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\u6765\u5b9e\u73b0\u7684\u751f\u4ea7\u8005\u6d88\u8d39\u8005\u6a21\u578b\u3002\u8fbe\u5230\u63a7\u5236\u7ebf\u7a0b\u7684\u76ee\u7684\u3002</p> <pre><code>public class BoundedQueue&lt;T&gt;{\n    private Object[] items;\n\n    private int addIndex,removeIndex,count;\n    private Lock lock = new ReentrantLock();\n\n    // \u5728 `get` \u7684\u65f6\u5019\u8fdb\u884c\u7b49\u5f85\n    private Condition notEmpty = lock.newCondition();\n\n    // \u5728 `add` \u7684\u65f6\u5019\u8fdb\u884c\u7b49\u5f85\n    private Condition notFull = lock.newCondition();\n\n    public BoundedQueue(int size){\n        items = new Object[size];\n    }\n\n    // \u6dfb\u52a0\u4e00\u4e2a\u65b0\u7684\u5143\u7d20\uff0c\u5982\u679c\u6570\u7ec4\u6ee1\u4e86\uff0c\u5219\u6dfb\u52a0\u7ebf\u7a0b\u8fdb\u5165\u7b49\u5f85\u72b6\u6001\uff0c\u76f4\u5230\u6709\u65b0\u7684\u5143\u7d20\u52a0\u5165\n    public void add(T t) throws InterruptedException{\n        lock.lock();\n        try{\n            // \u5224\u65ad\u6b64\u65f6\u961f\u5217\u662f\u5426\u5df2\u7ecf\u6ee1\u4e86\n            while(count == items.length){\n                // \u961f\u5217\u5df2\u7ecf\u6ee1\u4e86\uff0c\u6dfb\u52a0\u7ebf\u7a0b\u8fdb\u5165\u7b49\u5f85\u72b6\u6001 -&gt; \u56e0\u4e3a notFull \u8fd9\u4e2acondition\u6240\u4ea7\u751f\u7684\u7b49\u5f85\n                notFull.await();\n            }\n            items[addIndex] = t;\n            if(++addIndex == items.length){\n                addIndex = 0;\n            }\n            ++count;\n            notEmpty.signal();\n        }finally{\n            lock.unlock();\n        }\n    }\n\n\n    // \u7531\u5934\u90e8\u5220\u9664\u4e00\u4e2a\u5143\u7d20\uff0c\u5982\u679c\u6570\u7ec4\u4e3a\u7a7a\uff0c\u5219\u5220\u9664\u7ebf\u7a0b\u8fdb\u5165\u7b49\u5f85\u72b6\u6001\uff0c\u77e5\u9053\u6709\u65b0\u7684\u5143\u7d20\u52a0\u5165;\n    @SuppressWarnings(\"unchecked\")\n    public T remove() throws InterruptedException{\n        lock.lock();\n        try{\n            // \u5224\u65ad\u662f\u5426\u4e3a\u7a7a\n            while(count == 0){\n                // \u961f\u5217\u4e3a\u7a7a\uff0c\u5220\u9664\u7ebf\u7a0b\u8fdb\u5165\u7b49\u5f85\u72b6\u6001 -&gt; \u56e0\u4e3a notEmpty \u8fd9\u4e2acondition\u6240\u4ea7\u751f\u7684\u7b49\u5f85\n                notEmpty.await();\n            }\n\n            // \u6211\u4eec\u83b7\u53d6\u5230\u4e86 removeIndex \u7684\u5143\u7d20\n            Object x = items[removeIndex];\n            if(++removeIndex == items.length){\n                // \u8868\u793a\u6211\u4eec\u5df2\u7ecf\u5230\u4e86\u961f\u5217\u7684\u5c3e\u90e8\n                removeIndex = 0;\n            }\n            --count;\n            // \u76f4\u63a5\u5524\u9192\u4e0a\u9762\u7684 add \u7ebf\u7a0b\n            notFull.signal();\n            return (T)x;\n        }finally{\n            lock.unlock();\n        }\n    }\n\n\n}\n</code></pre> <p>\u5c31\u53ef\u4ee5\u8fd9\u6837\u7406\u89e3 <code>add</code> \u548c <code>remove</code> \u662f\u6709\u70b9\u7c7b\u4f3c\u5171\u8f6d\u7684\u64cd\u4f5c\uff0c\u4e92\u76f8\u53ef\u4ee5\u5524\u9192\u5bf9\u65b9\u3002</p>"},{"location":"Tech/Concurrency/Lock/#condition_2","title":"Condition \u7684\u5b9e\u73b0","text":"<p>\u5176\u5b9e\u5728\u7406\u89e3\u4e86 <code>Condition</code> \u548c <code>Object Monitor Methods</code> \u7684\u533a\u522b\u4e4b\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f88\u597d\u7684\u7406\u89e3 <code>Condition</code> \u7684\u5b9e\u73b0\u4e86\u3002 \u5176\u5b9e\u5c31\u662f\u5728\u6bcf\u6b21\u521b\u5efa <code>condition</code> \u5bf9\u8c61\u7684\u65f6\u5019\uff0c\u90fd\u4f1a\u5355\u72ec\u7684\u7ef4\u62a4\u4e00\u4e2a\u7b49\u5f85\u961f\u5217\uff0c\u8fd9\u4e2a\u961f\u5217\u662f\u7528\u6765\u5b58\u653e\u7b49\u5f85\u7684\u7ebf\u7a0b\u7684\u3002</p> <p>\u540c\u6b65\u961f\u5217\u548c\u7b49\u5f85\u961f\u5217\u4e2d\u7684\u8282\u70b9\u7c7b\u578b\u90fd\u662f AbstractQueueSynchronizer.Node</p> <p></p> <p>\u8fd9\u91cc\u5c31\u4e0d\u591a\u591a\u8d58\u8ff0\u4e86\u3002\u6709\u7a7a\u518d\u6765\u5199;</p>"},{"location":"Tech/Concurrency/Lock/#_18","title":"\u603b\u7ed3","text":"<p>\u4f46\u662f\u6211\u4eec\u901a\u8fc7\u5bf9\u9501\u7684\u5206\u6790\uff0c\u5176\u5b9e\u5f88\u7b80\u5355\uff0c\u5c31\u662f\u5206\u6210\u4e86\u4e24\u90e8\u5206\uff0c\u540c\u6b65\u961f\u5217\u548c\u7b49\u5f85\u961f\u5217\u3002\u5206\u522b\u5bf9\u5e94\u7684\u5c31\u662f <code>Lock</code> \u548c <code>condition</code> \u4e24\u90e8\u5206\u3002\u540c\u6b65\u961f\u5217\u5c31\u662f\u7528\u6765\u83b7\u53d6\u5df2\u7ecf\u83b7\u53d6\u5230\u9501\u7684\u7ebf\u7a0b\uff0c\u7b49\u5f85\u961f\u5217\u5c31\u662f\u7528\u6765\u5b58\u653e\u7b49\u5f85\u7684\u7ebf\u7a0b\u3002\u90a3\u4e48\u4e0d\u540c\u7684 <code>condition</code> \u5bf9\u8c61\u5c31\u662f\u7ef4\u62a4\u4e0d\u540c\u7684\u7b49\u5f85\u961f\u5217\u3002\u6211\u4eec\u65e0\u8bba\u5728\u54ea\u4e2a\u7b49\u5f85\u961f\u5217\u4e2d\u8fdb\u884c\u4e86 <code>signal</code> \u7684\u64cd\u4f5c\uff0c\u90fd\u4f1a\u5524\u9192\u7b49\u5f85\u961f\u5217\u4e2d\u7684\u7b2c\u4e00\u4e2a\u7ebf\u7a0b\u3002\u5e76\u4e14\u5c06\u5176\u4ece\u7b49\u5f85\u961f\u5217\u4e2d\u79fb\u9664\uff0c\u7136\u540e\u52a0\u5165\u5230\u540c\u6b65\u961f\u5217\u4e2d\u3002\u8fd9\u4e2a\u65f6\u5019\u5c31\u53ef\u4ee5\u8fdb\u884c\u8d44\u6e90\u7684\u8bbf\u95ee\u4e86\u3002</p>"},{"location":"Tech/Redis/Easy/Introduce/","title":"Introduce","text":""},{"location":"Tech/Redis/Easy/Introduce/#introduction","title":"Introduction","text":"<p>Redis \u662f\u4e00\u4e2a\u540e\u7aef\u5f00\u53d1\u5e38\u7528\u7684\u4e2d\u95f4\u4ef6\uff0c\u7528\u4e8e\u7f13\u5b58\u6570\u636e\u5e93\u3002\u5b83\u7684\u5168\u79f0\u5176\u5b9e\u662f (Remote Dictionary Server) \u8fdc\u7a0b\u5b57\u5178\u670d\u52a1\u3002</p> <p>\u4e3a\u4ec0\u4e48\u4f1a\u5f15\u5165\u5462\uff1f</p> <ul> <li>\u5206\u5e03\u5f0f\u7f13\u5b58\uff0c\u63d0\u9ad8\u6570\u636e\u8bbf\u95ee\u901f\u5ea6\uff0c\u5206\u62c5Mysql\u7684\u538b\u529b</li> <li>\u56e0\u4e3a\u6211\u4eec\u5e73\u65f6\u7684\u5e94\u7528\u57fa\u672c\u662f\u90fd\u662f\u8bfb\u591a\u5199\u5c11\uff0c\u90a3\u4e48Mysql\u66f4\u4fa7\u91cd\u4e8e\u5b58\u50a8\uff0c\u4e00\u81f4\u6027\uff0c\u786c\u76d8\uff0c\u800cRedis\u66f4\u4fa7\u91cd\u4e8e\u8bfb\u53d6\uff0c\u6240\u4ee5\u53ef\u4ee5\u63d0\u9ad8\u6548\u7387</li> </ul>"},{"location":"Tech/Redis/Easy/Introduce/#-redis-memory-mysql-disk","title":"- \u786c\u4ef6\u89d2\u5ea6 : Redis -&gt; memory ,Mysql -&gt; disk","text":""},{"location":"Tech/Web/Asyn/","title":"Asynchronous with Synchronous","text":"<p>\u5f02\u6b65\u4e0e\u540c\u6b65\u7f16\u7a0b</p> <ul> <li>\u9996\u5148\u533a\u5206\u4e00\u4e0b\u6982\u5ff5\uff0c\u4ec0\u4e48\u662f\u540c\u6b65/\u5f02\u6b65\uff1f</li> <li>\u540c\u6b65: \u8868\u793a\u7684\u662f\u7a0b\u5e8f\u6309\u7167\u987a\u5e8f\u6267\u884c</li> <li>\u5f02\u6b65: \u8868\u793a\u7684\u662f\u7a0b\u5e8f\u4e0d\u6309\u7167\u987a\u5e8f\u6267\u884c,\u4e5f\u5c31\u662f\u4e3b\u7ebf\u7a0b\u53d1\u5c04\u4e00\u4e2a\u5b50\u7ebf\u7a0b\u6765\u6267\u884c\uff0c\u8fd9\u6837\u7684\u6548\u7387\u66f4\u9ad8 </li> </ul> <p>\u4e0b\u9762\u7ed9\u5f20\u56fe\u6bd4\u8f83\u597d\u7406\u89e3:</p> <p></p> <p>\u5177\u4f53\u6765\u7406\u89e3\u4e00\u4e0b\u5f02\u6b65\u7f16\u7a0b\uff1a \u5f02\u6b65\u7f16\u7a0b\u7684\u672c\u8d28\u662f\u4ec0\u4e48\uff1f \u672c\u8d28\u662f\u4ece\u4e3b\u7ebf\u7a0b\u53d1\u5c04\u5b50\u7ebf\u7a0b\uff0c\u56e0\u4e3a\u5b50\u7ebf\u7a0b\u662f\u4e0d\u4f1a\u5f71\u54cd\u4e3b\u7ebf\u7a0b\uff0c\u5728\u64cd\u4f5c\u7cfb\u7edf\u91cc\u5b66\u8fc7\u5bf9\u4e8e\u5b50\u7ebf\u7a0b\u6765\u8bf4\uff0c\u6211\u4eec\u8fdb\u884c\u4e86<code>fork</code>\u64cd\u4f5c\uff0c\u4e8c\u8005\u5171\u4eab\u4ee3\u7801\uff0c\u6570\u636e\u7b49\"\u76f8\u5bf9\u9759\u6001\"\u7684\u8d44\u6e90\uff0c\u800c\u7ef4\u62a4\u5c5e\u4e8e\u5404\u81ea\u7684\u5bc4\u5b58\u5668\uff0c\u6808\uff0cPC\u7b49\u201c\u76f8\u5bf9\u52a8\u6001\u201d\u7684\u8d44\u6e90\u3002\u6216\u8005\u8bf4\u8fd9\u6837\u7406\u89e3\uff0c\u7ebf\u7a0b\u662f\u53ea\u4eab\u6709\u81ea\u5df1\u7684\u72ec\u7acb\u52a8\u6001\u8d44\u6e90\uff0c\u4f46\u90a3\u4e9b\u9759\u6001\u7684\u8d44\u6e90\u5c31\u662f\u5171\u4eab\u7684\u4e86\u3002\u800c\u5728\u524d\u7aef\u7f16\u7a0b\u4e2d\uff0c\u6211\u4eec\u5728\u5904\u7406\u4e00\u4e9b\u7b80\u77ed\u3001\u5feb\u901f\u7684\u64cd\u4f5c\u65f6\u5019\uff0c\u5f80\u5f80\u5728\u4e3b\u7ebf\u7a0b\u4e2d\u5c31\u53ef\u4ee5\u5b8c\u6210\uff0c\u4e3b\u7ebf\u7a0b\u4f5c\u4e3a\u4e00\u4e2a\u7ebf\u7a0b\uff0c\u4e0d\u80fd\u63a5\u53d7\u591a\u65b9\u9762\u7684\u8bf7\u6c42\uff0c\u4e5f\u5c31\u662f\u8bf4\u5355\u4e2a\u4e8b\u4ef6\u6ca1\u6709\u5b8c\u6210\u7684\u65f6\u5019\uff0c\u662f\u4e0d\u4f1a\u5904\u7406\u5176\u4ed6\u7684\u8bf7\u6c42\u3002  \u6211\u4eec\u73b0\u5728\u6709\u4e00\u4e2a\u6309\u94ae\uff0c\u6309\u4e0b\u5c31\u4f1a\u5f62\u6210\u6b7b\u5faa\u73af\uff0c\u6574\u4e2a\u9875\u9762\u4f1a\u5931\u53bb\u54cd\u5e94\uff0c\u6240\u4ee5\u6211\u4eec\u8fd9\u79cd\u65f6\u5019\u5c31\u4e0d\u80fd\u4f7f\u7528\u4e3b\u7ebf\u7a0b\u6765\u5b8c\u6210\u8fd9\u4e2a\u4e8b\u4ef6\uff0c\u56e0\u4e3a\u53ef\u80fd\u4f1a\u5bfc\u81f4\u540e\u7eed\u4e8b\u4ef6\u7684<code>terminated</code>,\u56e0\u6b64\u6211\u4eec\u9009\u62e9\u4f7f\u7528\u5b50\u7ebf\u7a0b\u6765\u5e76\u884c\u5b8c\u6210\u8fd9\u4e2a\u4e8b\u4ef6\u3002\u6240\u4ee5\u6211\u4eec\u5c31\u8003\u8651\u4e86\u5f02\u6b65\u6765\u5904\u7406\uff0c\u7531\u4e8e\u5b50\u7ebf\u7a0b\u4e00\u65e6\u53d1\u5c04\u4e86\u5c31\u4f1a\u548c\u4e3b\u7ebf\u7a0b\u5931\u53bb\u540c\u6b65\uff0c\u65e0\u6cd5\u786e\u8ba4\u5b83\u7684\u7ed3\u679c\uff0c\u6240\u4ee5\u9700\u8981\u6709<code>callback</code>\u56de\u8c03\u51fd\u6570\u6765\u5904\u7406\u5b9e\u73b0\u5f02\u6b65\u4efb\u52a1\u7684\u7ed3\u679c\u5904\u7406\u3002</p> <p>\u8fd9\u4e2a\u4f8b\u5b50\u5176\u5b9e\u5c31\u662f\u5bf9\u4e8e<code>setTimeout</code>\u51fd\u6570\u7684\u4f7f\u7528\uff0c<code>setTimeout(event,time)</code> waiting for time to call the event. <pre><code>function print(){\n    document.getElementById(\"demo\").innerHTML=\"RUNOOB!\";\n}\n// waiting for 3000 ms call this function;\nsetTimeout(print,3000);\n</code></pre></p>"},{"location":"Tech/Web/Asyn/#promise-object","title":"<code>Promise</code> Object","text":"<p>A <code>promise object</code> contains both the producing code and calls the consuming code.</p> <p>\u7b80\u5355\u7684\u7406\u89e3\u5c31\u662f\uff0c\u4e00\u4e2a<code>promise object</code> \u8d1f\u8d23\u4e86\u5f02\u6b65\u64cd\u4f5c\u7684\u6267\u884c\u548c\u7ed3\u679c\u7684\u4f7f\u7528\u3002 \u6362\u53e5\u8bdd\u8bf4\u5c31\u662f\uff0c<code>promise object</code>\u5bf9\u8c61\u5b9e\u73b0\u4e86\u4e00\u4e2a\u5c01\u88c5\uff0c\u4ed6\u540c\u65f6\u5305\u542b\u4e86\u751f\u4ea7\u548c\u7ed3\u679c\u53cd\u9988\u4e24\u90e8\u5206\u5185\u5bb9\u4e8e\u4e00\u4f53\u3002</p> <p>\u4e0b\u9762\u770b\u4e2a\u4f8b\u5b50(\u6a21\u677f)\uff1a <pre><code>let myPromise = new Promise(function(myResolve, myReject) {\n// \"Producing Code\" (May take some time)\n\n  myResolve(); // when successful\n  myReject();  // when error\n});\n\n// \"Consuming Code\" (Must wait for a fulfilled Promise)\nmyPromise.then(\n  function(value) { /* code if successful */ },\n  function(error) { /* code if some error */ }\n);\n</code></pre> \u4e5f\u5c31\u662f\u628a\u4e00\u6574\u4e2a\u8fc7\u7a0b\uff0c\u6267\u884c\u548c\u53cd\u9988\u7ed3\u679c\u90fd\u5c01\u88c5\u5230\u4e86<code>myPromise</code>\u4e2d\u53bb\u3002</p> <ul> <li>\u4e00\u4e2a<code>promise object</code>\u53ef\u4ee5<ul> <li>pending </li> <li>fulfilled</li> <li>rejected \u6216\u8005\u4e00\u79cd\u66f4\u672c\u8d28\u7684\u65b9\u6cd5\u662f\u628a<code>promise object</code>\u770b\u6210\u72b6\u6001\u673a\u7684\u67d0\u4e2a\u72b6\u6001<code>state</code>\u4ee5\u53ca\u63a5\u4e0b\u6765\u7684<code>result</code>.</li> </ul> </li> </ul> State pending fulfilled rejected result undefined a result value an error object"},{"location":"Tech/Web/Asyn/#how-to-use-promise-object","title":"How to use <code>Promise object</code>","text":"<p><pre><code>function myDisplayer(some) {\n  document.getElementById(\"demo\").innerHTML = some;\n}\n\nlet myPromise = new Promise(function(myResolve, myReject) {\n  let x = 0;\n\n// The producing code (this may take some time)\n\n  if (x == 0) {\n    myResolve(\"OK\");\n  } else {\n    myReject(\"Error\");\n  }\n});\n\nmyPromise.then(\n  function(value) {myDisplayer(value);},\n  function(error) {myDisplayer(error);}\n);\n</code></pre> \u6211\u4eec\u6765\u770b\u4e0a\u9762\u7684\u4f8b\u5b50\uff0c\u6211\u4eec\u5b9a\u4e49\u4e86\u4e00\u4e2a<code>myPromise</code>\u4f5c\u4e3a<code>promise object</code>\u7684\u5b9e\u4f8b\uff0c<code>myResolve</code>\u548c<code>myReject</code>\u662f\u4e24\u4e2a\u5185\u7f6e\u7684\u51fd\u6570\uff0c\u5206\u522b\u7528\u4e8e\u4f20\u9012\u6210\u529f/\u5931\u8d25\u7684\u7ed3\u679c\u3002\u6211\u4eec\u770b\u4e0a\u9762\u8fd9\u6bb5\u4ee3\u7801\uff0c\u6709<code>x==0</code>\u90a3\u4e48\u59cb\u7ec8\u662f<code>myResolve</code>\u4e2d\u4f20\u9012\u4e86<code>OK</code>\u8fdb\u5165<code>.then</code>\u9636\u6bb5\uff0c\u7136\u540e\u7531\u4e8e<code>success</code>\uff0c\u90a3\u4e48\u5728<code>Promise</code>\u88ab\u6210\u529f\u8c03\u7528\u7684\u65f6\u5019\uff0c\u90fd\u4f1a\u6267\u884c<code>myDisplay(value).</code></p> <p>\u518d\u6765\u4e00\u4e2a\u901a\u4fd7\u6613\u61c2\u7684\u4f8b\u5b50 <pre><code>// simply use of callback function\nsetTimeout(function() { myFunction(\"I love You !!!\"); }, 3000);\n\nfunction myFunction(value) {\n  document.getElementById(\"demo\").innerHTML = value;\n}\n\n\n// simply using promise\nlet myPromise = new Promise(function(myResolve, myReject) {\n  setTimeout(function() { myResolve(\"I love You !!\"); }, 3000);\n});\n\nmyPromise.then(function(value) {\n  document.getElementById(\"demo\").innerHTML = value;\n});\n</code></pre></p>"},{"location":"Tech/Web/Asyn/#async","title":"<code>async</code> \u5173\u952e\u5b57","text":"<p>The keyword <code>async</code> before a function makes the funcion return a promise.</p> <p>\u73b0\u5728\u5c31\u6bd4\u8f83\u597d\u7406\u89e3\u4e86\uff0c\u5728<code>function()</code>\u4e4b\u524d\u52a0\u4e0a<code>async</code>\u5173\u952e\u5b57\u5c31\u8868\u793a\u7684\u662f<code>return</code>\u7684\u7ed3\u679c\u662f\u4e00\u4e2a<code>promise object</code>\u751f\u4ea7\u51fd\u6570\u4e4b\u540e\u7684<code>result</code>.\u53ef\u80fd\u73b0\u5728\u4e0d\u592a\u597d\u7406\u89e3\uff0c\u6211\u4eec\u770b\u4e0b\u9762\u8fd9\u4e2a\u4f8b\u5b50\uff1a <pre><code>// The function with `async` keyword\nasync function myFunction(){\n    return \"hello\";\n}\n\n// the above function is the same as the function below\nfunction myFunction(){\n    return Promise.resolve(\"Hello\");\n} \n</code></pre> \u56e0\u4e3a\u8fd9\u4e2a<code>return</code> \u7684\u7ed3\u679c\u6211\u4eec\u53ef\u4ee5\u9ed8\u8ba4\u4ed6\u603b\u662f<code>success</code>,\u6240\u4ee5\u53ef\u4ee5\u4f7f\u7528<code>resolve</code>.</p> <pre><code>async function myFunction(){\n    return \"hello\";\n}\n\nmyFunction().then{\n    function(value){\n        myDisplayer(value);\n    }\n    function(error){\n        myDisplayer(error);\n    }\n}\n</code></pre>"},{"location":"Tech/Web/Asyn/#await-operation","title":"<code>await</code> operation","text":"<p>It expects a Promise object(representing an asynchronous computation) \u5b83\u663e\u6027\u7684\u8868\u793a\u4e86\u4e00\u4e2a\u8bb8\u8bfa\u5bf9\u8c61\uff0c\u4e5f\u5c31\u662f\u8bf4\u660e\u5b83\u4f1a\u8fdb\u884c\u5f02\u6b65\u8ba1\u7b97\u3002</p> <ul> <li>It can only be used inside an <code>async</code> function.</li> <li>The <code>await</code> keyword makes the function pause the execution and wait for a resolved promise before it continues. \u5148\u7b49\u5f02\u6b65\u7684<code>resolve promise</code>\u518d\u7ee7\u7eed\u6267\u884c\u51fd\u6570\u7684\u503c\u3002</li> </ul> <p>\u4e0b\u9762\u7ed9\u4e2a\u4f8b\u5b50 <pre><code>// waiting for a timeout\nasync function myDisplay() {\n  let myPromise = new Promise(function(resolve) {\n    setTimeout(function() {resolve(\"I love You !!\");}, 3000);\n  });\n  document.getElementById(\"demo\").innerHTML = await myPromise;\n}\n\nmyDisplay();\n</code></pre> \u6211\u4eec\u4e0a\u9762\u7ed9\u51fa\u4e86\u4e00\u4e2a\u4f8b\u5b50\uff0c\u5f88\u597d\u7406\u89e3\uff0c\u8981\u8fbe\u5230\u7684\u6548\u679c\u5c31\u662f\u57283000ms\u4e4b\u540e\u663e\u793a<code>I love you !!</code>\u7684\u5185\u5bb9\u3002\u56e0\u4e3a\u8fd9\u79cd\u6bd4\u8f83\u5c0f\uff0c\u53c8\u9891\u7e41\u52a8\u6001\u7684\u53d8\u52a8\uff0c\u6240\u4ee5\u9700\u8981\u7528\u5f02\u6b65\u6765\u5b9e\u73b0\u3002</p> <p>\u4e00\u4e2a\u66f4\u6df1\u5165\u7684\u4f8b\u5b50  <pre><code>async function getFile() {\n  let myPromise = new Promise(function(resolve) {\n    // \u8fd9\u91cc\u751f\u6210\u4e86\u4e00\u4e2a XMLHttpRequest\u7684\u5b9e\u4f8b\u5bf9\u8c61;\n    let req = new XMLHttpRequest();\n    req.open('GET', \"mycar.html\");\n    req.onload = function() {\n      if (req.status == 200) {\n        resolve(req.response);\n      } else {\n        resolve(\"File not Found\");\n      }\n    };\n    req.send();\n  });\n  document.getElementById(\"demo\").innerHTML = await myPromise;\n}\n\ngetFile();\n</code></pre></p> <p>\u6211\u4eec\u5148\u770b\u4e0a\u9762\u8fd9\u4e2a\u4f8b\u5b50\uff0c<code>onload</code>\u662f\u6307\u5728\u8bf7\u6c42\u5b8c\u6210\u4e4b\u540e\uff0c\u5e76\u4e14\u5b8c\u6210\u8bf7\u6c42\u63a5\u6536\u54cd\u5e94\u4e4b\u540e\uff0c\u81ea\u52a8\u6267\u884c\u8fd9\u4e2a\u51fd\u6570\u3002\u56e0\u4e3a<code>req.state==200</code>\u5c31\u662f\u8868\u793a\u7684\u662f\u6210\u529f\u83b7\u5f97\u54cd\u5e94\uff0c\u5426\u5219\u5c31\u662f\u5176\u4ed6\u7684\u95ee\u9898<code>response code</code>\u3002\u5728\u6210\u529f\u627e\u5230\u4e86\u5bf9\u5e94\u7684\u6587\u4ef6\u4e4b\u540e\uff0c<code>resolve</code>\u5c31\u4f1a\u4f20\u9012\u5185\u5bb9\u5230<code>document.getElementById(\"demo\").innerHTML = await myPromise;</code>\u8fd9\u4e2a\u8bed\u53e5\u4e2d\uff0c\u628a\u83b7\u53d6\u5230\u5230\u5185\u5bb9\u7ed9\u6253\u5370\u51fa\u6765\u3002</p>"},{"location":"Tech/Web/Asyn/#ajax","title":"AJAX\u6280\u672f","text":"<p>\u4ec0\u4e48\u662fAJAX?</p> <p>AJAX = Asynochronous JavaScript and XML \u5f02\u6b65\u7684JavaScript \u548c XML,\u5b83\u4e0d\u662f\u4e00\u79cd\u65b0\u7684\u7f16\u7a0b\u8bed\u8a00\uff0c\u800c\u662f\u4e00\u79cd\u4f7f\u7528\u73b0\u6709\u6807\u51c6\u7684\u65b0\u65b9\u6cd5\u3002\u7c7b\u4f3c\u7684\u5176\u5b9e\u8fd8\u6709<code>JSX</code> (JavaScript+XML)</p> <p>\u8bb2\u4eba\u8bdd\u5c31\u662f\u8bf4\uff1a 1. AJAX\u662f\u4e00\u79cd\u5728\u65e0\u9700\u91cd\u65b0\u52a0\u8f7d\u6574\u4e2a\u7f51\u9875\u7684\u60c5\u51b5\u4e0b\uff0c\u80fd\u591f\u66f4\u65b0\u90e8\u5206\u7f51\u9875\u7684\u6280\u672f\uff0c 2. AJAX\u901a\u8fc7\u5728\u540e\u53f0\u4e0e\u670d\u52a1\u5668\u4ea4\u6362\u6570\u636e\uff0c\u5e76\u80fd\u591f\u66f4\u65b0\u90e8\u5206\u7f51\u9875</p> <p></p> <p>\u5f88\u597d\u7406\u89e3\uff0c\u5176\u5b9e\u5c31\u662f\u4e8b\u4ef6\u89e6\u53d1\uff0c\u4e5f\u5c31\u662f\u9700\u8981AJAX\u7684\u65f6\u5019\uff0c\u4f1a\u521b\u9020\u4e00\u4e2a<code>XMLHttpRequest</code>\u8fd9\u6837\u4e00\u4e2a\u5bf9\u8c61\uff0c\u8bf7\u6c42\u4f20\u7ed9\u670d\u52a1\u5668\uff0c\u5728\u5f97\u5230\u670d\u52a1\u5668\u7684\u7b54\u590d\u4e4b\u540e\uff0c\u8fdb\u884c\u5bf9\u4e8e\u7f51\u9875\u66f4\u65b0\u6765\u5b8c\u6210\u6d88\u606f\u7684\u53cd\u9988\u3002\u6b64\u8fc7\u7a0b\u4e2d\u4e0d\u9700\u8981\u5b8c\u6210\u91cd\u65b0\u52a0\u8f7d\u7f51\u9875\u3002 -&gt; \u591a\u7528\u4e8e\u52a8\u6001\u9875\u9762\uff0c\u9002\u5408\u4e8e\u9891\u7e41\u8bf7\u6c42\u548c\u66f4\u65b0\u9875\u9762\uff0c\u5982\u804a\u5929\u5e94\u7528\u3001\u65b0\u6d88\u606f\u63d0\u9192\u7b49\uff0c\u7528\u6237\u4f1a\u52a8\u6001\u89e6\u53d1\u90e8\u5206\u9875\u9762\u66f4\u65b0\uff0c\u800c\u4e0d\u5f71\u54cd\u5176\u4ed6\u7684\u5185\u5bb9\u3002</p> <p>\u8fd9\u91cc\u8bb2\u4e00\u4e0b \u4ec0\u4e48\u662f\u91cd\u65b0\u52a0\u8f7d\u7f51\u9875\uff1a \u5728\u67e5\u8be2\u4e86\u4e00\u4e0b\u4e4b\u540e\u53d1\u73b0\uff0c\u60f3\u6cd5\u5f88\u81ea\u7136\uff0c\u4e3a\u4ec0\u4e48\u4e8c\u8005\u8981\u533a\u5206\u5f00\u6765\uff0c\u6211\u4eec\u5229\u7528\u4e24\u4e2a\u8bcd\u6765\u533a\u5206 \u9759\u6001 \u548c \u52a8\u6001\uff0c\u4ec0\u4e48\u65f6\u5019\u9700\u8981\u91cd\u65b0\u52a0\u8f7d\u7f51\u9875\uff1f\u6216\u8005\u8bf4\u91cd\u65b0\u52a0\u8f7d\u7f51\u9875\u7684\u672c\u8d28\u662f\u4ec0\u4e48\uff1f\u91cd\u65b0\u4ece\u670d\u52a1\u5668\u4e2d\u83b7\u53d6\u6574\u4e2a\u7f51\u9875\u7684\u6570\u636e\uff0c\u90a3\u4e48\u8fd9\u5c31\u4f1a\u8bbe\u8ba1\u4e00\u4e2a\u6bd4\u8f83\u5927\u7684\u5de5\u7a0b\u91cf\uff0c\u591a\u7528\u4e8e\u9700\u8981\u6709\u5927\u89c4\u6a21\u53d8\u66f4/\u72b6\u6001\u91cd\u7f6e\u7684\u573a\u666f\uff0c\u6bd4\u5982 \u7528\u6237\u767b\u9646/\u4e3b\u9898\u5207\u6362\uff0c\u4e0d\u9002\u5408\u9891\u7e41\u7684\u5237\u65b0\u3002</p>"},{"location":"Tech/Web/cookie/","title":"Cookie Session Token","text":"<p>\u8fd9\u91cc\u4e3b\u8981\u662f\u8bb0\u5f55\u4e00\u4e0b <code>Cookie</code> <code>Session</code> <code>Token</code> \u8fd9\u4e09\u8005\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u4ee5\u53ca\u4ed6\u4eec\u7684\u533a\u522b\u3002\u8fd9\u4e09\u8005\u5728\u524d\u7aef\u5f00\u53d1\u4e2d\u662f\u975e\u5e38\u91cd\u8981\u7684\uff0c\u4e5f\u662f\u9762\u8bd5\u4e2d\u7ecf\u5e38\u4f1a\u88ab\u95ee\u5230\u7684\u95ee\u9898\u3002</p> <p>\u9996\u5148\uff0c\u6211\u4eec\u8981\u660e\u786e\u7684\u662f\u76ee\u524d\u7684\u5f00\u53d1\u90fd\u662f\u57fa\u4e8e\u524d\u540e\u7aef\u5206\u79bb\u7684\u67b6\u6784\u3002\u90a3\u4e48\u5ba2\u6237\u7aef\u8981\u5411\u670d\u52a1\u7aef\u53d1\u9001\u8bf7\u6c42\u7684\u65f6\u5019\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u5b89\u5168\u6027\uff0c\u5c31\u9700\u8981\u4e00\u4e9b\u673a\u5236\u6765\u8fdb\u884c\u4fdd\u8bc1\u8eab\u4efd\u7684\u6b63\u786e\u6027\u3002\u8fd9\u91cc\u5c31\u662f <code>Cookie</code> <code>Session</code> <code>Token</code> \u8fd9\u4e09\u8005\u7684\u4f5c\u7528\u3002</p>"},{"location":"Tech/Web/cookie/#introduce","title":"Introduce","text":""},{"location":"Tech/Web/cookie/#http","title":"HTTP\u662f\u65e0\u72b6\u6001\u7684","text":"<p>\u8fd9\u91cc\u8981\u63d0\u5230\u4e00\u4e2a\u6982\u5ff5\u5148\u3002<code>HTTP</code>\u662f\u4e00\u4e2a\u65e0\u72b6\u6001\u534f\u8bae\u3002\u9996\u5148\uff0c\u4e3a\u4ec0\u4e48\u662f\u65e0\u72b6\u6001\uff0c\u8fd9\u91cc\u6709\u4e00\u4e2a\u5386\u53f2\u539f\u56e0: \u6700\u5f00\u59cb\u7684<code>web</code>\u662f\u63d0\u4f9b\u7ed9\u4eba\u4eec\u770b\u9759\u6001\u7f51\u9875\u7684\u3002\u6240\u4ee5\u53ea\u6709 <code>GET</code> \u8bf7\u6c42\uff0c\u6d4f\u89c8\u5b8c\u5373OK.\u6240\u4ee5\u4e24\u4e2a\u94fe\u63a5\u4e4b\u95f4\u662f\u6ca1\u6709\u5173\u7cfb\u7684\uff0c\u5404\u81ea\u72ec\u7acb\u7684\u3002\u6240\u4ee5\u6211\u4eec\u7684<code>HTTP</code>\u662f\u65e0\u72b6\u6001\u7684\u3002\u7b80\u5355\u7684\u6765\u8bf4\u5c31\u662f\u8bf7\u6c42\u4e2d\u4e0d\u4f1a\u4fdd\u5b58\u7528\u6237\u7684\u72b6\u6001\u4fe1\u606f\uff0c\u540c\u65f6\u670d\u52a1\u5668\u4e5f\u4e0d\u4f1a\u4fdd\u5b58\u7528\u6237\u7684\u72b6\u6001\u4fe1\u606f\uff0c\u5426\u5219\u7684\u8bdd\u8d1f\u8f7d\u6709\u70b9\u5927\u4e86\u3002</p> <p>\u4f46\u662f\u6211\u4eec\u540e\u6765\u53c8\u9700\u8981\u4fdd\u5b58\u7528\u6237\u7684\u72b6\u6001\u4fe1\u606f\uff0c\u8fd9\u4e2a\u65f6\u5019\u5c31\u9700\u8981 <code>Cookie</code> <code>Session</code> <code>Token</code> \u8fd9\u4e09\u8005\u6765\u8fdb\u884c\u4fdd\u5b58\u7528\u6237\u7684\u72b6\u6001\u4fe1\u606f\u3002</p> <p>\u6240\u4ee5\u5176\u5b9e\u53ef\u4ee5\u8fd9\u6837\u7406\u89e3\uff0c\u8fd9\u4e09\u8005\u7684\u672c\u8d28\u76ee\u7684\u90fd\u53ea\u6709\u4e00\u4e2a\uff0c\u90a3\u5c31\u662f\u8ddf\u8e2a\u7528\u6237\u72b6\u6001\uff0c\u8ba9\u670d\u52a1\u5668\u53ef\u4ee5\u8bc6\u522b\u5e76\u4e14\u8ddf\u8e2a\u8fd9\u4e9b\u7279\u5b9a\u7528\u6237\u8bf7\u6c42\u7684\u72b6\u6001\u4fe1\u606f\uff0c\u53ef\u4ee5\u53ca\u65f6\u7684\u8fdb\u884c\u63d0\u4f9b</p>"},{"location":"Tech/Web/cookie/#local-storage","title":"\u4ec0\u4e48\u662f\u6d4f\u89c8\u5668\u7684 <code>local storage</code>","text":"<p><code>local storage</code> \u662f\u6d4f\u89c8\u5668\u63d0\u4f9b\u7684\u4e00\u79cd\u5b58\u50a8\u673a\u5236\uff0c\u53ef\u4ee5\u5b58\u50a8\u4e00\u4e9b\u7528\u6237\u7684\u4fe1\u606f\u3002\u4f46\u662f\u8fd9\u4e2a\u5b58\u50a8\u662f\u6c38\u4e45\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u9664\u975e\u7528\u6237\u624b\u52a8\u7684\u53bb\u6e05\u9664\uff0c\u5426\u5219\u7684\u8bdd\uff0c\u8fd9\u4e2a\u5b58\u50a8\u662f\u4e0d\u4f1a\u88ab\u6e05\u9664\u7684\u3002\u8fd9\u6837\u7684\u8bdd\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5229\u7528\u8fd9\u4e2a\u5b58\u50a8\u6765\u5b58\u50a8\u4e00\u4e9b\u7528\u6237\u7684\u4fe1\u606f\uff0c\u6bd4\u5982\u7528\u6237\u7684<code>id</code>\u7b49\u7b49\u3002\u4f46\u662f\u8fd9\u4e2a\u5b58\u50a8\u662f\u4e0d\u4f1a\u88ab\u53d1\u9001\u7ed9\u670d\u52a1\u5668\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u8fd8\u662f\u9700\u8981 <code>cookie</code> <code>session</code> <code>token</code> \u6765\u8fdb\u884c\u4f20\u9012\u3002</p> <p>\u7b80\u5355\u7684\u6765\u8bf4\uff0c\u5c31\u662f <code>local storage</code> \u4e5f\u662f\u53ef\u4ee5\u5b58\u50a8\u7528\u6237\u4fe1\u606f\u7684\uff0c\u5b83\u548c <code>cookie</code> \u5b58\u50a8\u6570\u636e\u7684\u4fa7\u91cd\u70b9\u4e0d\u540c\u800c\u5df2\u3002</p>"},{"location":"Tech/Web/cookie/#cookie","title":"Cookie","text":"<p>\u53ef\u4ee5\u7406\u89e3\u4e3a <code>small text file</code> \u5c0f\u6587\u672c\u6587\u4ef6</p> <p></p> <p></p> <p>\u4e0a\u56fe\u5c31\u5f88\u7b80\u5355\u7684\u628a<code>cookie</code>\u7684\u6982\u5ff5\u548c\u6574\u4e2a\u8fc7\u7a0b\u7ed9\u5c55\u73b0\u51fa\u6765\u4e86\u3002<code>cookie</code>\u53ef\u4ee5\u662f\u5b58\u653e\u4e86\u7528\u6237\u7684\u4e00\u4e9b\u4fe1\u606f\uff0c\u7136\u540e\u5b58\u5728\u4e86\u672c\u5730\u3002\u53ea\u9700\u8981\u5728\u6bcf\u6b21\u8bf7\u6c42\u7684\u65f6\u5019\u8fdb\u884c\u4fee\u6539\u4e0e\u4f20\u8f93\u7ed9\u670d\u52a1\u5668\u5c31\u53ef\u4ee5\u4e86\u3002\u4f46\u662f\u8fd9\u6837\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u90a3\u5c31\u662f <code>cookie</code> \u4f1a\u53d8\u5f97\u8d8a\u6765\u8d8a\u5927\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u8bf7\u6c42\u6765\u8bf4\u5c31\u662f\u4e00\u4e2a\u8d1f\u62c5\u4e86\u3002</p> <p>\u4f46 <code>cookie</code> \u662f\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u5b9e\u73b0\u4e86<code>HTTP</code>\u72b6\u6001\u7684\u4fdd\u6301\u529f\u80fd\u3002\u6211\u4eec\u53ef\u4ee5\u628acookie\u7406\u89e3\u6210\u4e00\u79cd\u5bf9\u4e8e <code>HTTP</code> \u65e0\u72b6\u6001\u7684\u7b80\u5355\u8865\u5145\u3002</p> <p>\u4f46\u662f <code>cookie</code> \u4e5f\u4f1a\u6709\u4ee5\u4e0b\u7684\u4e24\u79cd\u95ee\u9898</p> <ol> <li><code>cookie</code> \u662f\u5b58\u5728\u5ba2\u6237\u7aef\u7684\uff0c\u5e76\u4e14\u5927\u5c0f\u4e5f\u662f\u6709\u9650\u5236\u53ea\u67094KB.\u6240\u4ee5\u5bf9\u4e8e\u4e00\u4e9b\u5927\u7684\u6570\u636e\u6765\u8bf4\uff0c<code>cookie</code> \u662f\u4e0d\u9002\u5408\u7684\u3002\u800c\u4e14\u6bcf\u4e2a\u6d4f\u89c8\u5668\u5bf9\u4e8e\u6bcf\u4e2a\u57df\u540d\u7684<code>cookie</code>\u6570\u91cf\u4e5f\u662f\u6709\u9650\u5236\u7684\u3002</li> <li>\u5176\u6b21\uff0c<code>cookie</code> \u662f\u660e\u6587\u4f20\u8f93\u7684\uff0c\u6240\u4ee5\u6709\u53ef\u80fd\u4f1a\u88ab\u7a83\u53d6\u3002\u5bb9\u6613\u53d7\u5230<code>XSS</code>\u653b\u51fb\u3002 </li> </ol>"},{"location":"Tech/Web/cookie/#session","title":"Session","text":"<p>\u90a3\u4e48\u9488\u5bf9\u4e0a\u8ff0\u7684<code>cookie</code> \u5b58\u5728\u7684\u4e00\u4e9b\u95ee\u9898\uff0c\u6211\u4eec\u8fdb\u4e00\u6b65\u7684\u4f7f\u7528<code>session</code>\u6765\u89e3\u51b3\u8fd9\u6837\u7684\u95ee\u9898\u3002</p> <p>\u9996\u5148\uff0c<code>session</code> \u662f\u5b58\u50a8\u5728\u670d\u52a1\u5668\u7aef\u7684\uff0c\u800c\u4e0d\u662f\u5ba2\u6237\u7aef\uff0c\u8fd9\u6837\u7684\u597d\u5904\u5c31\u662f\u907f\u514d\u4e86 <code>cookie</code> \u7684 4KB \u5927\u5c0f\u9650\u5236\uff0c\u53ea\u4f1a\u53d6\u51b3\u4e8e\u670d\u52a1\u5668\u7684\u5185\u5b58\u5927\u5c0f\u3002</p> <p>\u5f53\u7136\uff0c\u8fd9\u4e0d\u4ee3\u8868<code>cookie</code> \u5c31\u6ca1\u7528\u4e86\uff0c<code>session</code>\u7684\u4f20\u9012\u8fd8\u662f\u9700\u8981\u4f9d\u9760<code>cookie</code>\u6765\u8fdb\u884c\u4f20\u9012\u7684\u3002\u7b80\u5355\u7684\u903b\u8f91\u53ef\u4ee5\u53c2\u8003\u4e0b\u56fe:</p> <p></p> <p>\u4e0d\u8981\u5fd8\u8bb0 <code>session</code> \u5b58\u5728\u7684\u672c\u8d28\u5176\u5b9e\u4e5f\u662f\u8fdb\u884c\u7528\u6237\u72b6\u6001\u7684\u4fdd\u5b58\u4e0e\u4f20\u9012\u8ddf\u8e2a\u3002\u6211\u4eec\u5728\u8fdb\u884c <code>cookie</code> \u4f20\u9012\u7684\u65f6\u5019\uff0c\u670d\u52a1\u7aef\u4f1a\u7ed9\u4e00\u4e2a\u54cd\u5e94\uff0c\u91cc\u9762\u5305\u542b\u4e86\u4e00\u4e2a <code>sessionID</code> \u6765\u8fdb\u884c\u7528\u6237\u7684\u8eab\u4efd\u8ddf\u8e2a\u3002\u90a3\u4e48\u63a5\u4e0b\u6765\u7684\u8bf7\u6c42\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u5728<code>cookie</code>\u4e2d\u6dfb\u52a0\u4e00\u4e9b\u9700\u8981\u7684\u8865\u5145\u7528\u6237\u4fe1\u606f\uff0c\u53ea\u9700\u8981\u5229\u7528\u8fd9\u4e2a<code>sessionID</code>\u6765\u8fdb\u884c\u4f20\u9012\u5373\u53ef\u3002\u6bcf\u6b21\u670d\u52a1\u5668\u5728\u7ed9\u4e88\u76f8\u5e94\u7684\u65f6\u5019\uff0c\u90fd\u4ece<code>request</code>\u7684<code>cookie</code>\u4e2d\u8bfb\u53d6<code>sessionID</code>\uff0c\u7136\u540e\u8fdb\u884c\u76f8\u5e94\u7684\u5904\u7406\u3002\u8fd9\u6837\u5c31\u907f\u514d\u4e86<code>cookie</code>\u5927\u5c0f\u53ea\u67094KB\u65e0\u6cd5\u5b58\u5165\u8fc7\u591a\u7684\u6570\u636e\u4ee5\u53ca<code>cookie</code>\u7684\u660e\u6587\u6570\u636e\u6cc4\u6f0f\u7684\u95ee\u9898\u4e86\u3002</p>"},{"location":"Tech/Web/cookie/#session_1","title":"Session\u7684\u95ee\u9898","text":"<p>\u4f46\u662f\u4e8b\u5b9e\u4e0a\uff0c<code>Session</code>\u8fd9\u6837\u4e5f\u662f\u4f1a\u5b58\u5728\u4e00\u5b9a\u7684\u95ee\u9898\u3002\u6211\u4eec\u5927\u578b\u7684\u9879\u76ee\u5f80\u5f80\u662f\u4ee5\u96c6\u7fa4\u7684\u5f62\u5f0f\u5b58\u5728\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u4f1a\u6709\u591a\u53f0\u670d\u52a1\u5668\u3002\u90a3\u4e48\u8fd9\u6837\u7684\u8bdd\uff0c<code>session</code>\u5c31\u4f1a\u6709\u4e00\u5b9a\u7684\u95ee\u9898\u3002\u56e0\u4e3a<code>session</code>\u662f\u5b58\u50a8\u5728\u670d\u52a1\u5668\u7aef\u7684\uff0c\u90a3\u4e48\u5982\u679c\u7528\u6237\u7684\u8bf7\u6c42\u662f\u5728\u4e0d\u540c\u7684\u670d\u52a1\u5668\u4e0a\uff0c\u90a3\u4e48\u5c31\u4f1a\u51fa\u73b0<code>session</code>\u4e0d\u4e00\u81f4\u7684\u95ee\u9898\u3002\u8fd9\u6837\u5c31\u4f1a\u5bfc\u81f4\u7528\u6237\u7684\u72b6\u6001\u4fe1\u606f\u4e0d\u4e00\u81f4\uff0c\u8fd9\u6837\u5c31\u4f1a\u51fa\u73b0\u4e00\u4e9b\u95ee\u9898\u3002\u7528\u6237\u8bf7\u6c42\u4fe1\u606f\u7684\u4e00\u81f4\u6027\u5c31\u4f1a\u51fa\u73b0\u95ee\u9898\u3002\u8fd9\u5e76\u4e0d\u662f\u6211\u4eec\u60f3\u770b\u5230\u7684\u3002</p> <p>\u9996\u5148\uff0c\u6211\u4eec\u4f1a\u60f3\u5230\u7684\u4e00\u4e9b\u89e3\u51b3\u529e\u6cd5\u5176\u5b9e\u5f88\u7b80\u5355\uff1a</p> <ol> <li> <p>\u65e2\u7136\u6709\u591a\u53f0\u670d\u52a1\u5668\uff0c\u90a3\u4e48\u6211\u4eec\u53ea\u9700\u8981\u8fdb\u884csession\u590d\u5236\u5373\u53ef\u3002\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u8981\u4fdd\u8bc1\u6240\u6709\u7684\u670d\u52a1\u5668\u90fd\u6709\u4e00\u4e2a\u7edf\u4e00\u7684session.\u4f46\u662f\u5c0f\u516c\u53f8\u5176\u5b9e\u8fd8\u884c\uff0c\u4f46\u662f\u9762\u5bf9\u5927\u578b\u7684\u516c\u53f8\uff0c\u4ed6\u4eec\u7684\u670d\u52a1\u5668\u90fd\u662f\u6210\u5343\u4e0a\u4e07\uff0c\u8fd9\u6837\u7684\u8bdd\uff0csession\u7684\u590d\u5236\u5c31\u4f1a\u53d8\u5f97\u5f88\u56f0\u96be\u3002\u800c\u4e14\u4e5f\u662f\u4e00\u7b14\u5f88\u5927\u7684\u989d\u5916\u5f00\u9500\uff0c\u4e5f\u4f1a\u9020\u6210\u6570\u636e\u7684\u5197\u4f59\u3002\u6240\u4ee5\u8fd9\u4e2a\u65b9\u6cd5\u5e76\u4e0d\u4f18\u3002</p> </li> <li> <p>\u63a5\u7740\uff0c\u65e2\u7136\u4e0d\u80fd\u8ba9\u6240\u6709\u7684\u670d\u52a1\u5668\u90fd\u5171\u4eab\u4e00\u4e2a<code>session</code>\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u5176\u5b9e\u662f\u53ef\u4fe1\u7684\uff0c\u6bd4\u5982\u6211\u4eec\u628a\u7528\u6237\u7684<code>session</code>\u90fd\u5b58\u5728<code>redis</code>\u7b49\u4e2d\u95f4\u4ef6\u4e2d\uff0c\u5728\u6bcf\u6b21\u5404\u4e2a\u4e0d\u540c\u7684\u670d\u52a1\u7aef\u63a5\u6536\u5230\u8bf7\u6c42\u7684\u65f6\u5019\uff0c\u5c31\u4ece<code>redis</code>\u7b49\u4e2d\u95f4\u4ef6\u4e2d\u8bfb\u53d6\u5373\u53ef\u3002\u65b9\u6cd5\u53ef\u884c\u662f\u53ef\u884c\uff0c\u4f46\u662f\u8fd9\u6837\u7684\u8bdd\u53c8\u4f1a\u591a\u4e00\u6b21\u5185\u90e8\u7684\u94fe\u63a5\uff0c\u6d88\u8017\u4e86\u4e00\u70b9\u6027\u80fd\u3002\u53ef\u80fd\u5bf9\u4e8e\u4e2d\u5c0f\u5382\u6765\u8bf4\uff0c\u4e0d\u592a\u80fd\u63a5\u53d7\uff0c\u800c\u4e14\u4e5f\u6ca1\u6709\u5230\u8fbe\u4f7f\u7528<code>redis</code>\u7684\u5730\u6b65\u3002</p> </li> </ol> <p>\u6240\u4ee5\uff0c\u4e0b\u9762\u5c31\u5f15\u5165\u4e86<code>Token</code>\u6765\u89e3\u51b3\u8fd9\u6837\u7684\u95ee\u9898\u3002</p>"},{"location":"Tech/Web/cookie/#token","title":"Token","text":"<p>\u7b80\u5355\u7684\u6765\u8bf4\uff0c<code>Token</code>\u8981\u505a\u7684\u5c31\u662f\uff0c\u9996\u5148\u662f\u4f9d\u65e7\u79d8\u6587\uff0c\u5176\u6b21\u662f\u65e0\u72b6\u6001\u7684\uff0c\u6700\u540e\u662f\u53ef\u4ee5\u8de8\u57df\u7684\u3002</p> <p></p> <p>\u6b63\u5982\u4e0a\u56fe\u6240\u8bf4\u7684\uff0c\u7528\u6237\u5148\u5c06\u8d26\u53f7\u548c\u5bc6\u7801\u53d1\u9001\u8bf7\u6c42\u7ed9\u4e86\u540e\u7aef\u670d\u52a1\u5668\uff0c\u90a3\u4e48\u4f1a\u5f97\u5230\u4e00\u4e2a<code>token</code>\uff0c\u90a3\u4e48\u5728\u63a5\u4e0b\u6765\u7684\u8bf7\u6c42\u4e2d\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5e26\u4e0a\u8fd9\u4e2a<code>token</code>\u5373\u53ef\u3002</p> <p>\u770b\u8d77\u6765\u5f88\u7b80\u5355\uff0c\u4f46\u5176\u5b9e\u6709\u51e0\u4e2a\u95ee\u9898\u9700\u8981\u6ce8\u610f\u7684\uff1a</p> <ul> <li> <p>\u5982\u679c\u6211\u968f\u4fbf\u627e\u4e00\u4e2a <code>token</code> \u5462\uff1f</p> <p>\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u4e2a\u529e\u6cd5\u662f\u4e0d\u884c\u7684\uff0c\u56e0\u4e3a\u670d\u52a1\u7aef\u6709\u4e00\u4e2a\u6821\u9a8c\u673a\u5236\uff0c\u4f1a\u6821\u9a8c\u8fd9\u4e2a<code>token</code> \u662f\u5426\u5408\u6cd5\uff0c\u4ece\u800c\u5224\u65ad\u662f\u54ea\u4e2a\u7528\u6237\u3002</p> </li> <li> <p>\u90a3\u4e48\u4e3a\u4ec0\u4e48\u5b83\u4e0d\u50cf<code>session</code> \u90a3\u6837\u6839\u636e <code>sessionID</code> \u6765\u627e\u5230userid \u5462\uff1f     \u56e0\u4e3a <code>token</code> \u672c\u8eab\u5c31\u81ea\u5e26\u4e86\u7528\u6237\u8eab\u4efd\u4fe1\u606f\u3002</p> </li> </ul> <p>\u6211\u4eec\u53ef\u4ee5\u628a <code>token</code> \u89c6\u4e3a\u5168\u5bb6\u6876\uff0c\u4e5f\u5c31\u662f\u8bf4\u91cc\u9762\u5305\u542b\u4e86\u5982\u4f55\u89e3\u8bfb\u5b83\u3002\u4e0b\u9762\u662f\u4e00\u4e2a <code>token</code> \u7684\u6784\u6210:</p> <p></p> <ul> <li>Header : \u7528\u4e8e\u6307\u5b9a\u4e86\u7b7e\u540d\u7684\u7b97\u6cd5\uff0c\u8ba9\u670d\u52a1\u5668\u77e5\u9053\u5982\u4f55\u9a8c\u8bc1\u8fd9\u4e2a<code>token</code></li> <li> <p><code>payload</code> : \u5b58\u653e\u7684\u662f\u6211\u4eec\u8981\u4f20\u9012\u7684\u4fe1\u606f\uff0c\u6bd4\u5982\u7528\u6237\u7684<code>id</code>\u7b49\u7b49</p> <ul> <li><code>header</code> \u548c <code>payload</code> \u90fd\u662f\u4ee5 <code>base64</code> \u7684\u5f62\u5f0f\u5b58\u5728\u7684</li> </ul> </li> <li> <p><code>signature</code> : \u7528\u4e8e\u9a8c\u8bc1<code>token</code>\u662f\u5426\u88ab\u7be1\u6539</p> </li> </ul> <p>\u5f53 \u670d\u52a1\u5668\u62ff\u5230<code>header</code> \u548c <code>payload</code> \u4e4b\u540e\uff0c\u4f1a\u6839\u636e\u5bc6\u94a5\u6765\u751f\u6210\u7b7e\u540d\uff0c\u518d\u6839\u636e <code>token</code> \u4e2d\u7684\u7b7e\u540d\u8fdb\u884c\u6bd4\u5bf9\uff0c\u662f\u5426\u4e00\u81f4\u3002\u5982\u679c\u4e00\u81f4\uff0c\u8bf4\u660e<code>token</code>\u662f\u5408\u6cd5\u7684\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u8fdb\u884c\u76f8\u5e94\u7684\u64cd\u4f5c\u3002</p>"},{"location":"Tech/Web/cookie/#jwt-json-web-token","title":"JWT \u6280\u672f  JSON Web Token","text":""},{"location":"Tech/Web/cookie/#_1","title":"\u5e38\u89c1\u9762\u8bd5\u9898","text":""},{"location":"Tech/Web/cookie/#q1-cookiesession","title":"Q1 \u5982\u679c\u6d4f\u89c8\u5668\u8bbe\u7f6e\u4e86\u7981\u6b62<code>cookie</code>\uff0c\u90a3\u4e48<code>session</code>\u8fd8\u53ef\u4ee5\u6b63\u5e38\u4f7f\u7528\u5417?","text":"<p>A1 : \u4e0d\u53ef\u4ee5\uff0c\u56e0\u4e3a\u6211\u4eec\u662f\u5229\u7528 <code>HTTP</code> \u8bf7\u6c42\u4e2d\u7684 <code>set-cookie</code> \u65b9\u6cd5\u6765\u5b58\u653e <code>sessionID</code> \u7684\u3002\u5982\u679c\u6d4f\u89c8\u5668\u7981\u6b62\u4e86<code>cookie</code>\uff0c\u90a3\u4e48<code>session</code>\u5c31\u65e0\u6cd5\u6b63\u5e38\u4f7f\u7528\u4e86\u3002\u6211\u4eec\u5c31\u6ca1\u6709\u529e\u6cd5\u4f20\u9012\u8be5\u7528\u6237\u5bf9\u5e94\u7684 <code>sessionID</code> \u4e86\u3002</p>"},{"location":"Tech/Web/cookie/#q2-q1","title":"Q2 \u5728 Q1\u7684\u80cc\u666f\u4e0b\uff0c\u6211\u4eec\u6709\u4ec0\u4e48\u529e\u6cd5\u89e3\u51b3\u5462\uff1f","text":"<p>\u5982\u679c\u9047\u5230\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u6709\u89e3\u51b3\u529e\u6cd5\uff0c\u4f46\u662f\u6bd4\u8f83\u590d\u6742</p> <ol> <li> <p>\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 <code>URL</code> \u91cd\u5199\u7684\u529e\u6cd5\uff0c\u7b80\u800c\u8a00\u4e4b\u5c31\u662f\u5728<code>URL</code>\u4e2d\u6dfb\u52a0<code>sessionID</code>\uff0c\u8fdb\u884c\u4f20\u9012\u3002\u7c7b\u4f3c<code>GET</code>\u65b9\u6cd5\u90a3\u6837\u4f1a\u5728<code>URL</code>\u4e2d\u6dfb\u52a0\u53c2\u6570\u3002\u4f46\u662f\u8fd9\u6837\u6211\u4eec\u7684<code>sessionID</code>\u5c31\u4f1a\u88ab\u66b4\u9732\u5728<code>URL</code>\u4e2d\uff0c\u8fd9\u6837\u5c31\u4f1a\u6709\u4e00\u5b9a\u7684\u5b89\u5168\u6027\u95ee\u9898\u3002\u6240\u4ee5\u8fd9\u4e2a\u65b9\u6cd5\u5e76\u4e0d\u63a8\u8350\u3002</p> </li> <li> <p>\u4f7f\u7528 <code>token</code> \u7684 <code>JWT</code> \u6280\u672f</p> </li> <li> <p>\u6211\u4eec\u53ef\u4ee5\u4ece\u4e2d\u505a\u6897\uff0c\u4e5f\u5c31\u662f\u8bf4\u5728 <code>form</code> \u8868\u5355\u4e2d\u6dfb\u52a0\u9690\u85cf\u9879\u7528\u6765\u5b58\u50a8<code>sessionID</code> .\u8fd9\u6837\u6211\u4eec\u53ea\u9700\u8981\u5728<code>payload</code> \u4e2d\u8bfb\u53d6\u5373\u53ef\u3002</p> </li> </ol>"},{"location":"Tech/Web/cookie/#q3-local-storagecookie","title":"Q3 \u65e2\u7136\u4f60\u63d0\u5230\u4e86<code>local storage</code>\uff0c\u90a3\u4e48<code>cookie</code> \u548c\u5b83\u4e8c\u8005\u6709\u4ec0\u4e48\u533a\u522b\uff1f","text":"<p>\u540c : \u4e8c\u8005\u90fd\u5177\u6709\u5b58\u50a8\u4e34\u65f6\u6570\u636e\u7684\u529f\u80fd\uff0c\u4f46\u662f\u4e8c\u8005\u4e3b\u8981\u8fd8\u662f\u6709\u5f88\u591a\u4e0d\u540c\u7684\u4fa7\u91cd\u70b9</p> <p>\u4e0d\u540c : </p> <ul> <li> <p><code>\u5b58\u50a8\u5927\u5c0f</code> : \u6211\u4eec\u7684 <code>cookie</code> \u4e00\u822c\u7684\u5bb9\u91cf\u662f 4KB,\u4f46\u662f\u6d4f\u89c8\u5668\u7684<code>local storage</code> \u53ef\u4ee5\u662f\u5f88\u591a\u5146\uff0c\u4f8b\u5982 5MB. \u8fd9\u4e5f\u51b3\u5b9a\u4e86\u4e8c\u8005\u53ef\u4ee5\u5b58\u50a8\u7684\u6570\u636e\u53ef\u4ee5\u6709\u5f88\u5927\u7684\u4e0d\u540c\u3002 <code>cookie</code> \u66f4\u4fa7\u91cd\u4e8e\u662f\u4e00\u4e2a\u8eab\u4efd\u51ed\u8bc1\uff0c\u800c\u4e14\u662f\u8981\u653e\u8fdb <code>HTTP</code> \u8bf7\u6c42\u4e2d\u8fdb\u884c\u53d1\u9001\u7684\uff0c\u4e0d\u80fd\u592a\u5927\uff0c\u53ea\u80fd\u5b58\u653e\u6709\u7528\u7684\u4fe1\u606f\u3002\u6bd4\u5982 \u8bbe\u7f6e\u8fc7\u671f\u65f6\u95f4\uff0c\u8de8\u57df\u8bbf\u95ee... \u4f46\u662f <code>local storage</code> \u7531\u4e8e\u6709\u6bd4\u8f83\u5927\u7684\u5b58\u50a8\u7a7a\u95f4\uff0c\u6240\u4ee5\u4e00\u822c\u7528\u6765\u5b58\u51fa\u540c\u4e00\u4e2a\u57df\u540d\u4e0b\u4e0d\u540c\u9875\u9762\u4e4b\u95f4\u7684\u5171\u4eab\u6570\u636e\u3002\u8fd9\u6837\u80fd\u8fbe\u6210\u6700\u5927\u7684\u6027\u80fd\u6548\u679c\u3002</p> </li> <li> <p><code>\u751f\u547d\u5468\u671f</code> : <code>cookie</code> \u7684\u751f\u547d\u5468\u671f\u662f\u53ef\u4ee5\u6709\u8bbe\u7f6e\u4e00\u4e2a\u8fc7\u671f\u65f6\u95f4\u7684\u3002\u56e0\u4e3a\u91cc\u9762\u4f20\u9012\u7684\u662f <code>sessionID</code> ,\u662f\u7531\u670d\u52a1\u5668\u7aef\u8bbe\u7f6e\u7684\uff0c\u53ea\u8981\u8fc7\u671f\u65f6\u95f4\u5230\u4e86\uff0c\u90a3\u4e48\u5c31\u4f1a\u5931\u6548\u3002\u4f46\u662f\u6d4f\u89c8\u5668\u7684 <code>local storage</code> \u662f\u6c38\u4e45\u7684\u50a8\u5b58\uff0c\u53ea\u80fd\u81ea\u5df1\u624b\u52a8\u5220\u9664\u3002</p> </li> <li> <p><code>\u5b89\u5168\u6027</code> : \u6253\u5f00\u8fc7 \u5f00\u53d1\u8005\u5de5\u5177\u90fd\u5e94\u8be5\u77e5\u9053\uff0c<code>cookie</code> \u503c\u662f\u76f4\u63a5\u66b4\u9732\u5728<code>HTTP</code> \u7684\u8bf7\u6c42\u5934\u4e2d\u7684\uff0c\u4f46\u662f <code>local storage</code> \u90fd\u662f\u5b58\u50a8\u5728\u672c\u5730\u3002\u6240\u4ee5 <code>cookie</code> \u662f\u4e0d\u5b89\u5168\u7684\uff0c\u800c <code>local storage</code> \u662f\u5b89\u5168\u7684\u3002</p> </li> </ul>"},{"location":"Tech/Web/cookie/#q4","title":"Q4 \u4ec0\u4e48\u662f\u96c6\u7fa4\u90e8\u7f72\u7684\u5462\uff1f","text":"<p>\u7531\u4e8e\u6211\u4eec\u7684\u540e\u7aef\u7684\u670d\u52a1\u5668\u53ef\u80fd\u6709\u5f88\u591a\u53f0\uff0c\u6211\u4eec\u7684\u6bcf\u53f0\u670d\u52a1\u5668\u4e4b\u95f4\u4e0d\u5171\u4eab\u4f1a\u8bdd\u4fe1\u606f\uff0c\u90a3\u4e48\u5c31\u5f53\u6211\u4eec\u8fdb\u884c\u9700\u8981\u8bbf\u95ee\u7684\u65f6\u5019\uff0c\u5982\u679c\u4e0d\u5171\u4eab\u4f1a\u8bdd\u4fe1\u606f\uff0c\u5c31\u9700\u8981\u4e00\u76f4\u91cd\u65b0\u767b\u9646\uff0c\u53ef\u80fd\u6bcf\u6b21\u8bbf\u95ee\u90fd\u9700\u8981\u91cd\u65b0\u767b\u9646\uff0c\u5f88\u9ebb\u70e6\uff0c\u800c\u4e14\u662f\u4e00\u79cd\u6548\u7387\u4f4e\u4e0b\u7684\u65b9\u6cd5\u3002</p>"},{"location":"Tech/Web/cookie/#q5-session-storage","title":"Q5 \u4ec0\u4e48\u662f <code>Session storage</code>","text":"<p>\u5b83\u548c <code>local storage</code> \u662f\u6709\u533a\u522b\u7684\uff0c <code>session storage</code> \u662f\u5173\u95ed\u6807\u7b7e\u9875\u5373\u5931\u6548\uff0c\u800c <code>local storage</code> \u662f\u6c38\u4e45\u7684\u3002\u6211\u4eec\u6bcf\u6b21\u8bbf\u95ee\u4e86\u4e00\u4e2a\u9875\u9762\uff0c\u90fd\u4f1a\u6709\u4e00\u4e2a <code>session storage</code> \u4e0e\u4e4b\u5bf9\u5e94\u3002\u4f60\u53ef\u4ee5\u8fd9\u6837\u60f3\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u9875\u9762\u662f\u8981\u672c\u5730\u5448\u73b0\u7684\uff0c\u5b83\u5c31\u9700\u8981\u4e00\u4e2a\u5730\u65b9\u6765\u5b58\u50a8\u8fd9\u4e9b\u4fe1\u606f\u3002\u5982\u679c\u9700\u8981\u957f\u671f\u50a8\u5b58\u7684\u8bdd\uff0c\u4f1a\u9009\u62e9\u50a8\u5b58\u5728 <code>local storage</code> \u4e2d\u3002</p>"},{"location":"Tech/Web/cookie/#q6-token","title":"Q6 \u65e2\u7136 <code>Token</code> \u6280\u672f\u8fd9\u4e48\u597d\uff1f\u662f\u4e0d\u662f\u6ca1\u6709\u7f3a\u70b9\u5462\uff1f","text":"<p>\u7b54\u6848\u662f\u5426\u5b9a\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u4ee5\u4e0b\u51e0\u4e2a\u89d2\u5ea6\u6765\u770b:</p> <ul> <li> <p>\u9996\u5148\u662f\u751f\u547d\u5468\u671f\uff0c <code>Token</code> \u662f\u81ea\u4ece\u9881\u53d1\u4e4b\u540e\uff0c\u5c31\u662f\u6709\u6548\u7684\u3002\u8fd9\u6837\u5c31\u4f1a\u6709\u4e00\u5b9a\u7684\u5b89\u5168\u6027\u95ee\u9898\u3002\u56e0\u4e3a\u5982\u679c <code>Token</code> \u88ab\u76d7\u4e86\uff0c\u90a3\u4e48\u5c31\u4f1a\u6709\u4e00\u5b9a\u7684\u98ce\u9669\u3002\u6240\u4ee5\u6211\u4eec\u9700\u8981\u8bbe\u7f6e\u4e00\u4e2a\u8f83\u77ed\u7684\u8fc7\u671f\u65f6\u95f4\uff0c\u8fd9\u6837\u5c31\u4f1a\u6709\u4e00\u5b9a\u7684\u5b89\u5168\u6027\u95ee\u9898\u3002</p> <ul> <li>\u6240\u4ee5\u76f8\u5bf9\u5e94\u7684\uff0c\u6211\u4eec\u9700\u8981\u8bbe\u7f6e\u4e00\u4e2a\u5b9a\u65f6\u5237\u65b0<code>Token</code>\u7684\u673a\u5236\uff0c\u8ba9\u9881\u53d1\u51fa\u53bb\u7684 <code>Token</code> \u5b9a\u671f\u5931\u6548\u3002</li> <li>\u6216\u8005\u6211\u4eec\u8bbe\u7f6e\u4e00\u4e2a\u9ed1\u540d\u5355\u5236\u5ea6\uff0c\u6bcf\u6b21\u5728\u8fdb\u884c\u9a8c\u8bc1<code>Token</code>\u7684\u65f6\u5019\uff0c\u90fd\u4f1a\u5148\u5728\u9ed1\u540d\u5355\u4e2d\u786e\u8ba4\u4e00\u4e0b <code>Token</code> \u662f\u5426\u5b58\u5728\uff0c\u5982\u679c\u5b58\u5728\u7684\u8bdd\uff0c\u53ef\u4ee5\u76f4\u63a5\u62d2\u7edd\u8fdb\u884c<code>Token</code> \u7684\u8eab\u4efd\u6821\u9a8c\u3002</li> </ul> </li> </ul>"},{"location":"Tutorial/C%2B%2B/StdLib/bitset/","title":"bitset","text":""},{"location":"Tutorial/C%2B%2B/StdLib/bitset/#introduce","title":"Introduce","text":"<p>std::bitset is a class template that represents a fixed-size sequence of N bits. It is a specialized container class that is designed to store bits. It is a part of the C++ Standard Library.</p> <p>\u7b80\u5355\u7684\u6765\u8bf4\uff0c\u5c31\u662f\u63d0\u4f9b\u7684\u4e00\u4e2a\u56fa\u5b9a\u5927\u5c0f\u7684\u4f4d\u96c6\u5408\uff0c\u53ef\u4ee5\u7528\u6765\u5b58\u50a8\u4f4d\u3002\u5e76\u4e14\u652f\u6301\u4e00\u4e9b\u5e38\u89c1\u7684\u4f4d\u64cd\u4f5c\u3002\u5728\u9047\u5230\u7684\u7ecf\u5e38\u9700\u8981\u5904\u7406\u4f4d\u8fd0\u7b97\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e2a\u7c7b\u3002</p>"},{"location":"Tutorial/C%2B%2B/StdLib/bitset/#usage","title":"Usage \u4f7f\u7528\u65b9\u6cd5","text":"<p>\u9996\u5148\uff0c\u8fd9\u4e2a <code>bitset</code> \u7c7b\u662f\u5728 <code>&lt;bitset&gt;</code> \u5934\u6587\u4ef6\u4e2d\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5f15\u5165\u8fd9\u4e2a\u5934\u6587\u4ef6\u624d\u80fd\u4f7f\u7528</p>"},{"location":"Tutorial/C%2B%2B/StdLib/bitset/#_1","title":"\u6784\u9020\u51fd\u6570","text":"<pre><code>// \u6784\u9020\u51fd\u6570\nbitset(); // \u9ed8\u8ba4\u6784\u9020\uff0c\u6240\u6709\u4f4d\u521d\u59cb\u5316\u4e3a 0\nbitset(unsigned long val); // \u7528\u6574\u6570 val \u521d\u59cb\u5316\nbitset(const string&amp; str, size_t pos = 0, size_t n = string::npos); // \u7528\u5b57\u7b26\u4e32\u521d\u59cb\u5316\n</code></pre> <p>\u6b63\u5982\u4e0a\u8ff0\u7684\u4ee3\u7801\u6240\u793a\uff0c<code>bitset</code> \u652f\u6301\u4e09\u79cd\u6784\u9020\u51fd\u6570\uff0c\u5206\u522b\u662f\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\uff0c\u7528\u6574\u6570\u521d\u59cb\u5316\uff0c\u7528\u5b57\u7b26\u4e32\u521d\u59cb\u5316\u3002\u5176\u5b9e\u5f88\u7b80\u5355\u7684\u7406\u89e3\u5c31\u662f\uff0c\u8fd9\u4e2a<code>bitset</code>\u53ef\u4ee5\u5c06\u6574\u6570\u6216\u8005\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u4e8c\u8fdb\u5236\u7684\u5f62\u5f0f\u3002</p>"},{"location":"Tutorial/C%2B%2B/StdLib/bitset/#_2","title":"\u5e38\u89c1\u7684\u4f4d\u8fd0\u7b97\u64cd\u4f5c","text":"<p>\u4e0b\u9762\u662f\u4e00\u4e9b\u5e38\u89c1\u7684\u6210\u5458\u51fd\u6570\uff0c\u65b9\u4fbf\u6211\u4eec\u5bf9\u8fd9\u4e2a\u7c7b\u5bf9\u8c61\u8fdb\u884c\u4f4d\u64cd\u4f5c\u3002</p> <pre><code>// \u4f4d\u64cd\u4f5c\n\nset()   // \u5c06\u6240\u6709\u4f4d\u8bbe\u7f6e\u4e3a 1\nreset() // \u5c06\u6240\u6709\u4f4d\u8bbe\u7f6e\u4e3a 0\nflip()  // \u5c06\u6240\u6709\u4f4d\u53d6\u53cd\ntest(size_t pos) // \u6d4b\u8bd5 pos \u4f4d\u662f\u5426\u4e3a 1\noperator[] // \u91cd\u8f7d [] \u8fd0\u7b97\u7b26\uff0c\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\u67d0\u4e00\u4f4d\n\n// \u7edf\u8ba1\u4e0e\u67e5\u8be2\ncount() // \u7edf\u8ba1 1 \u7684\u4e2a\u6570\nsize()  // \u8fd4\u56de\u4f4d\u6570\nany()   // \u662f\u5426\u6709 1\nnone()  // \u662f\u5426\u6ca1\u6709 1\nall()   // \u662f\u5426\u5168\u662f 1\n\n// \u8f6c\u6362\u51fd\u6570\nto_ulong() // \u8f6c\u6362\u4e3a unsigned long\nto_ullong() // \u8f6c\u6362\u4e3a unsigned long long\nto_string() // \u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32 \uff08\u5982 \"001011\"\uff09\n</code></pre>"},{"location":"Tutorial/C%2B%2B/StdLib/bitset/#_3","title":"\u4f7f\u7528\u793a\u4f8b","text":"<pre><code>#include &lt;bitset&gt;\n#include &lt;iostream&gt;\n\nint main() {\n    // \u6784\u9020\u51fd\u6570\n    std::bitset&lt;8&gt; b1(42);      // \u4e8c\u8fdb\u5236: 00101010\n    std::bitset&lt;8&gt; b2(\"1100\");  // \u4e8c\u8fdb\u5236: 00001100\n\n    // \u4f4d\u64cd\u4f5c\n    b1.set(0);      // 00101011\n    b2.flip();      // 11110011\n\n    std::cout &lt;&lt; b1 &lt;&lt; std::endl; // \u8f93\u51fa: 00101011\n    std::cout &lt;&lt; b2.count() &lt;&lt; std::endl; // \u8f93\u51fa 1 \u7684\u4e2a\u6570: 6\n\n    // \u5b57\u7b26\u4e32\u8f6c\u6362\n    std::bitset&lt;4&gt; b(\"1010\");\n    std::string s = b.to_string(); // s = \"1010\"\n    unsigned long x = b.to_ulong(); // x = 10\n}\n</code></pre>"},{"location":"Tutorial/C%2B%2B/StdLib/bitset/#_4","title":"\u6ce8\u610f\u4e8b\u9879","text":"<p>\u6211\u4eec\u89c2\u5bdf\u4e0a\u9762\u7684\u521d\u59cb\u5316\u51fd\u6570\uff0c\u5176\u5b9e\u4e0d\u96be\u53d1\u73b0\uff0c\u8fd9\u4e2a<code>bitset</code>\u7684\u50a8\u5b58\u65b9\u5f0f\u662f\u4ece\u4f4e\u4f4d\u5230\u9ad8\u4f4d\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u662f\u5c0f\u7aef\u9006\u5e8f\u7684\u3002\u8fd9\u4e2a\u5728\u4f7f\u7528\u7684\u65f6\u5019\u9700\u8981\u6ce8\u610f\u3002\u5982\u679c\u8981\u4ece\u5de6\u5f80\u53f3\u904d\u5386\uff0c\u5c31\u5e94\u8be5\u4ece\u9ad8\u4f4d(<code>this.size()-1</code>)\u5f00\u59cb\u904d\u5386\u3002</p>"},{"location":"Tutorial/Go/Introduce/","title":"Go","text":""},{"location":"Tutorial/Go/Introduce/#go_1","title":"Go \u4f18\u70b9","text":"<ol> <li>\u9ad8\u6027\u80fd/\u9ad8\u5e76\u53d1</li> <li>\u8bed\u6cd5\u7b80\u5355 \u5b66\u4e60\u66f2\u7ebf\u5e73\u6ed1</li> <li>\u4e30\u5bcc\u7684\u6807\u51c6\u5e93</li> <li>\u5b8c\u5584\u7684\u5de5\u5177\u94fe</li> <li>\u9759\u6001\u94fe\u63a5</li> <li>\u5feb\u901f\u7f16\u8bd1</li> <li>\u8de8\u5e73\u53f0</li> <li>\u5783\u573e\u56de\u6536</li> </ol> <p>\u6211\u4eec\u6765\u770b<code>Go</code>\u8bed\u8a00\u7684\u4e00\u6bb5\u4ee3\u7801\uff0c\u5341\u5206\u7684\u7b80\u5355\u53ef\u4ee5\u770b\u51fa\u5b83\u7684\u4f18\u52bf <pre><code>package main\n\nimport{\n    net/http\n}\n\nfunc main(){\n    http.Handle(\"/\",http.FileServer(http.Dir(\".\")))\n    http.ListenAndServe(\":8080\",nil)\n}\n</code></pre></p>"},{"location":"Tutorial/Go/Introduce/#_1","title":"\u51e0\u4e2a\u6307\u4ee4","text":"<ol> <li><code>go build</code> \u76ee\u7684\u662f\u5c06\u76ee\u6807\u6587\u4ef6\u7f16\u8bd1\u6210\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u4f46\u662f\u4e0d\u4f1a\u6267\u884c</li> <li><code>go run</code> \u76ee\u7684\u662f\u7f16\u8bd1\u5e76\u6267\u884c\u6e90\u6587\u4ef6</li> </ol>"},{"location":"Tutorial/Go/Introduce/#_2","title":"\u5165\u95e8\u8bed\u6cd5","text":""},{"location":"Tutorial/Go/Introduce/#_3","title":"\u603b\u4f53\u7684\u4ecb\u7ecd","text":"<p>\u4e00\u4e2a <code>go</code> \u7a0b\u5e8f\u5305\u542b\u4e86\u51e0\u4e2a\u90e8\u5206</p> <ul> <li>\u5305\u58f0\u660e</li> <li>\u5f15\u5165\u5305</li> <li>\u51fd\u6570</li> <li>\u53d8\u91cf</li> <li>\u8bed\u53e5 &amp; \u8868\u8fbe\u5f0f</li> <li>\u6ce8\u91ca</li> </ul> <pre><code>// \u5305\u58f0\u660e\npackage main\n\n// \u5f15\u5165\u5305\nimport \"fmt\"\n\n// \u51fd\u6570\nfunc main(){\n    fmt.Println(\"Hello,World\")\n}\n</code></pre> <ul> <li><code>package main</code> \u5176\u5b9e\u53ef\u4ee5\u5355\u72ec\u7684\u8868\u793a\u4e00\u4e2a\u53ef\u72ec\u7acb\u6267\u884c\u7684 <code>go</code> \u7a0b\u5e8f\u3002\u4f46\u662f\u5728\u9879\u76ee\u4e2d\u5c31\u9700\u8981<code>package xxx</code> \u6765\u58f0\u660e\u5305\u540d\u3002</li> </ul> <p></p> <p>\u5982\u4e0a\u56fe\u6240\u793a, <code>package main</code> \u662f\u4e00\u5b9a\u5b58\u5728\u7684\uff0c\u5b83\u662f\u4e00\u4e2a\u53ef\u72ec\u7acb\u6267\u884c\u7684 <code>go</code> \u7a0b\u5e8f\u7684\u5165\u53e3\u3002\u6211\u4eec\u7684\u5927\u578b\u9879\u76ee\u6700\u7ec8\u90fd\u4f1a\u7f16\u8bd1\u6210\u4e00\u4e2a\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u8fd9\u4e2a\u6587\u4ef6\u5c31\u662f <code>main</code> \u5305\u7684\u5165\u53e3\u3002</p> <ul> <li> <p><code>fmt</code> \u5305\u7684\u4f5c\u7528, <code>fmt</code> \u5305\u662fGo\u8bed\u8a00\u7684\u6807\u51c6\u5e93\uff0c\u4e3b\u8981\u7528\u6765\u683c\u5f0f\u5316\u8f93\u5165\u8f93\u51fa\u3002\u53ef\u4ee5\u7b80\u5355\u7684\u7406\u89e3\u4e3a <code>C</code> \u8bed\u8a00\u4e2d\u7684 <code>stdio.h</code> \u5305\u3002</p> </li> <li> <p>\u6709\u4e00\u4e2a\u8981\u6ce8\u610f\u7684\u662f <code>{</code> \u4e0d\u80fd\u88ab\u5355\u72ec\u653e\u5728\u4e00\u884c\uff0c\u5426\u5219\u4f1a\u62a5\u9519\u3002\u4e0b\u9762\u8fd9\u4e2a\u7a0b\u5e8f\u5c31\u662f\u4f8b\u5b50\u3002</p> <pre><code>package main\n\nimport \"fmt\"\n\nfunc main()\n{\n    fmt.Println(\"Hello,World\")\n}\n</code></pre> </li> </ul>"},{"location":"Tutorial/Go/Introduce/#_4","title":"\u683c\u5f0f\u5316\u5b57\u7b26\u4e32","text":"<ul> <li><code>fmt.Printfln</code> \u6839\u636e\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u8f93\u51fa\u5185\u5bb9</li> <li> <p><code>fmt.Sprintf</code> \u6839\u636e\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u8fd4\u56de\u4e00\u4e2a\u683c\u5f0f\u5316\u7684\u5b57\u7b26\u4e32</p> <p><code>var target_url = fmt.Sprintf(\"http://%s:%d\",host,port)</code></p> </li> </ul>"},{"location":"Tutorial/Go/Introduce/#_5","title":"\u6570\u636e\u7c7b\u578b","text":"<p><code>Go</code> \u8bed\u8a00\u4e2d\u58f0\u660e\u53d8\u91cf\u7c7b\u578b\u90fd\u662f\u653e\u5728\u53d8\u91cf\u540d\u4e4b\u540e\u7684\uff0c\u5e76\u975e\u524d\u9762 </p> <p><code>var identifier type</code> \u6216\u8005 <code>var identifier1, identifier2 type</code> </p> <p><code>var flag bool</code></p>"},{"location":"Tutorial/Go/Introduce/#_6","title":"\u77ed\u53d8\u91cf\u58f0\u660e","text":"<p><code>:=</code> \u5c5e\u4e8e\u662f <code>Go</code> \u8bed\u8a00\u7684\u8bed\u6cd5\u7cd6\uff0c\u53ea\u5141\u8bb8\u5728\u51fd\u6570\u5185\u90e8\u4f7f\u7528\u3002</p> <ul> <li>\u81ea\u52a8\u63a8\u65ad\u7c7b\u578b\uff0c\u7528\u4e8e\u58f0\u660e\u65b0\u7684\u53d8\u91cf</li> <li>\u4e0d\u80fd\u7528\u4e8e\u58f0\u660e\u5168\u5c40\u53d8\u91cf</li> </ul> <pre><code>variableName := value\n\nvar variableName type = value\n</code></pre>"},{"location":"Tutorial/Go/Introduce/#_7","title":"\u6570\u7ec4","text":"<p><code>var a[5]int</code> // \u58f0\u660e\u4e00\u4e2a\u957f\u5ea6\u4e3a5\u7684\u6570\u7ec4</p> <p><code>var a[5]int {1,2,3,4,5}</code> // \u58f0\u660e\u4e00\u4e2a\u957f\u5ea6\u4e3a5\u7684\u6570\u7ec4\u5e76\u521d\u59cb\u5316</p> <p><code>a := [5]int{1,2,3,4,5}</code> // \u58f0\u660e\u4e00\u4e2a\u957f\u5ea6\u4e3a5\u7684\u6570\u7ec4\u5e76\u521d\u59cb\u5316</p> <p><code>a := []int</code></p> <p><code>go</code> \u4e2d\u7684\u6570\u7ec4\u662f\u957f\u5ea6\u56fa\u5b9a\uff0c\u800c\u4e14\u957f\u5ea6\u4e5f\u662f\u6570\u7ec4\u7c7b\u578b\u7684\u4e00\u90e8\u5206\u3002\u6240\u4ee5 <code>[5]int</code> \u548c <code>[10]int</code> \u662f\u4e0d\u540c\u7684\u7c7b\u578b\u3002\u7531\u4e8e\u5b83\u7684\u957f\u5ea6\u56fa\u5b9a\uff0c\u6211\u4eec\u5728\u9879\u76ee\u4e2d\u5176\u5b9e\u66f4\u591a\u7684\u65f6\u5019\u4f7f\u7528\u7684\u662f\u5207\u7247\u3002</p>"},{"location":"Tutorial/Go/Introduce/#slice","title":"\u5207\u7247 Slice","text":"<ul> <li>\u5207\u7247\u4e0d\u540c\u4e8e \u6570\u7ec4\uff0c \u5b83\u53ef\u4ee5\u4efb\u610f\u7684\u6539\u53d8\u957f\u5ea6</li> <li>\u6211\u4eec\u53ef\u4ee5\u5229\u7528 <code>append()</code> \u65b9\u6cd5\u6765\u589e\u52a0\u5207\u7247\u7684\u5bb9\u91cf\uff0c\u4f46\u662f\u5fc5\u987b\u8d4b\u503c\u7ed9\u539f\u6765\u7684\u5207\u7247\u3002</li> </ul> <pre><code>package main\n\nimport \"fmt\"\n\nfunc main(){\n    s := make([]string,3)\n    s[0] = \"a\"\n    s[1] = \"b\"\n    s[2] = \"c\"\n\n    fmt.Println(\"get:\",s[2]); // c\n    fmt.Println(\"len:\",len(s)); // 3\n\n\n    s = append(s,\"d\") // s : a b c d\n    s = append(s,\"e\",\"f\") // s : a b c d e f\n\n    c := make([]string,len(s))\n    copy(c,s) // we can copy the slice\n\n\n    fmt.Println(s[2:5]) // print the slice from 2 to 5 (not include 5)\n\n}\n</code></pre> <p>\u9700\u8981\u6ce8\u610f\u7684\u662f <code>slice</code> </p> <ul> <li> <p>\u4e0d\u652f\u6301\u6bd4\u8f83\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u80fd\u4f7f\u7528 <code>==</code> \u6765\u6bd4\u8f83\u4e24\u4e2a <code>slice</code> \u662f\u5426\u76f8\u7b49\u3002</p> </li> <li> <p>\u540c\u65f6 slice \u4e5f\u4e0d\u652f\u6301\u8d1f\u6570\u7d22\u5f15\uff0c\u4e0d\u80fd\u50cf <code>python</code> \u90a3\u6837</p> </li> </ul>"},{"location":"Tutorial/Go/Introduce/#map","title":"map","text":"<p>\u6211\u4eec\u8fd9\u91cc\u4ecb\u7ecd\u4e00\u4e0b <code>map</code> \u6570\u636e\u7ed3\u6784</p> <ul> <li><code>map</code> \u662f\u4e00\u79cd\u65e0\u5e8f\u7684\u952e\u503c\u5bf9\u7684\u96c6\u5408 </li> </ul> <p>\u4e0b\u9762\u770b\u4e00\u6bb5\u4f8b\u5b50\uff0c\u5c31\u80fd\u77e5\u9053 <code>map</code> \u7684\u4f7f\u7528</p> <p>go \u4e2d\u7684 map \u662f\u5b8c\u5168\u65e0\u5e8f\u7684\uff0c\u4e0d\u50cfJava\u7684Collections\u4e2d\u7684\u5c01\u88c5\u7684\u6570\u636e\u7ed3\u6784\u4e00\u6837\u6709\u5e8f</p> <pre><code>package main\n\nimport \"fmt\"\n\nfunc main() {\n    m := make(map[string]int)\n    m[\"one\"] = 1\n    m[\"two\"] = 2\n    fmt.Println(m)           // map[one:1 two:2]\n    fmt.Println(len(m))      // 2\n    fmt.Println(m[\"one\"])    // 1\n    fmt.Println(m[\"unknow\"]) // 0\n\n    r, ok := m[\"unknow\"]\n    fmt.Println(r, ok) // 0 false\n\n    delete(m, \"one\")\n\n    m2 := map[string]int{\"one\": 1, \"two\": 2}\n    var m3 = map[string]int{\"one\": 1, \"two\": 2}\n    fmt.Println(m2, m3)\n}\n</code></pre> <p>go \u5141\u8bb8\u76f4\u63a5\u901a\u8fc7<code>m[key]</code> \u6765\u8bbf\u95ee <code>map</code>,\u5373\u4f7f <code>key</code> \u4e0d\u5b58\u5728\uff0c\u4e5f\u4e0d\u4f1a\u53d1\u751f\u8fd0\u884c\u65f6\u5019\u7684\u9519\u8bef\u3002\u800c\u662f\u8fd4\u56de<code>map</code> \u7684\u503c\u7684\u7c7b\u578b\u7684 \u96f6\u503c\uff0c\u540c\u65f6 <code>ok</code> \u4f1a\u8fd4\u56de <code>false</code>\u3002</p>"},{"location":"Tutorial/Go/Introduce/#range","title":"range","text":"<p><code>range</code> \u5173\u952e\u5b57\u7528\u4e8e <code>for</code> \u5faa\u73af\u4e2d\u8fed\u4ee3\u6570\u7ec4\u3001\u5207\u7247\u3001\u901a\u9053\u6216\u96c6\u5408\u7684\u5143\u7d20</p> <p><pre><code>package main\n\nimport \"fmt\"\n\nfunc main() {\n    nums := []int{2, 3, 4}\n    sum := 0\n    for i, num := range nums {\n        sum += num\n        if num == 2 {\n            fmt.Println(\"index:\", i, \"num:\", num) // index: 0 num: 2\n        }\n    }\n    fmt.Println(sum) // 9\n\n    m := map[string]string{\"a\": \"A\", \"b\": \"B\"}\n    for k, v := range m {\n        fmt.Println(k, v) // b 8; a A\n    }\n    for k := range m {\n        fmt.Println(\"key\", k) // key a; key b\n    }\n\n    for _,v := range m{\n        fmt.Println(v) // A; B\n    }\n}\n</code></pre> \u6211\u4eec\u53ef\u4ee5\u5229\u7528 <code>range</code> \u6765\u5feb\u901f\u904d\u5386\u6570\u7ec4\uff0c\u5207\u7247\uff0cmap\u7b49\u6570\u636e\u7ed3\u6784\u3002\u540c\u65f6\u6211\u4eec\u53ef\u4ee5\u83b7\u5f97\u7684\u662f <code>index</code> \u548c <code>value</code>.\u4e16\u754c\u662f\u4e00\u4e2a\u5de8\u5927\u7684 <code>KV</code> \u3002 \u5982\u679c\u4e0d\u9700\u8981 <code>\u7d22\u5f15</code> \u6211\u4eec\u53ef\u4ee5\u5229\u7528 <code>_</code> \u6765\u5ffd\u7565\u3002</p>"},{"location":"Tutorial/Go/Introduce/#_8","title":"\u51fd\u6570","text":"<p>Go \u51fd\u6570\u662f\u57fa\u672c\u7684\u4ee3\u7801\u5757\uff0c\u7528\u4e8e\u6267\u884c\u4e00\u4e2a\u4efb\u52a1</p> <p>\u5b83\u7684\u51fd\u6570\u548c<code>python</code> \u4e00\u6837\uff0c\u53ef\u4ee5\u8fd4\u56de\u591a\u4e2a\u503c\u3002\u4f46\u662f\u6211\u4eec\u65e5\u5e38\u4f7f\u7528\u7684\u65f6\u5019\u5176\u5b9e\u662f\u4f1a\u8fd4\u56de\u4e24\u4e2a\u503c\uff0c\u4e00\u4e2a\u662f\u7ed3\u679c\uff0c\u4e00\u4e2a\u662f\u9519\u8bef\u4fe1\u606f\u3002</p> <pre><code>package main\n\nimport \"fmt\"\n\nfunc add(a int, b int) int {\n    return a + b\n}\n\nfunc add2(a, b int) int {\n    return a + b\n}\n\n// exists function return value and ok \n// Because it may not exist some specific key\nfunc exists(m map[string]string, k string) (v string, ok bool) {\n    v, ok = m[k]\n    return v, ok\n}\n\nfunc main() {\n    res := add(1, 2)\n    fmt.Println(res) // 3\n\n    v, ok := exists(map[string]string{\"a\": \"A\"}, \"a\")\n    fmt.Println(v, ok) // A True\n}\n</code></pre>"},{"location":"Tutorial/Go/Introduce/#_9","title":"\u6307\u9488","text":"<p>Go \u8bed\u8a00\u4e2d\u4e5f\u652f\u6301 <code>pointer</code>\uff0c\u4f46\u662f\u5b83\u652f\u6301\u7684\u529f\u80fd\u6bd4\u8f83\u6709\u9650\uff0c\u4e3b\u8981\u7684\u7528\u5904\u5c31\u662f\u4f20\u5165\u53c2\u6570\u5e76\u4e14\u8fdb\u884c\u4fee\u6539</p> <p>\u4e0b\u9762\u7684\u4ee3\u7801\u5c31\u662f\u4e00\u4e2a\u4f8b\u5b50\uff0c\u6211\u4eec\u901a\u8fc7\u6307\u9488\u6765\u8fdb\u884c\u5bf9 <code>n</code> \u7684\u4fee\u6539\uff0c\u5148\u901a\u8fc7\u6307\u9488\u5bfb\u5740\u4e86\u4e4b\u540e\uff0c\u518d\u8fdb\u884c\u4fee\u6539\u3002 <pre><code>package main\n\nimport \"fmt\"\n\nfunc add2(n int) {\n    n += 2\n}\n\nfunc add2ptr(n *int) {\n    *n += 2\n}\n\nfunc main() {\n    n := 5\n    add2(n)\n    fmt.Println(n) // 5\n    add2ptr(&amp;n)\n    fmt.Println(n) // 7\n}\n</code></pre></p>"},{"location":"Tutorial/Go/Introduce/#_10","title":"\u7ed3\u6784\u4f53","text":"<p>Go \u4e2d\u4e5f\u5b58\u5728\u7ed3\u6784\u4f53\uff0c\u5b83\u662f\u4e00\u79cd\u81ea\u5b9a\u4e49\u7684\u6570\u636e\u7c7b\u578b\uff0c\u53ef\u4ee5\u5305\u542b\u591a\u4e2a\u5b57\u6bb5\u3002</p> <pre><code>package main\n\nimport \"fmt\"\n\ntype user struct {\n    name     string\n    password string\n}\n\nfunc main() {\n    a := user{name: \"wang\", password: \"1024\"}\n    b := user{\"wang\", \"1024\"}\n    c := user{name: \"wang\"}\n    c.password = \"1024\"\n    var d user\n    d.name = \"wang\"\n    d.password = \"1024\"\n\n    fmt.Println(a, b, c, d)                 // {wang 1024} {wang 1024} {wang 1024} {wang 1024}\n    fmt.Println(checkPassword(a, \"haha\"))   // false\n    fmt.Println(checkPassword2(&amp;a, \"haha\")) // false\n}\n\nfunc checkPassword(u user, password string) bool {\n    return u.password == password\n}\n\nfunc checkPassword2(u *user, password string) bool {\n    return u.password == password\n}\n</code></pre> <p>\u7ec8\u4e8e\u6709\u70b9 OOP \u90a3\u5473\u513f\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 <code>type</code> \u5173\u952e\u5b57\u6765\u5b9a\u4e49\u4e00\u4e2a\u7ed3\u6784\u4f53\uff0c\u7136\u540e\u901a\u8fc7 <code>.</code> \u6765\u8bbf\u95ee\u7ed3\u6784\u4f53\u7684\u5b57\u6bb5\u3002\u540c\u65f6\u6211\u4eec\u4e5f\u53ef\u4ee5\u901a\u8fc7 <code>&amp;</code> \u6765\u83b7\u53d6\u7ed3\u6784\u4f53\u7684\u6307\u9488\u3002\u7ed3\u6784\u4f53\u4e5f\u652f\u6301\u6307\u9488\uff0c\u8fd9\u6837\u80fd\u591f\u5b9e\u73b0\u5bf9\u7ed3\u6784\u4f53\u7684\u4fee\u6539\uff0c\u4e5f\u53ef\u4ee5\u5728\u67d0\u79cd\u60c5\u51b5\u4e0b\u907f\u514d\u4e00\u4e9b\u5927\u7ed3\u6784\u4f53\u7684\u62f7\u8d1d\u5f00\u9500</p>"},{"location":"Tutorial/Go/Introduce/#_11","title":"\u7ed3\u6784\u4f53\u65b9\u6cd5","text":"<pre><code>package main\n\nimport \"fmt\"\n\ntype user struct {\n    name     string\n    password string\n}\n\nfunc (u user) checkPassword(password string) bool {\n    return u.password == password\n}\n\nfunc (u *user) resetPassword(password string) {\n    u.password = password\n}\n\nfunc main() {\n    a := user{name: \"wang\", password: \"1024\"}\n    a.resetPassword(\"2048\")\n    fmt.Println(a.checkPassword(\"2048\")) // true\n}\n</code></pre> <p>\u76f8\u6bd4\u4e0a\u9762\u63d0\u5230\u7684 <code>checkPassword</code> \u51fd\u6570\uff0c\u6211\u4eec\u5728\u5b9a\u4e49\u7ed3\u6784\u4f53\u65b9\u6cd5\u4e2d\u7684 <code>checkPassword</code> \u7684\u65f6\u5019\uff0c\u4f1a\u5728\u65b9\u6cd5\u540d\u524d\u9762\u52a0\u4e0a\u4e00\u4e2a\u62ec\u53f7\uff0c\u7136\u540e\u5728\u62ec\u53f7\u4e2d\u52a0\u4e0a\u4e00\u4e2a\u53c2\u6570\uff0c\u8fd9\u4e2a\u53c2\u6570\u5c31\u662f\u63a5\u6536\u8005\uff0c\u5b83\u53ef\u4ee5\u662f\u503c\u63a5\u6536\u8005\uff0c\u4e5f\u53ef\u4ee5\u662f\u6307\u9488\u63a5\u6536\u8005\u3002\u5982\u679c\u6211\u4eec\u7ed9\u53c2\u6570\u5e26\u4e0a\u4e86\u6307\u9488\uff0c\u90a3\u4e48\u5c31\u8868\u660e\u662f\u53ef\u4ee5\u5bf9\u8fd9\u4e2a\u7ed3\u6784\u4f53\u8fdb\u884c\u4fee\u6539\u7684\u3002\u5426\u5219\u7684\u8bdd\u5176\u5b9e\u5c31\u662f\u5bf9\u8fd9\u4e2a\u7ed3\u6784\u4f53\u7684\u503c\u8fdb\u884c\u62f7\u8d1d\u3002</p>"},{"location":"Tutorial/Go/Introduce/#_12","title":"\u9519\u8bef\u5904\u7406","text":"<p>\u5728 <code>Go</code> \u8bed\u8a00\u4e2d\uff0c\u9519\u8bef\u5904\u7406\u662f\u4e00\u4e2a\u5f88\u91cd\u8981\u7684\u6982\u5ff5\uff0c\u5b83\u80fd\u901a\u8fc7\u8fd4\u56de\u9519\u8bef\u503c\u6765\u544a\u77e5\u662f\u54ea\u4e2a\u51fd\u6570\u51fa\u73b0\u4e86\u95ee\u9898\uff0c\u5e76\u4e14\u80fd\u591f\u7b80\u5355\u7684 <code>if-else</code> \u6765\u8fdb\u884c\u5904\u7406\u9519\u8bef\u3002 \u5728\u51fd\u6570\u91cc\u9762\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u51fd\u6570\u7684\u8fd4\u56de\u503c\u7c7b\u578b\u52a0\u4e00\u4e2a <code>error</code>.\u5c31\u4ee3\u8868\u8fd9\u4e2a\u51fd\u6570\u53ef\u80fd\u4f1a\u51fa\u73b0\u8fd4\u56de\u9519\u8bef\u3002\u90a3\u4e48\u5728\u51fd\u6570\u5b9e\u73b0\u7684\u65f6\u5019\uff0c\u5c31\u5e94\u8be5\u8fd4\u56de\u4e24\u4e2a\u503c\uff0c\u8981\u4e48\u662f\u7ed3\u679c\uff0c\u8981\u4e48\u662f\u9519\u8bef\u3002 <code>return nil \u548c error</code> \u6216\u8005 <code>return value \u548c nil</code></p> <pre><code>package main\n\nimport (\n    \"errors\"\n    \"fmt\"\n)\n\ntype user struct {\n    name     string\n    password string\n}\n\nfunc findUser(users []user, name string) (v *user, err error) {\n    for _, u := range users {\n        if u.name == name {\n            return &amp;u, nil\n        }\n    }\n    return nil, errors.New(\"not found\")\n}\n\nfunc main() {\n    u, err := findUser([]user{{\"wang\", \"1024\"}}, \"wang\")\n    if err != nil {\n        fmt.Println(err)\n        return\n    }\n    fmt.Println(u.name) // wang\n\n    if u, err := findUser([]user{{\"wang\", \"1024\"}}, \"li\"); err != nil {\n        fmt.Println(err) // not found\n        return\n    } else {\n        fmt.Println(u.name)\n    }\n}\n</code></pre> <p>\u6211\u4eec\u770b\u4e0a\u9762\u7684\u4ee3\u7801 <code>v *user</code> \u8868\u793a\u7684\u662f\u8fd4\u56de\u7684\u4e3a <code>user</code> \u7c7b\u578b\u7684\u6307\u9488</p>"},{"location":"Tutorial/Go/Introduce/#_13","title":"\u5b57\u7b26\u4e32","text":"<pre><code>package main\n\nimport (\n    \"fmt\"\n    \"strings\"\n)\n\nfunc main() {\n    a := \"hello\"\n    fmt.Println(strings.Contains(a, \"ll\"))                // true\n    fmt.Println(strings.Count(a, \"l\"))                    // 2\n    fmt.Println(strings.HasPrefix(a, \"he\"))               // true\n    fmt.Println(strings.HasSuffix(a, \"llo\"))              // true\n    fmt.Println(strings.Index(a, \"ll\"))                   // 2\n    fmt.Println(strings.Join([]string{\"he\", \"llo\"}, \"-\")) // he-llo\n    fmt.Println(strings.Repeat(a, 2))                     // hellohello\n    fmt.Println(strings.Replace(a, \"e\", \"E\", -1))         // hEllo\n    fmt.Println(strings.Split(\"a-b-c\", \"-\"))              // [a b c]\n    fmt.Println(strings.ToLower(a))                       // hello\n    fmt.Println(strings.ToUpper(a))                       // HELLO\n    fmt.Println(len(a))                                   // 5\n    b := \"\u4f60\u597d\"\n    fmt.Println(len(b)) // 6\n}\n</code></pre> <p>\u5b57\u7b26\u4e32\u6ca1\u4ec0\u4e48\u597d\u8bf4\u7684\uff0c\u5c31\u662f\u4e00\u4e9b\u5185\u7f6e\u7684\u51fd\u6570\uff0c\u53ef\u4ee5\u7528\u6765\u5904\u7406\u5b57\u7b26\u4e32\u3002\u524d\u63d0\u662f\u6211\u4eec\u9700\u8981\u5f15\u5165 <code>strings</code> \u5305\u6765\u8fdb\u884c\u5904\u7406\u3002\u4e0d\u7136\u7684\u8bdd\u65e0\u6cd5\u8c03\u7528\u8fd9\u4e9b\u51fd\u6570\u3002</p> <p>\u5bf9\u4e8e \u5b57\u7b26\u4e32\u7684\u683c\u5f0f\u5316\u8f93\u51fa\uff0c<code>go</code> \u8bed\u8a00\u4e2d\u7684<code>printf</code> \u51fd\u6570 \u53ef\u4ee5\u7528 <code>%v</code> \u6765\u652f\u6301\u5404\u79cd\u7c7b\u578b\u7684\u8f93\u51fa\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u5229\u7528 <code>%+v</code> \u6765\u8fdb\u884c\u66f4\u8be6\u7ec6\u7684\u7ed3\u679c\uff0c\u6bd4\u5982\u5728\u6253\u5370\u7ed3\u6784\u4f53\u7684\u65f6\u5019\u3002\u4e5f\u53ef\u4ee5\u7528 <code>%#v</code> \u6765\u8fdb\u884c\u66f4\u8be6\u7ec6\u7684\u8f93\u51fa\uff0c\u6bd4\u5982\u5728\u6253\u5370\u5207\u7247\u7684\u65f6\u5019\u3002</p> <p>\u6211\u4eec\u65e2\u7136\u6709\u5b57\u7b26\u4e32\u4e86\uff0c\u5176\u5b9e\u5f88\u591a\u65f6\u5019\u6211\u4eec\u5c31\u4f1a\u9047\u5230\u4e00\u79cd\u95ee\u9898\u5c31\u662f\u5176\u4ed6\u503c\u7c7b\u578b\u7684\u8f6c\u5316\u6210\u5b57\u7b26\u4e32\uff0c\u6291\u6216\u662f\u5b57\u7b26\u4e32\u8f6c\u5316\u6210\u5176\u4ed6\u503c\u7c7b\u578b\u3002\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u5c31\u53ef\u4ee5\u5229\u7528 <code>strconv</code> \u5305\u6765\u8fdb\u884c\u8f6c\u5316\u3002</p> <pre><code>package main\n\nimport (\n    \"fmt\"\n    \"strconv\"\n)\n\nfunc main() {\n    f, _ := strconv.ParseFloat(\"1.234\", 64)\n    fmt.Println(f) // 1.234\n\n    n, _ := strconv.ParseInt(\"111\", 10, 64)\n    fmt.Println(n) // 111\n\n    n, _ = strconv.ParseInt(\"0x1000\", 0, 64)\n    fmt.Println(n) // 4096\n\n    n2, _ := strconv.Atoi(\"123\")\n    fmt.Println(n2) // 123\n\n    n2, err := strconv.Atoi(\"AAA\")\n    fmt.Println(n2, err) // 0 strconv.Atoi: parsing \"AAA\": invalid syntax\n}\n</code></pre>"},{"location":"Tutorial/Go/Introduce/#json","title":"JSON","text":"<p>\u4e3a\u4ec0\u4e48\u8981\u5728 <code>go</code> \u8bed\u8a00\u4e2d\u628a <code>JSON</code> \u5355\u72ec\u62ff\u51fa\u6765\u8bf4\uff0c\u5c31\u662f\u56e0\u4e3a <code>go</code> \u8bed\u8a00\u4e2d\u7684\u7ed3\u6784\u4f53\u7684\u4f18\u52bf\uff0c\u8ba9\u5b83\u5904\u7406 <code>JSON</code> \u7279\u522b\u65b9\u4fbf\u3002\u6211\u4eec\u53ea\u8981\u4fdd\u8bc1\u6bcf\u4e2a\u5b57\u6bb5\u7684\u9996\u5b57\u6bcd\u5927\u5199\uff0c\u5c31\u53ef\u4ee5\u76f4\u63a5\u5229\u7528<code>JSON.MarshalIndent</code>\u6765\u8fdb\u884c\u5e8f\u5217\u5316\u53d8\u6210\u4e00\u4e2a <code>JSON</code> \u7684\u5b57\u7b26\u4e32\u3002\u540c\u65f6\u6211\u4eec\u4e5f\u53ef\u4ee5\u5229\u7528 <code>JSON.Unmarshal</code> \u6765\u8fdb\u884c\u53cd\u5e8f\u5217\u5316\u3002</p> <p>\u5f53\u7136\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u5229\u7528 <code>JSON</code> \u4e2d\u7684 <code>tag</code> \u8fdb\u884c\u76f8\u5173\u7684\u64cd\u4f5c\u6765\u6ee1\u8db3\u6211\u4eec\u7684\u9700\u6c42\u3002\u6bd4\u5982\u6211\u4eec\u53ef\u4ee5\u5728\u7ed3\u6784\u4f53\u4e2d\u52a0\u4e0a <code>tag</code> \u6765\u8fdb\u884c\u5e8f\u5217\u5316\u7684\u65f6\u5019\u7684\u5b57\u6bb5\u540d\u7684\u4fee\u6539\u3002</p> <pre><code>package main\n\nimport (\n    \"encoding/json\"\n    \"fmt\"\n)\n\ntype userInfo struct {\n    Name  string\n    Age   int `json:\"age\"`\n    Hobby []string\n}\n\nfunc main() {\n    a := userInfo{Name: \"wang\", Age: 18, Hobby: []string{\"Golang\", \"TypeScript\"}}\n    buf, err := json.Marshal(a)\n    if err != nil {\n        panic(err)\n    }\n    fmt.Println(buf)         // [123 34 78 97...]\n    fmt.Println(string(buf)) // {\"Name\":\"wang\",\"age\":18,\"Hobby\":[\"Golang\",\"TypeScript\"]}\n\n    buf, err = json.MarshalIndent(a, \"\", \"\\t\")\n    if err != nil {\n        panic(err)\n    }\n    fmt.Println(string(buf))\n\n    var b userInfo\n    err = json.Unmarshal(buf, &amp;b)\n    if err != nil {\n        panic(err)\n    }\n    fmt.Printf(\"%#v\\n\", b) // main.userInfo{Name:\"wang\", Age:18, Hobby:[]string{\"Golang\", \"TypeScript\"}}\n}\n</code></pre>"},{"location":"Tutorial/Go/Introduce/#_14","title":"\u65f6\u95f4\u5904\u7406","text":"<p>\u8fd9\u4e2a\u6ca1\u4ec0\u4e48\u597d\u8bf4\u7684\uff0c\u5c31\u662f\u53ef\u4ee5\u5229\u7528 <code>time.Now()</code> \u6765\u83b7\u53d6\u4e00\u4e2a\u65f6\u95f4\u7684\u5bf9\u8c61\u7ed3\u6784\u4f53\u3002\u76f4\u63a5\u770b\u4f8b\u5b50\u4ee3\u7801</p> <pre><code>package main\n\nimport (\n    \"fmt\"\n    \"time\"\n)\n\nfunc main() {\n    now := time.Now()\n    fmt.Println(now) // 2022-03-27 18:04:59.433297 +0800 CST m=+0.000087933\n    t := time.Date(2022, 3, 27, 1, 25, 36, 0, time.UTC)\n    t2 := time.Date(2022, 3, 27, 2, 30, 36, 0, time.UTC)\n    fmt.Println(t)                                                  // 2022-03-27 01:25:36 +0000 UTC\n    fmt.Println(t.Year(), t.Month(), t.Day(), t.Hour(), t.Minute()) // 2022 March 27 1 25\n    fmt.Println(t.Format(\"2006-01-02 15:04:05\"))                    // 2022-03-27 01:25:36\n    diff := t2.Sub(t)\n    fmt.Println(diff)                           // 1h5m0s\n    fmt.Println(diff.Minutes(), diff.Seconds()) // 65 3900\n    t3, err := time.Parse(\"2006-01-02 15:04:05\", \"2022-03-27 01:25:36\")\n    if err != nil {\n        panic(err)\n    }\n    fmt.Println(t3 == t)    // true\n    fmt.Println(now.Unix()) // 1648738080\n}\n</code></pre>"},{"location":"Tutorial/JS%26TS/JS/","title":"JavaScript","text":"<p>\u4e8b\u4ef6\u9a71\u52a8</p>"},{"location":"Tutorial/JS%26TS/JS/#_1","title":"\u6b63\u5219\u8868\u8fbe\u5f0f","text":"<p>\u6b63\u5219\u8868\u8fbe\u5f0f\u662f\u63cf\u8ff0\u5b57\u7b26\u6a21\u5f0f\u7684\u5bf9\u8c61\u3002\u6b63\u5219\u8868\u8fbe\u5f0f\u7528\u4e8e\u5bf9\u5b57\u7b26\u4e32\u6a21\u5f0f\u5339\u914d\u53ca\u68c0\u7d22\u66ff\u4ee3\uff0c\u662f\u5bf9\u5b57\u7b26\u4e32\u6267\u884c\u5339\u914d\u7684\u5f3a\u5927\u5de5\u5177\u3002</p> <p>In JS,regular expressions are represented by RegExp objects.RegExp objects may be created with the <code>RegExp()</code> constructor, of course, but they are more often created using a special literal syntax.</p> <ul> <li> <p><code>let pattern = new RegExp(\"s$\")</code></p> <p>-&gt; It represents all the strings that ends with the letter <code>s</code> - <code>$</code>, a special meta-character that match the end  of  a substring.</p> </li> </ul> <p>The Syntax is <code>/pattern/modifiers</code> - Example :    - <code>/w3schools/i</code> \u8868\u793a\u7684\u662f<code>w3schools</code> \u8fd9\u4e2a\u9700\u8981\u88ab\u67e5\u627e\u7684\u5b57\u7b26\u4e32\uff0c<code>i</code>\u8868\u793a\u7684\u662f\u5ffd\u7565\u5927\u5c0f\u5199     <code>/w3schools/</code> represents that matches any string that contains the substring \"w3school\"/</p> <ul> <li><code>search()</code> <p>\u8fd9\u4e2a\u65b9\u6cd5\u7684\u4f5c\u7528\u662f\u5229\u7528\u4e00\u4e2a\u8868\u8fbe\u5f0f\u6765\u67e5\u627e\u548c\u8fd4\u56de\u627e\u5230\u7684\u5b57\u7b26\u4e32\u7684\u4f4d\u7f6e</p> </li> </ul> <pre><code>let text = \"Visit W3Schools!\";\nlet n = text.search(text);\nconsole.log(n) // 6\n</code></pre> <ul> <li><code>replace()</code> <p>This method replaces a specified value with another value in string</p> </li> </ul> <pre><code>let text = \"Visit Microsoft!\";\nlet reuslt = text.replace(\"Microsoft\",\"W3Schools\");\n</code></pre> <p>\u4e0b\u9762\uff0c\u6211\u4eec\u7ed3\u5408\u4e00\u4e0bRegExp\u6765\u8fdb\u884c\u67e5\u627e <pre><code>let text = \"Visit Microsoft!\";\n// \u5c06\u5b57\u7b26\u4e32\u4e2d\u6240\u6709\u5305\u542b \u5ffd\u7565\u5927\u5c0f\u5199\u7684 `microsoft` \u7684\u5b57\u7b26\u4e32\u66ff\u6362\u6210`W3Schools`\nlet result = text.replace(/microsoft/i,\"W3Schools\");\n</code></pre></p>"},{"location":"Tutorial/JS%26TS/JS/#regular-expression-modifiers","title":"Regular Expression Modifiers","text":"<ul> <li><code>i</code> Perform case-intensitive matching \u5ffd\u7565\u5927\u5c0f\u5199</li> <li> <p><code>g</code> Perform a global match (find all) \u5bfb\u627e\u6240\u6709 \u8fd9\u4e2a\u600e\u4e48\u7406\u89e3\u5462\uff1f\u5c31\u662f\u5c06\u5f85\u67e5\u627e\u7684\u5b57\u7b26\u4e32\u4e2d\u7684\u6240\u6709\u7b26\u5408\u6807\u51c6\u7684\u5b57\u7b26\u4e32\u90fd\u67e5\u627e\u51fa\u6765</p> </li> <li> <p><code>m</code> Perform multiline matching \u7528\u4e8e\u591a\u884c\u5b57\u7b26\u4e32\u4e2d\u7684\u67e5\u627e\uff0c \u5e76\u4e14<code>^</code> \u548c <code>$</code> \u5e94\u8be5\u5339\u914d\u5b57\u7b26\u4e32\u7684\u5f00\u59cb\u548c\u7ed3\u675f <pre><code>const str = \"hello\\nworld\";\nconst regex = /^world/m\nconsole.log(str.match(regex)); // \u8f93\u51fa [\"world\"]\n</code></pre></p> </li> <li> <p><code>d</code> perform stat and end matching</p> </li> </ul>"},{"location":"Tutorial/JS%26TS/JS/#bom","title":"BOM\u7f16\u7a0b","text":"<p>Browser Object Model \u6d4f\u89c8\u5668\u5bf9\u8c61\u6a21\u578b</p> <ul> <li>BOM \u662f\u7531\u4e00\u7cfb\u5217\u5bf9\u8c61\u7ec4\u6210\uff0c\u8bbf\u95ee\u3001\u63a7\u5236\u3001\u4fee\u6539\u6d4f\u89c8\u5668\u5c5e\u6027\u548c\u65b9\u6cd5\uff08\u901a\u8fc7window\u5bf9\u8c61\u53ca\u5c5e\u6027\u7684\u4e00\u7cfb\u5217\u65b9\u6cd5\u63a7\u5236\u6d4f\u89c8\u5668\u884c\u4e3a\u7684\u4e00\u79cd\u7f16\u7a0b\uff09</li> </ul> <p></p> <p> \u6211\u4eec\u6bd4\u8f83\u4e0a\u4e0b\u4e24\u4e2a\u56fe\u5206\u6790\uff0c\u53ef\u4ee5\u53d1\u73b0\u4e00\u4e2a\u7f51\u9875\u5176\u5b9e\u662f\u7531\u5f88\u591a\u4e2a<code>window</code>\u5bf9\u8c61\u7ec4\u6210\u7684   - <code>history</code> \u5bf9\u8c61 \u8bbf\u95ee\u6d4f\u89c8\u5668\u7684\u6d4f\u89c8\u5386\u53f2   - <code>location</code> \u5bf9\u8c61 \u6d4f\u89c8\u5668\u7684\u5730\u5740\u680f   - <code>console</code> \u5bf9\u8c61 \u6d4f\u89c8\u5668\u5f00\u53d1\u8005\u5de5\u5177\u7684\u63a7\u5236\u53f0   - <code>screen</code> \u5bf9\u8c61 \u4ee3\u8868\u5c4f\u5e55   - <code>document</code> \u5bf9\u8c61 \u4ee3\u8868\u7684\u662f\u6d4f\u89c8\u5668\u6253\u5f00\u7684html\u6587\u6863   - <code>navigator</code> \u5bf9\u8c61 \u5f53\u524d\u6d4f\u89c8\u5668\u8f6f\u4ef6\u672c\u8eab   - <code>sessionStorage</code> \u5bf9\u8c61 \u4f1a\u8bdd\u7ea7\u5b58\u50a8   - <code>localStorage</code> \u5bf9\u8c61 \u6301\u4e45\u7ea7\u5b58\u50a8 <code>window</code> \u5bf9\u8c61 API <code>window</code> \u5bf9\u8c61\u5c5e\u6027 API  \u901a\u8fc7<code>window</code>\u5bf9\u8c61\u53ca\u5176\u5c5e\u6027\u7684API\uff0c\u63a7\u5236\u6d4f\u89c8\u5668\u7684\u5c5e\u6027\u548c\u884c\u4e3a</p> <p>\u6211\u4eec\u5176\u5b9e\u5c31\u662f\u5bf9\u4e0d\u540c\u7684\u5bf9\u8c61\u8fdb\u884c\u7f16\u8f91\u5de5\u4f5c \u90a3\u4e48BOM\u7f16\u7a0b\u5176\u5b9e\u5c31\u662f\u901a\u8fc7<code>window</code>\u5bf9\u8c61\u53ca\u5c5e\u6027\u6765\u63a7\u5236\u6d4f\u89c8\u5668\u884c\u4e3a\u7684\u4e00\u79cd\u7f16\u7a0b\u3002</p>"},{"location":"Tutorial/JS%26TS/JS/#bom_1","title":"BOM\u5e38\u89c1\u7f16\u7a0b","text":""},{"location":"Tutorial/JS%26TS/JS/#_2","title":"\u4e09\u79cd\u5f39\u7a97\u65b9\u5f0f","text":"<ul> <li><code>alert</code></li> <li><code>prompt</code></li> <li><code>confirm</code> <p><code>window</code> \u5bf9\u8c61\u65e0\u9700\u81ea\u5df1\u521b\u5efa\uff0c\u662f\u81ea\u5e26\u7684</p> </li> </ul> <pre><code>function fun1(){\n    window.alert(\"hello\");\n\n    // res \u662f\u8f93\u5165\u7684\u5185\u5bb9\n    var res = window.prompt(\"hello,\u8bf7\u8f93\u5165\u59d3\u540d\");\n    console.log(res)\n\n    var res1 = window.confirm(\"\u786e\u5b9a\u8981\u5220\u9664\u5417?\");\n    console.log(res1)\n\n}\n</code></pre>"},{"location":"Tutorial/JS%26TS/JS/#_3","title":"\u5b9a\u65f6\u4efb\u52a1","text":"<pre><code>function func4(){\n    window.setTimeout(function(){\n        console.log(\"hello\")\n    },2000);\n}\n</code></pre>"},{"location":"Tutorial/JS%26TS/JS/#history","title":"history \u5c5e\u6027 \u8bbf\u95ee\u5386\u53f2","text":"<ul> <li>\u4e0a\u4e00\u9875</li> <li>\u4e0b\u4e00\u9875</li> </ul> <pre><code>function funA(){\n    // \u5411\u524d\u7ffb\u9875\n    history.back()\n}\n\nfunction funcB(){\n    // \u5411\u524d\u7ffb\u9875\n    history.forward()\n}\n</code></pre>"},{"location":"Tutorial/JS%26TS/JS/#location","title":"location","text":"<pre><code>function func(){\n    // \u4fee\u6539\u5730\u5740\u680f\u4e2d\u7684URL -&gt; \u8d85\u94fe\u63a5\n    // The fields but not method;\n    window.location.href = \"http://www.atguigu.com\"\n}\n</code></pre>"},{"location":"Tutorial/JS%26TS/JS/#session-storage","title":"session Storage \u4f1a\u8bdd\u7ea7\u6570\u636e","text":"<pre><code>function funcE(){\n    window.sessionStorage.setItem(\"keyA\",\"valueA\")\n    // \u952e\u540d\n    console.log(sessionStorage.getItem(\"keyA\"))\n}\n</code></pre> <p>\u6d4f\u89c8\u5668\u91cd\u542f\u7684\u65f6\u5019\uff0c<code>session Storage</code>\u4e2d\u7684\u6570\u636e\u5c31\u4f1a\u88ab\u6e05\u7a7a\uff0c\u4f46\u662f<code>local Storage</code>\u4e2d\u7684\u6570\u636e\u4ecd\u7136\u4f1a\u5b58\u5728</p>"},{"location":"Tutorial/JS%26TS/JS/#local-storage","title":"local Storage \u6301\u4e45\u7ea7\u5b58\u50a8\u6570\u636e","text":"<pre><code>function funcF(){\n    window.localStorage.setItem(\"keyA\",\"valueA\")\n}\n</code></pre>"},{"location":"Tutorial/JS%26TS/JS/#dom","title":"DOM \u7f16\u7a0b","text":"<p>DOM -&gt; Documentation Object Model </p> <p> \u901a\u8fc7<code>documentation</code>\u7684API\u5b9e\u73b0\u9875\u9762\u5143\u7d20\u7684\u66f4\u6539\u3002 \u9996\u5148\uff0c\u4e3a\u4ec0\u4e48\u4f1a\u6709<code>DOM</code>\u5355\u72ec\u7684\u5206\u5f00\u5462\uff1f\u56e0\u4e3a<code>DOM</code>\u4e2d\u6240\u5305\u542b\u7684API\u8fc7\u4e8e\u4e30\u5bcc\uff0c\u5c31\u5355\u72ec\u7684\u5355\u5f00\u4e86\u4e00\u4e2a\u3002\u8fd8\u6709\u5c31\u662f\u53ef\u80fd\u6709\u4eba\u4f1a\u89c9\u5f97\u6211\u53ef\u4ee5\u5728<code>html</code>\u4e0a\u7684\u6e90\u4ee3\u7801\u8fdb\u884c\u66f4\u6539\u554a\uff0c\u4f46\u662f\u4e8b\u5b9e\u4e0a\u662f\u5f53\u9879\u76ee\u6574\u4e2a\u53d1\u5e03\u4e86\u4e4b\u540e\uff0c\u6211\u4eec\u57fa\u672c\u4e0a\u4e0d\u4f1a\u5927\u6982\u524d\u7aef\u7684\u6e90\u4ee3\u7801\uff0c\u800c\u4e14\u5bf9\u4e8e\u4e0d\u540c\u7684\u7528\u6237\uff0c\u6240\u9762\u5bf9\u7684\u90fd\u662f\u4e0d\u540c\u7684\u3002\u90a3\u4e48\u8fd9\u79cd\u60c5\u51b5\u6211\u4eec\u5c31\u9700\u8981<code>DOM</code>\u7f16\u7a0b\u4e86\u3002\u65e0\u6cd5\u6ee1\u8db3\u5b9e\u65f6\u4fee\u6539\u6e90\u4ee3\u7801\u3002</p> <p> \u6211\u4eec\u7684\u6e90\u4ee3\u7801<code>index.html</code>\u662f\u90e8\u7f72\u5728\u670d\u52a1\u5668\u4e0a\u7684\uff0c\u4f46\u662f\u4f60\u6d4f\u89c8\u5668\u6240\u505a\u7684\u53ea\u662f\u5229\u7528\u670d\u52a1\u5668\u4e0a\u7684\u6e90\u4ee3\u7801\u6765\u6e32\u67d3\u751f\u4ea7\u4e86\u4e00\u4e2a<code>document</code>\u7684\u5bf9\u8c61\uff0c\u4f60\u6240\u5448\u73b0\u7684\u90fd\u662f<code>document</code>\u8fd9\u4e2a\u5bf9\u8c61\u6240\u5c55\u793a\u51fa\u6765\u7684\u5185\u5bb9\uff0c\u4f60\u53ef\u4ee5\u5982\u4e0b\u56fe\u4e00\u6837\uff0c\u5728\u5de5\u5177\u680f\u5185\u90e8\u8fdb\u884c\u5bf9<code>document</code>\u5bf9\u8c61\u7684\u4fee\u6539\uff0c\u4f46\u662f\u8fd9\u5e76\u4e0d\u4f1a\u5f71\u54cd\u5230\u4f60\u670d\u52a1\u5668\u4e0a\u7684\u6e90\u4ee3\u7801. \u4f46\u662f\u4f60\u5237\u65b0\u6d4f\u89c8\u5668\uff0c\u5176\u5b9e\u5c31\u662f\u91cd\u65b0\u4ece\u670d\u52a1\u5668\u83b7\u53d6<code>document</code>\u7684\u5185\u5bb9\uff0c\u91cd\u65b0\u6e32\u67d3\u3002 </p> <p>document \u4e2d\u7684\u5bf9\u8c61\u662f\u5c42\u5c42\u5305\u542b\u5173\u7cfb\uff0c\u6811\u5f62\u7ed3\u6784</p> <p>DOM \u6811\u7684\u8282\u70b9\u7c7b\u578b - \u5143\u7d20\u8282\u70b9 element \u6807\u7b7e - \u5c5e\u6027\u8282\u70b9 attribute \u5c5e\u6027 - \u6587\u672c\u6807\u7b7e text \u4e24\u4e2a\u6807\u7b7e\u4e2d\u95f4\u5305\u542b\u7684\u6587\u672c;</p>"},{"location":"Tutorial/JS%26TS/JS/#dom_1","title":"DOM \u83b7\u53d6\u5143\u7d20\u7684\u51e0\u79cd\u65b9\u5f0f","text":"<ol> <li>\u83b7\u5f97<code>document</code> dom \u6811</li> <li>\u4ece<code>document</code>\u4e2d\u83b7\u53d6\u8981\u64cd\u4f5c\u7684\u5143\u7d20</li> <li>\u76f4\u63a5\u83b7\u53d6</li> <li>\u95f4\u63a5\u83b7\u53d6</li> <li>\u5bf9\u5143\u7d20\u8fdb\u884c\u64cd\u4f5c</li> <li>\u64cd\u4f5c\u5143\u7d20\u7684\u5c5e\u6027</li> <li>\u64cd\u4f5c\u5143\u7d20\u7684\u6587\u672c</li> <li>\u64cd\u4f5c\u5143\u7d20\u7684\u6837\u5f0f</li> <li> <p>\u589e\u5220\u5143\u7d20</p> </li> <li> <p>\u76f4\u63a5\u83b7\u53d6</p> </li> <li><code>documentById</code></li> <li><code>documentByTagName</code></li> <li><code>documentByClass</code></li> <li>\u95f4\u63a5\u83b7\u53d6</li> <li>\u6839\u636e\u7236\u5143\u7d20     <pre><code>function fun5(){\n    var div01 = document.getElementById(\"div01\");\n    var cs = div01.children //\u901a\u8fc7\u7236\u5143\u7d20\uff0c\u83b7\u53d6\u5168\u90e8\u5b50\u5143\u7d20\n    var cs1 = div01.firstElementChild;\n    var cs2 = div01.lastElementChild;\n    for(var i=0;i&lt;cs.length;i++)\n        console.log(cs[i])\n}\n</code></pre></li> <li>\u6839\u636e\u5b50\u5143\u7d20\uff0c\u83b7\u53d6\u7236\u4eb2\u5143\u7d20</li> <li>\u6839\u636e\u5b50\u5143\u7d20\uff0c\u83b7\u53d6\u5144\u5f1f\u5143\u7d20     <pre><code>function func6(){\n    var child = document.getElementById(\"1\")\n    var sibling = child.previousElementSibling\n    var nextSibling = child.nextElementSibling\n}\n</code></pre></li> </ol>"},{"location":"Tutorial/JS%26TS/JS/#dom_2","title":"DOM \u64cd\u7eb5\u5143\u7d20","text":"<ul> <li> <p>\u64cd\u7eb5\u5143\u7d20\u7684\u5c5e\u6027   <pre><code>function changeAttribute(){\n  var in1 = document.getElementById(\"in1\")\n  // \u4fee\u6539\u5c5e\u6027\u503c\n  in1.style.color = \"green\"\n}\n</code></pre></p> </li> <li> <p>\u64cd\u7eb5\u5143\u7d20\u7684\u6837\u5f0f   <pre><code>function changeAttribute(){\n  var in1 = document.getElementById(\"in1\")\n  // \u4fee\u6539\u6837\u5f0f\u503c\n   in1.style.color = \"green\"\n  // \u539f\u59cb\u6837\u5f0f\u4e2d\u7684 - \u53d8\u6210\u9a7c\u5cf0\u5f0f\u5b50 \n   in1.style.borderRadius = 13px \n}\n</code></pre></p> </li> <li> <p>\u64cd\u7eb5\u5143\u7d20\u7684\u6587\u672c</p> </li> <li><code>document.innerHTML</code></li> <li><code>document.innerText</code></li> </ul>"},{"location":"Tutorial/JS%26TS/JS/#dom_3","title":"DOM \u4e2d\u7684\u589e\u5220\u5143\u7d20","text":""},{"location":"Tutorial/JS%26TS/TS/","title":"TypeScript","text":""},{"location":"Tutorial/JS%26TS/TS/#interface","title":"Interface \u63a5\u53e3","text":"<p>TypeScript \u7684\u63a5\u53e3\u662f\u4e00\u7cfb\u5217\u62bd\u8c61\u65b9\u6cd5\u7684\u58f0\u660e\uff0c\u662f\u4e00\u4e9b\u65b9\u6cd5\u7279\u5f81\u7684\u96c6\u5408\u3002</p> <p>\u4e0b\u9762\u662f\u63a5\u53e3\u7684\u5b9a\u4e49 <pre><code>interface interface_name{\n    // \u65b9\u6cd5\u540d + \u7c7b\u578b\n}\n</code></pre></p> <pre><code>interface IPerson { \n    firstName:string, \n    lastName:string, \n    sayHi: ()=&gt;string \n} \n\nvar customer:IPerson = { \n    firstName:\"Tom\",\n    lastName:\"Hanks\", \n    sayHi: ():string =&gt;{return \"Hi there\"} \n} \n\nconsole.log(\"Customer \u5bf9\u8c61 \") \nconsole.log(customer.firstName) \nconsole.log(customer.lastName) \nconsole.log(customer.sayHi()) \n\n\n// \u63a5\u53e3\u4e0e\u6570\u7ec4\ninterface namelist{\n    [index:number] : string\n}\n\nvar list2:namelist = [\"Google\",\"Runoob\",\"Taobao\"];\n</code></pre> <p>\u63a5\u53e3\u4e5f\u53ef\u4ee5\u7ee7\u627f <pre><code>interface Person{\n    age:number\n}\n\ninterface Musician extends Person{\n    instrumemt:string\n}\n</code></pre></p>"},{"location":"Tutorial/Java/Java1/","title":"\u6613\u9519\u70b9\u603b\u7ed3","text":"<p>\u8fd9\u4e00\u90e8\u5206\u6765\u81ea\u4e8e \u6d59\u6c5f\u5927\u5b66 Java \u8bfe\u7a0b\u7684\u4f5c\u4e1a\u4e2d\u7684\u6613\u9519\u70b9\u603b\u7ed3\uff0c\u4ec5\u4f9b\u8003\u8bd5\u590d\u4e60\u4f7f\u7528\u3002</p>"},{"location":"Tutorial/Java/Java1/#_2","title":"\u5224\u65ad\u9898","text":"<ul> <li>[T] <code>Java</code> \u7684\u5b57\u7b26\u7c7b\u578b\u91c7\u7528\u7684\u662f Unicode \u7f16\u7801\u7684\u65b9\u5f0f\uff0c\u6bcf\u4e2aUnicode\u5b57\u7b26\u5360\u7528\u4e24\u4e2a\u5b57\u8282\u3002</li> <li> <p>[T] <code>Java</code> is a <code>type-safe</code> language.</p> <p>\u4ec0\u4e48\u662f <code>type-safe</code> ?   \u662f\u6307\u5728\u7f16\u8bd1\u548c\u8fd0\u884c\u7684\u65f6\u5019\uff0c\u80fd\u591f\u786e\u4fdd\u53d8\u91cf\u53ea\u80fd\u5b58\u50a8\u548c\u64cd\u4f5c\u4e0e\u5176\u7c7b\u578b\u4e00\u6837\u7684\u6570\u636e\uff0c\u53ef\u4ee5\u9632\u6b62\u7c7b\u578b\u9519\u8bef\uff01</p> </li> <li> <p>[F] compiled Java program can be executed on any operating System.</p> <p>\u51c6\u786e\u7684\u6765\u8bf4, compiled Java program \u662f\u6307 <code>javac</code>\u6307\u4ee4\u4e86\u4e4b\u540e\uff0c\u751f\u6210\u7684\u53ef\u4ee5\u5728\u5404\u4e2a\u64cd\u4f5c\u7cfb\u7edf\u7684<code>JVM</code>\u4e2d\u8fd0\u884c\u7684\u5b57\u8282\u7801\u6587\u4ef6\u3002\u6240\u4ee5\u8fd9\u4e2a\u8bf4\u6cd5\u662f\u9519\u8bef\u7684\u3002 </p> </li> <li> <p>[T] Objects created in Java do not need to be deleted or freed by the programmer</p> </li> <li> <p>[T] Member variables are to get default init values when the object is to be created. </p> <p><code>Java</code> \u4e2d\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5b83\u4f1a\u5c3d\u91cf\u7684\u907f\u514d\u53d8\u91cf\u672a\u521d\u59cb\u5316\u7684\u60c5\u51b5\uff0c\u56e0\u6b64\u4f1a\u7ed9\u53d8\u91cf\u8d4b\u4e88\u9ed8\u8ba4\u503c\u3002</p> </li> <li> <p>[F] Some Java objects are put in the heap, while some are in stack.</p> <p><code>Java</code> \u4e2d\u7684\u5bf9\u8c61\u90fd\u662f\u5728\u5806\u4e2d\u5206\u914d\u7684\uff0c\u800c\u4e0d\u662f\u5728\u6808\u4e2d\u5206\u914d\u7684\u3002\u6808\u4e0a\u5206\u914d\u7684\u90fd\u662f\u65b9\u6cd5\u8c03\u7528\u7684\u5c40\u90e8\u53d8\u91cf\u548c\u65b9\u6cd5\u8c03\u7528\u5e27\u3002</p> </li> <li> <p>[F] A Java class can extend from multiple base classes.</p> <p><code>Java</code> \u4e2d\u7684\u7c7b\u662f\u4e0d\u652f\u6301\u591a\u7ee7\u627f\u7684\uff0c\u53ea\u80fd\u7ee7\u627f\u4e00\u4e2a\u7c7b\uff0c\u4f46\u662f\u53ef\u4ee5\u5b9e\u73b0\u591a\u4e2a\u63a5\u53e3\u3002</p> <p>\u8bb0\u5f97\u533a\u5206 <code>extends</code> \u548c <code>implements</code> \u7684\u533a\u522b\uff0c\u524d\u8005\u662f\u7ee7\u627f\u7c7b\uff0c\u540e\u8005\u662f\u5b9e\u73b0\u63a5\u53e3\u3002</p> </li> <li> <p>[F] <code>protected</code> can be used to prevent methods and data been accessed from non-derived classes</p> <p><code>protected</code>\u4fee\u9970\u7b26\u7684\u4f5c\u7528 \u8be6\u7ec6\u89c1 \u4ee5\u4e00\u8a00\u853d\u4e4b\u5c31\u662f\u53ef\u4ee5\u8ba9\u540c\u4e00\u4e2a\u5305\u4e2d\u7684\u7c7b\u8bbf\u95ee\uff0c\u540c\u65f6\u4e5f\u80fd\u8ba9\u5b50\u7c7b\u8bbf\u95ee\u3002 \u4f5c\u7528</p> </li> <li> <p>[T] \u63a5\u53e3\u548c\u7c7b\u4e0d\u540c\uff0c\u4e0d\u5177\u6709\u5355\u7ee7\u627f\u6027\uff0c\u5b83\u53ef\u4ee5\u7ee7\u627f\u591a\u4e2a\u63a5\u53e3\u3002</p> <p>\u63a5\u53e3\u8981\u548c\u7c7b\u533a\u5206\u5f00\u6765</p> </li> <li> <p>[T] \u63a5\u53e3\u4e0d\u5141\u8bb8\u88ab <code>private</code> \u6216 <code>protected</code> \u4fee\u9970\u7b26\u4fee\u9970\u3002</p> <p>\u53ea\u53ef\u4ee5\u662f<code>public</code>,\u4e0d\u8fc7\u9ed8\u8ba4\u662f<code>public</code>,\u6240\u4ee5\u4e0d\u7528\u58f0\u660e</p> </li> <li> <p>[F] \u63a5\u53e3\u53ef\u4ee5\u7ee7\u627f\u81ea\u4e00\u4e2a\u63a5\u53e3\u6216\u591a\u4e2a\u63a5\u53e3\uff0c\u4e5f\u53ef\u4ee5\u7ee7\u627f\u81ea\u62bd\u8c61\u7c7b\u3002 <pre><code>public abstract class Shape{\n    private String color;\n}\n</code></pre>     \u53ef\u4ee5\u7528\u591a\u6001\u6765\u7406\u89e3\u62bd\u8c61\u7c7b\u3002\u62bd\u8c61\u7c7b\u662f\u4e0d\u80fd\u88ab\u5b9e\u4f8b\u5316\u7684\u7c7b\uff0c\u4e5f\u5c31\u662f\u4e0d\u7528\u5229\u7528<code>new</code>\u6765\u521b\u5efa\u7684\u3002</p> </li> <li> <p>[F] There is a <code>length()</code> method for all the arrays to represent the number of elements</p> <p>\u4e8b\u5b9e\u4e0a\uff0c\u6570\u7ec4\u662f\u6ca1\u6709<code>length()</code> \u65b9\u6cd5,\u5e94\u8be5\u662f<code>length</code>\u5c5e\u6027\u3002</p> </li> <li> <p>[T] To pass one row of a double-subscripted array to a method that receives a single-subscripted array, simply pass the name of the array followed by the row subscript.</p> </li> <li> <p>[T] \u5f53\u4e00\u4e2a\u65b9\u6cd5\u5728\u8fd0\u884c\u8fc7\u7a0b(runtime)\u4e2d\u4ea7\u751f\u4e86\u4e00\u4e2a\u5f02\u5e38\uff0c\u5219\u8fd9\u4e2a\u65b9\u6cd5\u4f1a\u88ab\u7ec8\u6b62\uff0c\u4f46\u662f\u6574\u4e2a\u7a0b\u5e8f\u4e0d\u4e00\u5b9a\u88ab\u7ec8\u6b62\u8fd0\u884c</p> </li> <li> <p>[T] \u6240\u6709\u4e8c\u8fdb\u5236I/O\u7684\u6839\u7c7b\u90fd\u662f <code>InputStream</code>\u7c7b \u548c<code>OutStream</code>\u7c7b\uff0c\u540c\u65f6\u662f\u4ee5\u5b57\u8282\u4e3a\u5355\u4f4d\u7684</p> <p>every date read and write <code>8bit</code></p> </li> <li> <p>[F] ArrayList \u7c7b\u662f\u7ebf\u7a0b\u5b89\u5168\u7684</p> <p><code>ArrayList</code> \u662f\u7ebf\u7a0b\u4e0d\u5b89\u5168\u7684\uff0c\u5982\u679c\u9700\u8981\u7ebf\u7a0b\u5b89\u5168\u7684\u8bdd\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>Vector</code> \u6216\u8005 <code>Collections.synchronizedList</code> \u6765\u8fdb\u884c\u5305\u88c5\u3002\u4f46<code>Vector</code>\u5e94\u8be5\u662f\u4e0d\u63a8\u8350\u4f7f\u7528\u7684\u3002</p> </li> <li> <p>[F] \u9759\u6001\u65b9\u6cd5\u4e0d\u80fd\u4f7f\u7528<code>synchronized</code>\u5173\u952e\u5b57\u6765\u4fee\u9970</p> </li> <li> <p>[F] \u5728Java\u4e2d\uff0c\u9ad8\u4f18\u5148\u7ea7\u7684\u53ef\u8fd0\u884c\u7ebf\u7a0b\u4f1a\u62a2\u5360\u4f4e\u4f18\u5148\u7ea7\u7ebf\u7a0b\u3002</p> <p>\u5728Java\u4e2d\u7684\u7ebf\u7a0b\u8c03\u5ea6\u662f\u4e0d\u786e\u5b9a\u7684\uff0c\u53ea\u80fd\u8bf4\u9ad8\u4f18\u5148\u7ea7\u7684\u7ebf\u7a0b\u4f1a\u6709\u66f4\u591a\u7684\u673a\u4f1a\u88ab\u8c03\u5ea6\uff0c\u4f46\u662f\u4e0d\u80fd\u8bf4\u4e00\u5b9a\u4f1a\u62a2\u5360\u4f4e\u4f18\u5148\u7ea7\u7684\u7ebf\u7a0b\u3002</p> </li> <li> <p>[F] \u7a0b\u5e8f\u5f00\u53d1\u8005\u5fc5\u987b\u521b\u5efa\u4e00\u4e2a\u7ebf\u7a0b\u53bb\u7ba1\u7406\u5185\u5b58\u7684\u5206\u914d.</p> <p><code>Java</code> \u4e2d\u7684\u5185\u5b58\u7ba1\u7406\u662f\u7531<code>JVM</code>\u6765\u8fdb\u884c\u7ba1\u7406\u7684\uff0c\u7a0b\u5e8f\u5458\u4e0d\u9700\u8981\u5173\u5fc3\u5185\u5b58\u7684\u5206\u914d\u548c\u91ca\u653e\u3002</p> </li> <li> <p>[F] \u5f53\u8c03\u7528\u4e00\u4e2a\u6b63\u5728\u8fdb\u884c\u7ebf\u7a0b\u7684stop()\u65b9\u6cd5\u65f6\uff0c\u8be5\u7ebf\u7a0b\u4fbf\u4f1a\u8fdb\u5165\u4f11\u7720\u72b6\u6001\u3002</p> <p><code>stop()</code>\u65b9\u6cd5\u662f\u7528\u6765\u7ec8\u6b62\u4e00\u4e2a\u7ebf\u7a0b\u7684\uff0c\u800c\u4e0d\u662f\u8ba9\u7ebf\u7a0b\u8fdb\u5165\u4f11\u7720\u72b6\u6001\u3002\u4f46\u8fd9\u4e2a\u65b9\u6cd5\u5df2\u7ecf\u88ab\u5e9f\u5f03\u4e86\uff0c\u4e0d\u63a8\u8350\u4f7f\u7528\u3002</p> </li> <li> <p>[T] StringBuffer\u7c7b\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\uff0cStringBuilder\u7c7b\u662f\u7ebf\u7a0b\u4e0d\u5b89\u5168\u7684\u3002</p> <p><code>StringBuffer</code> \u662f\u7ebf\u7a0b\u5b89\u5168\u7684\uff0c<code>StringBuilder</code> \u662f\u7ebf\u7a0b\u4e0d\u5b89\u5168\u7684\u3002</p> </li> <li> <p>[T] HashSet\u7c7b\u662f\u7ebf\u7a0b\u4e0d\u5b89\u5168\u7684</p> </li> <li> <p>[F] All threads defined in one program are to be executed in one CPU concurrently.</p> <p><code>Java</code> \u4e2d\u7684\u7ebf\u7a0b\u662f\u7531<code>JVM</code>\u6765\u8fdb\u884c\u8c03\u5ea6\u7684\uff0c\u4e0d\u662f\u7531<code>CPU</code>\u6765\u8fdb\u884c\u8c03\u5ea6\u7684\u3002</p> </li> <li> <p>[F] J20 When the interrupt() method interrupts a thread, the thread will throw an InterruptedException immediately.</p> <p><code>interrupt()</code>\u65b9\u6cd5\u662f\u7528\u6765\u4e2d\u65ad\u4e00\u4e2a\u7ebf\u7a0b\u7684\uff0c\u4f46\u662f\u4e0d\u4f1a\u7acb\u5373\u629b\u51fa<code>InterruptedException</code>\u5f02\u5e38\u3002</p> </li> <li> <p>[F] The <code>notify()</code>, <code>notifyAll()</code> and <code>wait()</code> are methods of class Thead.</p> <p><code>notify()</code>, <code>notifyAll()</code> and <code>wait()</code> \u662f<code>Object</code>\u7c7b\u7684\u65b9\u6cd5\uff0c\u800c\u4e0d\u662f<code>Thread</code>\u7c7b\u7684\u65b9\u6cd5\u3002</p> </li> <li> <p>[F] \u7ebf\u7a0b\u8ba9\u6b65\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528<code>sleep()</code> \u65b9\u6cd5</p> <p><code>sleep()</code>\u65b9\u6cd5\u662f\u7528\u6765\u8ba9\u7ebf\u7a0b\u4f11\u7720\u4e00\u6bb5\u65f6\u95f4\uff0c\u800c\u4e0d\u662f\u8ba9\u7ebf\u7a0b\u8ba9\u6b65\u3002\u60f3\u8ba9\u7ebf\u7a0b\u8ba9\u6b65\u53ef\u4ee5\u4f7f\u7528<code>yield()</code>\u65b9\u6cd5\u3002</p> </li> <li> <p>[F] All strings are terminated with a <code>null</code>('\\0') character</p> <p>\u8981\u4e0e c/cpp \u533a\u5206\u5f00\u6765\uff0c<code>Java</code> \u4e2d\u7684\u5b57\u7b26\u4e32\u4e0d\u4ee5<code>null</code> \u7ed3\u5c3e</p> </li> <li> <p>[T] The member inner class can access all data member of the outer class.</p> </li> <li> <p>[T] A listener can be register into several sources</p> <p>\u8fd9\u4e2a\u5f88\u597d\u7406\u89e3\uff0c\u5c31\u662f\u4e00\u4e2a\u76d1\u542c\u5668\u53ef\u4ee5\u76d1\u542c\u591a\u4e2a\u4e8b\u4ef6\u6e90\u3002</p> </li> <li> <p>[F] A private method can be overridden by its subclass</p> <p>\u8fd9\u4e2a\u5c31\u662f\u9700\u8981\u7406\u89e3 <code>public</code> \u548c <code>private</code>\u7684\u672c\u8d28\u4e86\uff0c\u5bf9\u4e8e<code>private</code> method\u6765\u8bf4\uff0c\u662f\u5bf9\u5176\u4ed6\u7c7b\u90fd\u4e0d\u53ef\u89c1\uff0c\u90a3\u4e48\u4f60\u7684\u5b50\u7c7b\u600e\u4e48\u53ef\u80fd\u91cd\u5199\u8fd9\u4e2a\u65b9\u6cd5\u5462\uff1f</p> </li> <li> <p>[F] For <code>final int[] ar = new int[10]</code> we cannot modify the content of the array.</p> <p><code>final</code> \u4fee\u9970\u7684\u662f\u5f15\u7528\uff0c\u800c\u4e0d\u662f\u5f15\u7528\u6307\u5411\u7684\u5bf9\u8c61\u3002\u6240\u4ee5\u8fd9\u4e2a\u6570\u7ec4\u662f\u53ef\u4ee5\u88ab\u4fee\u6539\u7684\u3002\u4f46\u662f\u5b83\u4e0d\u80fd\u6307\u5411\u5176\u4ed6\u7684\u5bf9\u8c61\u3002\u4e5f\u5c31\u662f\u76f4\u63a5\u8d4b\u503c\u7684\u65f6\u5019\u4e0d\u80fd\u6307\u5411\u522b\u7684\u5bf9\u8c61\u4e86\u3002</p> </li> <li> <p>[F] <code>String s1 = new String(\"Hello\");String s2 = new String(\"Hello\");System.out.println(s1==s2)</code> the output answer is true</p> <p>In Java,the <code>==</code> operator checks for reference equality when used with object references. This means it checks whether both references point to the exact same object in memory.</p> </li> <li> <p></p> </li> <li> <p>The answer is <code>A</code>.</p> </li> </ul> <p> \u5728<code>Java</code>\u4e2d\uff0c<code>2.0</code>\u662f\u4e00\u4e2a\u53cc\u7cbe\u5ea6\u6d6e\u70b9\u6570\uff0c\u5982\u679c\u8981\u5c06<code>2.0</code> \u8d4b\u503c\u7ed9\u4e00\u4e2a<code>float</code>\u7c7b\u578b\u7684\u53d8\u91cf\uff0c\u9700\u8981\u5728\u6570\u5b57\u540e\u9762\u52a0\u4e0a<code>f</code>\u6216<code>F</code>\u6765\u8868\u793a\u8fd9\u4e2a\u662f\u4e00\u4e2a\u5355\u7cbe\u5ea6\u6d6e\u70b9\u6570\u3002 \u6240\u4ee5\u6b63\u786e\u7684\u5199\u6cd5\u5e94\u8be5\u662f <code>float f = 2.0f;</code></p> <ul> <li> <p></p> </li> </ul> <p>\u4ec0\u4e48\u662f <code>Java</code>\u7684 <code>identifier</code> \u8fd9\u91cc\u8981\u548c<code>keyword</code>\u8fdb\u884c\u533a\u5206\uff0c<code>identifier</code>\u662f\u6307\u7684\u662f\u5728<code>Java</code>\u4e2d\u7684\u53d8\u91cf\u540d\uff0c\u65b9\u6cd5\u540d\uff0c\u7c7b\u540d\u7b49\u7b49\u3002\u800c<code>keyword</code>\u662f<code>Java</code>\u4e2d\u7684\u5173\u952e\u5b57\uff0c\u6bd4\u5982<code>public</code>\uff0c<code>static</code>\u7b49\u7b49\u3002\u4e0a\u9898\u4e2d\u7684 <code>goto</code> \u662f<code>Java</code>\u4e2d\u7684\u5173\u952e\u5b57\uff0c\u6240\u4ee5\u4e0d\u80fd\u4f5c\u4e3a<code>identifier</code>\u3002</p> <ul> <li> <p> </p> </li> </ul> <p>\u8fd9\u91cc\u533a\u5206\u4e24\u4e2a\u6982\u5ff5\uff0c<code>\u5c40\u90e8\u53d8\u91cf</code> \u548c <code>\u5b9e\u4f8b\u53d8\u91cf</code>\u3002\u5728<code>main</code>\u65b9\u6cd5\u4e2d\uff0c\u58f0\u660e\u4e86\u4e00\u4e2a\u5c40\u90e8\u53d8\u91cf\uff0c<code>int myArg</code>\uff0c\u8fd9\u4f1a\u5c4f\u853d\u6389\u7c7b\u53d8\u91cf<code>myArg</code>.\u5728Java\u4e2d\uff0c\u5c40\u90e8\u53d8\u91cf\u662f\u4f18\u5148\u4e8e\u5b9e\u4f8b\u53d8\u91cf\u7684\u3002\u6240\u4ee5\u8fd9\u9898\u5b9e\u9645\u4e0a\u662f\u5728\u8bbf\u95ee\u5c40\u90e8\u53d8\u91cf<code>myArg</code>\uff0c\u800c\u4e0d\u662f\u7c7b\u53d8\u91cf<code>myArg</code>\u3002</p> <ul> <li> <p></p> </li> </ul> <p><code>super(serverName)</code>\u7684\u65b9\u6cd5\u662f\u8c03\u7528\u7236\u7c7b\u7684\u6784\u9020\u51fd\u6570\uff0c\u4f46\u8fd9\u91cc\u9519\u5728\u8fd9\u4e2a\u8bed\u53e5\u5fc5\u987b\u653e\u5728\u7b2c\u4e00\u884c\uff0c\u56e0\u4e3a\u5728<code>Java</code>\u4e2d\uff0c\u5982\u679c\u6ca1\u6709\u663e\u793a\u7684\u8c03\u7528\u7236\u7c7b\u7684\u6784\u9020\u51fd\u6570\uff0c\u90a3\u4e48<code>Java</code>\u4f1a\u9ed8\u8ba4\u8c03\u7528\u7236\u7c7b\u7684\u65e0\u53c2\u6784\u9020\u51fd\u6570\u3002\u6240\u4ee5\u8fd9\u91cc\u7684<code>super(serverName)</code>\u5fc5\u987b\u653e\u5728\u7b2c\u4e00\u884c\u3002</p> <ul> <li> <p></p> </li> </ul> <p>\u8fd9\u9898\u548c\u4e0a\u8ff0\u7c7b\u4f3c\uff0c\u4e3b\u8981\u662f\u9762\u5411\u7684\u95ee\u9898\u662f<code>Java</code>\u4e2d\u7684\u5b50\u7c7b\u7236\u7c7b\u7684\u6784\u9020\u51fd\u6570\u95ee\u9898\uff0c\u5982\u679c\u7236\u7c7b\u6ca1\u6709\u65e0\u53c2\u6784\u9020\u51fd\u6570\uff0c\u90a3\u4e48\u5728\u5b50\u7c7b\u4e2d\u5fc5\u987b\u663e\u6027\u7684\u58f0\u660e\u8c03\u7528\u7236\u7c7b\u7684\u6784\u9020\u51fd\u6570\u3002\u800c\u4e0a\u56fe\u4e2d\u7684\u7236\u7c7b\u53ea\u6709<code>A(int i)</code>\u8fd9\u6837\u4e00\u4e2a\u6784\u9020\u51fd\u6570\uff0c\u6240\u4ee5B\u7c7b\u4e2d\u5fc5\u987b\u5728\u5b57\u8282\u7684\u6784\u9020\u51fd\u6570\u4e2d\u663e\u6027\u7684\u8c03\u7528\u7236\u7c7b\u7684\u6784\u9020\u51fd\u6570\u3002<code>super(i)</code> \u6240\u4ee5\u51fa\u73b0\u4e86\u7f16\u8bd1\u9519\u8bef.\u4e0b\u8ff0\u4ee3\u7801\u662f\u6b63\u786e\u7684\u3002 <pre><code>class A {\n    int i;\n    A(int i) { \n        this.i = i * 2; \n    }\n}\n\nclass B extends A {\n    public static void main(String[] args) {\n        B b = new B(2);\n    }\n\n    B(int x) {\n        super(x); // \u8c03\u7528\u7236\u7c7b A \u7684\u6784\u9020\u51fd\u6570\n        System.out.println(x);\n    }\n}\n</code></pre></p> <ul> <li> <p></p> </li> </ul> <p>\u8fd9\u9898\u5c31\u662f\u547c\u5e94\u4e86\u4e0a\u4e00\u9898\uff0c\u4e0d\u518d\u591a\u8d58\u8ff0</p> <ul> <li> <p></p> </li> </ul> <p>\u8fd9\u91cc\u5c31\u8bb2\u4e00\u4e0b\u4ec0\u4e48\u662f\u62bd\u8c61\u65b9\u6cd5,\u5e26\u6709\u5173\u952e\u8bcd<code>abstract</code>\u3002\u5728\u63a5\u53e3\u4e2d\u53ea\u80fd\u6709\u4e00\u4e2a\u62bd\u8c61\u65b9\u6cd5\u3002\u76ee\u7684\u4e3b\u8981\u662f\u4e3a\u5b50\u7c7b\u63d0\u4f9b\u4e00\u4e2a\u5fc5\u987b\u5b9e\u73b0\u7684\u6a21\u677f\uff0c\u5f3a\u5236\u5b50\u7c7b\u91cd\u5199\u8be5\u65b9\u6cd5\u3002</p> <p>\u5b83\u5177\u6709\u7684\u7279\u70b9\uff1a 1. \u5fc5\u987b\u4ee5\u5206\u53f7\u7ed3\u5c3e<code>;</code> 2. \u6ca1\u6709\u65b9\u6cd5\u4f53\uff0c\u53ea\u6709\u58f0\u660e 3. \u9700\u8981\u5e26\u6709<code>abstract</code>\u5173\u952e\u8bcd</p> <ul> <li> <p></p> </li> </ul> <p>\u8fd9\u4e00\u9898\u4e2d\u7684 <code>List</code> \u548c<code>Set</code> \u662f\u7ee7\u627f\u4e86<code>collection</code>\u63a5\u53e3\uff0c\u6240\u4ee5\u6709<code>stream()</code>\u7684\u63a5\u53e3\uff0c\u4f46\u662f<code>map</code> \u6ca1\u6709\u7ee7\u627f<code>collection</code>\u7684\u63a5\u53e3\uff0c\u6240\u4ee5\u6ca1\u6709<code>stream()</code>\u7684\u63a5\u53e3\u3002</p> <ul> <li> <p>\u8fd9\u9898\u9009 D</p> <p></p> </li> </ul> <p>\u5728iterator\u4e2d\u53ea\u6709<code>it.remove()</code> \u5220\u9664\u5f53\u524d\u5143\u7d20\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\uff0c\u540c\u65f6\u4e0d\u4f1a\u7834\u574fiterator\u7684\u7ed3\u6784\u3002</p>"},{"location":"Tutorial/Java/Java1/#_3","title":"\u9009\u62e9\u9898","text":""},{"location":"Tutorial/Java/Java1/#_4","title":"\u7a0b\u5e8f\u586b\u7a7a\u9898","text":""},{"location":"Tutorial/Java/Java12/","title":"Chapter12 Concurrency","text":"<p>Concurrency \u672c\u7ae0\u4e3b\u8981\u8bb2\u7684\u662f\u7ebf\u7a0b\uff0c\u9ad8\u5e76\u53d1\u7684\u5185\u5bb9\u6bd4\u8f83\u91cd\u8981</p> <p>This Chapters will talk about the topic of Multitasks </p> <p>\u591a\u8fdb\u7a0b\u548c\u591a\u7ebf\u7a0b\u7684\u533a\u522b\u662f\u4ec0\u4e48\u5462\uff1f</p> <ul> <li>\u6bcf\u4e2a\u8fdb\u7a0b\u5177\u6709\u5b8c\u6574\u7684\u4e00\u5957\u81ea\u5df1\u7684\u53d8\u91cf\u96c6\u5408</li> <li>\u6bcf\u4e2a\u7ebf\u7a0b\u4e4b\u95f4\u662f\u5171\u4eab\u6570\u636e\u7684\uff0c\u4ece\u800c\u65b9\u4fbf\u4ed6\u4eec\u8fdb\u884c\u6709\u6548\u7387\u5e76\u4e14\u66f4\u5bb9\u6613\u7684\u8fdb\u884c\u4ea4\u4e92\u6bd4\u8d77\u591a\u8fdb\u7a0b\u4e4b\u95f4\u7684\u4ea4\u4e92\u3002</li> <li>\u591a\u7ebf\u7a0b\u662f\u5f88\u5e38\u89c1\u7684\uff0c\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5f53\u4e00\u4e2a\u6d4f\u89c8\u5668\u9700\u8981\u5177\u6709\u540c\u6b65\u4e0b\u8f7d\u591a\u56fe\u7247\u7684\u80fd\u529b\uff0c\u4e00\u4e2a\u7f51\u7edc\u670d\u52a1\u5668\u5177\u6709\u670d\u52a1\u5e76\u53d1\u7684\u9700\u6c42\u7684\u80fd\u529b\u3002</li> </ul>"},{"location":"Tutorial/Java/Java12/#121-what-are-threads","title":"12.1 What are threads?","text":"<p>Here is the following code block to take a short look of <code>thread</code>;</p> <pre><code>Runnable r = ()=&gt;{\n    try{\n        for (int i=0;i&lt;STEPS;i++){\n            double amount = MAX_AMOUNT * Math.random();\n            bank.transfer(0,1,amount);\n            Thread.sleep((int)(DELAY*Math.random()));\n        }\n    }catch(InterruptedException e){\n\n    }\n}\n\nvar t = new Thread(r);\nt.start();\n</code></pre> <p>\u9996\u5148\uff0c\u6211\u4eec\u6765\u770b <code>Runnable r = ()=&gt;{// task code}</code> \u8fd9\u4e2a\u662f\u4e00\u4e2a<code>Lambda</code> \u51fd\u6570\uff0c\u5176\u4e2d <code>Runnable</code> \u662f\u4e00\u4e2a\u51fd\u6570\u63a5\u53e3\uff0c\u53ef\u4ee5\u7528\u8fd9\u4e2a\u6765\u521b\u9020\u4e00\u4e2a\u7ebf\u7a0b\u7684\u5b9e\u4f8b\u3002</p> <pre><code>// you can also define the thread by its subclass of the thread class.\nclass MyThread extends Thread{\n    public void run(){\n        // task code;\n    }\n}\n</code></pre>"},{"location":"Tutorial/Java/Java12/#122-thread-states","title":"12.2 Thread States","text":"<p>Threads can be 6 states:</p> <ul> <li>New </li> <li>Runnable</li> <li>Blocked </li> <li>Waiting</li> <li>Time Waiting</li> <li>Terminated</li> </ul> <p></p> <p><code>New Threads</code>:</p> <p>When You create a thread with <code>new</code> operator before <code>start</code>. It indicates that the thread is not running yet.</p> <p><code>Runnable Threads</code>:</p> <p>After I use the <code>start</code> method, the thread is in the <code>runnable</code> state.</p> <p>\u6ce8\u610f\uff0c\u4f46\u662f\u5904\u4e8e <code>runnable</code> \u9636\u6bb5\u7684\u7ebf\u7a0b\uff0c\u4e0d\u4e00\u5b9a\u65f6\u523b\u5728<code>running</code>.\u8fd9\u53d6\u51b3\u4e8e\u64cd\u4f5c\u7cfb\u7edf\u7ed9\u4ed6\u5206\u914d\u7684\u8d44\u6e90\u8c03\u5ea6\uff0c\u662f\u5426\u5f53\u524d\u662f\u8fd9\u4e2a\u7ebf\u7a0b\u5728\u8dd1\u3002\u4e5f\u53ef\u80fd\u5904\u4e8e <code>waiting</code> \u548c <code>blocked</code> \u9636\u6bb5\u3002</p> <p>The following 2 states are <code>blocked</code> and <code>waiting</code>: They are temporarily inactive. They does not execute any code and consumes minimal resources. \u4e24\u8005\u6709\u4e2a\u533a\u522b\u5c31\u5728\u4e8e\u662f <code>\u88ab\u52a8</code> \u8fd8\u662f <code>\u4e3b\u52a8</code></p> <p><code>blocked</code>: \u963b\u585e\u6001\uff0c\u5176\u5b9e\u5c31\u662f\u5728\u8be5\u7ebf\u7a0b\u60f3\u83b7\u53d6\u9501\u7684\u65f6\u5019\uff0c\u4f46\u662f\u53d1\u73b0\u9501\u88ab\u5176\u4ed6\u7ebf\u7a0b\u6240\u5360\u7528\u4e86\uff0c\u8fd9\u4e2a\u65f6\u5019\u5c31\u5e94\u8be5\u8fdb\u5165\u963b\u585e\u6001\u4e86\uff0c\u7b49\u5176\u4ed6\u7ebf\u7a0b\u7684\u9501\u5b8c\u5168\u91ca\u653e\u7684\u65f6\u5019\uff0c\u624d\u80fd\u83b7\u53d6\u9501\uff0c\u4ece\u800c\u79bb\u5f00<code>blocked</code>.</p> <p><code>waiting</code>: When the thread waits for another thread to notify the scheduler of a condition. \u4ee5\u4e00\u8a00\u853d\u4e4b\uff0c\u5c31\u662f\u8bf4\u5f53\u67d0\u4e2a\u7ebf\u7a0b\u5728\u4e3b\u52a8\u7b49\u5f85\u67d0\u4e2a\u6761\u4ef6\u6ee1\u8db3\u7684\u65f6\u5019\uff0c\u76f4\u5230\u88ab\u5176\u4ed6\u7684\u7ebf\u7a0b\u660e\u786e\u7684\u5524\u9192</p> <ul> <li>\u7ebf\u7a0b\u901a\u8fc7 <code>Object.wait()</code> \u6216\u8005 <code>Thread.join()</code> \u8fdb\u5165 <code>waiting</code> \u72b6\u6001</li> <li>\u7ebf\u7a0b\u5fc5\u987b\u7b49\u5f85\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u901a\u8fc7 <code>notify()</code> \u6216 <code>notifyAll()</code> \u5524\u9192</li> <li><code>waiting</code> \u72b6\u6001\u4e0d\u4f1a\u5360\u7528CPU\u65f6\u95f4</li> </ul> <p><code>time waiting</code> There are several methods that have a timeout parameter.Calling them causes the thread to enter the timed waiting state.</p> <p><code>terminated</code></p> <ul> <li>It dies a natural death because the <code>run</code> method exits normally.</li> <li>It dies abruptly because an uncaught exception terminates the <code>run</code> method.</li> </ul>"},{"location":"Tutorial/Java/Java12/#some-methods","title":"Some methods","text":""},{"location":"Tutorial/Java/Java12/#123-thread-properties","title":"12.3 Thread Properties","text":""},{"location":"Tutorial/Java/Java12/#1231-interrupting-threads","title":"12.3.1 Interrupting threads","text":"<p>The following Java release version stops the <code>stop()</code> and <code>suspend()</code> method.</p> <p>But with the replacement of using <code>interrupt()</code> method. Or the <code>return</code> statements in the <code>run</code> method body.</p> <ul> <li>The <code>blocked</code> status thread can not be checked by <code>Thread().currentThread().isInterrupted()</code> . Take the place of it , we will use <code>InterruptedException()</code> to terminated the <code>blocked</code> thread.</li> </ul> <pre><code>// Here is the example:\nRunnable r = () -&gt; {\n try\n {\n    . . .\n    while (!Thread.currentThread().isInterrupted() &amp;&amp; more work to do)\n    {\n        // do more work\n    }\n }catch(InterruptedException e){\n // thread was interrupted during sleep or wait\n }finally\n {\n    // cleanup, if required\n }\n // exiting the run method terminates the thread\n};\n</code></pre> <p>If you call the <code>sleep()</code> method.Do not use the <code>isInterrupted()</code> to check.</p>"},{"location":"Tutorial/Java/Java12/#1232-daemon-threads","title":"12.3.2 Daemon Threads","text":"<p>A daemon thread is simply a thread that has no other role in life than to serve others.<code>timer</code> is the thread that sends regular <code>timer ticks</code> to other threads or threads that clean up stale cache entries.</p>"},{"location":"Tutorial/Java/Java12/#1234-handlers-for-uncaught-exceptions","title":"12.3.4 Handlers for Uncaught Exceptions","text":"<p>there is no <code>catch</code> clause to which the exception can be propagated. Instead, just before the thread dies, the exception is passed to a handler for uncaught exceptions.</p> <p>You can install a handler into any thread with the <code>setUncaughtExceptionHandler()</code> method.</p>"},{"location":"Tutorial/Java/Java12/#1235-thread-priorities","title":"12.3.5 Thread Priorities","text":"<p><code>setPriority()</code> In the Oracle JVM for Linux, thread priorities are the same!</p>"},{"location":"Tutorial/Java/Java12/#124-synchronization","title":"12.4 Synchronization \u540c\u6b65","text":""},{"location":"Tutorial/Java/Java12/#the-race-condition","title":"The race condition \u7ade\u6001\u51b2\u7a81","text":"<p>from the <code>wiki</code> reference:</p> <p>A race condition can arise in software when a computer program has multiple code paths that are executing at the same time. If the multiple code paths take a different amount of time than expected, they can finish in a different order than expected, which can cause software bugs due to unanticipated behavior. A race can also occur between two programs, resulting in security issues.</p> <p>Critical race conditions cause invalid execution and software bugs. Critical race conditions often happen when the processes or threads depend on some shared state. Operations upon shared states are done in critical sections that must be mutually exclusive. Failure to obey this rule can corrupt the shared state.</p>"},{"location":"Tutorial/Java/Java12/#lock-objects","title":"Lock Objects","text":"<pre><code>myLock.lock();\ntry{\n    // critical section;\n}finally{\n    myLock.unlock();\n}\n</code></pre> <p>This construct guarantees that there only one thread at a time can enter the critical section. No other thread has the chance to get past the <code>lock</code> statement.</p> <p></p>"},{"location":"Tutorial/Java/Java12/#1244-condition-objects","title":"12.4.4 Condition Objects","text":"<p>\u6211\u4eec\u7ecf\u5e38\u4f1a\u53d1\u73b0\u6709\u4e9b\u65f6\u5019\uff0c\u4e00\u4e9b\u7ebf\u7a0b\u5728\u8fdb\u5165<code>critical section</code>\u7684\u65f6\u5019\uff0c\u5f53\u4e14\u4ec5\u5f53\u6ee1\u8db3\u67d0\u79cd\u6761\u4ef6\u7684\u65f6\u5019\uff0c\u56e0\u6b64\u6211\u4eec\u8fd9\u91cc\u5f15\u5165\u4e00\u4e2a <code>condition object</code> \u6765\u7ba1\u7406\u90a3\u4e9b\u83b7\u5f97\u9501\uff0c\u4f46\u662f\u4e0d\u80fd\u6b63\u786e\u7684\u5b8c\u6210\u5de5\u4f5c\u7684\u7ebf\u7a0b\u3002</p> <p>\u4e0b\u9762\u4e3e\u4e86\u4e00\u4e2a\u4f8b\u5b50\uff0c\u90a3\u5c31\u662f\u5f53\u94f6\u884c\u53ea\u6709\u76c8\u5229\u7684\u65f6\u5019\uff0c\u624d\u80fd\u8ba9\u5176\u4ed6\u7528\u6237\u53d6\u94b1\u3002\u5982\u679c\u4e0d\u76c8\u5229\uff0c\u5c31\u4e00\u76f4\u5904\u4e8e\u50f5\u6301\u72b6\u6001\uff0c\u9700\u8981\u7b49\u5f85\u522b\u7684\u7ebf\u7a0b\u6765\u8ba9\u5b83\u589e\u52a0\u6536\u5165\uff0c\u4f46\u522b\u7684\u7ebf\u7a0b\u53c8\u65e0\u6cd5\u8fdb\u884c\uff0c\u5c31\u9677\u5165\u4e86\u50f5\u5c40\u3002\u6b64\u65f6\u5c31\u5f15\u5165\u4e86<code>condition objects</code>.</p> <p><pre><code>public void transfer(int from, int to, int amount)\n{\n    bankLock.lock();\n    try\n    {\n        while (accounts[from] &lt; amount)\n        {\n        // wait\n        . . .\n        }\n        // transfer funds\n        . . .\n    }\n    finally\n    {\n        bankLock.unlock();\n    }\n}\n\nclass Bank\n{\n private Condition sufficientFunds;\n . . .\n public Bank()\n {\n . . .\n sufficientFunds = bankLock.newCondition();\n }\n}\n</code></pre> \u5f53 <code>transfer</code> \u53d1\u73b0<code>sufficient funds</code> \u4e0d\u53ef\u5f97\u7684\u65f6\u5019\uff0c\u90a3\u4e48\u5c31\u4f1a <code>sufficient.await()</code>.\u5f53\u524d\u7ebf\u7a0b\u5c31\u4f1a\u88ab\u8feb\u653e\u5f03\u8fd9\u4e2a\u9501\uff0c\u8ba9\u5176\u4ed6\u7684\u7ebf\u7a0b\u53ef\u4ee5\u8fdb\u5165<code>critical section</code>.</p> <p>There is an essential difference between a thread that is waiting to acquire a lock and a thread that has called <code>await</code>. Once a thread calls the <code>await</code> method, it enters a <code>wait set</code> for that condition. The thread is not made <code>runnable</code> when the lock is available. Instead, it stays deactivated until another thread has called the <code>signalAll</code> method on the same condition.</p> <p><code>sufficientFunds.signAll()</code> \u7684\u4f5c\u7528\u662f\u5524\u9192\u6240\u6709\u5728<code>waiting list</code> \u4e2d\u7684\u7ebf\u7a0b</p> <pre><code>// One example\npublic void transfer(int from, int to, int amount)\n{\n    bankLock.lock();\n    try\n    {\n        while (accounts[from] &lt; amount)\n            sufficientFunds.await();\n        // transfer funds\n        // . . .\n        sufficientFunds.signalAll();\n    }\n    finally\n    {\n        bankLock.unlock();\n    }\n}\n</code></pre> <p>\u62f1\u624b\u8ba9\u51fa\uff0c\u4ee5\u514d\u9677\u5165\u50f5\u6301\u72b6\u6001\u3002</p>"},{"location":"Tutorial/Java/Java12/#synchronized","title":"<code>synchronized</code> \u5173\u952e\u5b57","text":"<p><code>synchronized</code> \u5173\u952e\u5b57\u7684\u4e3b\u8981\u4f5c\u7528\u662f\u63a7\u5236\u7ebf\u7a0b\u5bf9\u5171\u4eab\u8d44\u6e90\u7684\u8bbf\u95ee\uff0c\u786e\u4fdd\u5728\u540c\u4e00\u65f6\u523b\u53ea\u6709\u4e00\u4e2a\u7ebf\u7a0b\u80fd\u591f\u8bbf\u95ee\u88ab\u540c\u6b65\u7684\u65b9\u6cd5\u6216\u4ee3\u7801\u5757\uff0c\u4ece\u800c\u907f\u514d\u7ebf\u7a0b\u5b89\u5168\u95ee\u9898</p> <p>\u4f60\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 <code>synchronized</code> \u5173\u952e\u5b57  <pre><code>// code block 1 \npublic synchronized void method(){\n    // method body;\n}\n\n// code block 2\npublic void method(){\n    this.intrinsicLock.lock();\n    try{\n       // method body;\n    }\n}\n</code></pre> \u4e0a\u9762\u4e24\u6bb5 code block \u662f\u7b49\u4ef7\u7684\uff0c\u6211\u4eec\u7528 <code>synchronized</code> \u5173\u952e\u5b57\u6765\u7b49\u4ef7\u7684\u5b8c\u6210\u8fd9\u4e00\u64cd\u4f5c\uff0c\u8ba9\u53ea\u6709\u4e00\u4e2a\u7ebf\u7a0b\u53ef\u4ee5\u8c03\u7528\u8fd9\u4e2a\u65b9\u6cd5\u3002</p> <p>\u5728\u4e0a\u9762\u90a3\u4e48\u591a\u94fa\u57ab\u4e4b\u540e\uff0c\u6211\u4eec\u5c31\u80fd\u5f88\u81ea\u7136\u7684\u7406\u89e3\u4e0b\u9762\u8fd9\u6bb5\u4ee3\u7801\u4e86\u3002 <pre><code>class Bank\n{\n    private double[] accounts;\n    public synchronized void transfer(int from, int to, int amount) \n    throws InterruptedException\n    {\n        while (accounts[from] &lt; amount)\n            wait(); // wait on intrinsic object lock's single condition\n        accounts[from] -= amount;\n        accounts[to] += amount;\n        notifyAll(); // notify all threads waiting on the condition\n    }\n    public synchronized double getTotalBalance() { . . . }\n}\n</code></pre></p> <p><code>wait()</code> \u548c <code>notifyAll()</code> \u5c31\u5206\u522b\u662f\u5c06\u7ebf\u7a0b\u52a0\u5165 <code>waiting list</code> \u548c \u5524\u9192\u6240\u6709\u5728 <code>waiting on the condition threads</code>.</p> <p><code>join</code> method in the <code>Thread</code> class is used to pause the execution of the current thread until the specified thread has finished executing. This ensure that one thread must wait for another to complete before continuing.</p>"},{"location":"Tutorial/Java/Java12/#1246-synchronized-blocks","title":"12.4.6 Synchronized Blocks","text":"<p>Another way to enter acquiring the lock;</p> <p>\u9501\u5bf9\u8c61\u7684\u8bbe\u7f6e\uff0c\u6211\u4eec\u5728\u540c\u6b65\u5757\u7684\u65f6\u5019\uff0c\u5b9a\u4e49\u4e86\u9501\u5bf9\u8c61<code>private Lock lock = new Object()</code>,\u540e\u7eed\u6211\u4eec\u4e5f\u5229\u7528\u4e86<code>synchronized (lock)</code> \u8fdb\u884c\u5bf9\u9501\u5bf9\u8c61\u7684\u540c\u6b65\u8bbe\u7f6e\u3002</p> <p>\u4e3b\u8981\u662f\u8fd9\u6837\u53ef\u4ee5\u66f4\u52a0\u7684\u7075\u6d3b\u8fdb\u884c\u9501\u7684\u5bf9\u8c61\u7684\u8bbe\u7f6e</p> <ul> <li><code>this</code></li> <li><code>class</code></li> <li><code>lock</code> \u81ea\u5b9a\u4e49\u7684\u9501\u5bf9\u8c61</li> </ul>"},{"location":"Tutorial/Java/Java12/#1247-the-monitor-concept","title":"12.4.7 The monitor concept","text":"<p>The powerful tools to make multithreading safe without forcing programmers to think about explicit locks.</p> <ul> <li><code>monitor</code> \u662f JVM \u5185\u7f6e\u7684\u9501\uff0c\u6bcf\u4e2aJava\u5bf9\u8c61\u90fd\u6709\u4e00\u4e2a\u9690\u5f0f <code>monitor</code></li> <li>\u53ea\u6709\u4e00\u4e2a\u7ebf\u7a0b\u53ef\u4ee5\u6301\u6709\u5bf9\u8c61 <code>monitor</code> \u5176\u4ed6\u7ebf\u7a0b\u5c31\u4f1a\u8fdb\u884c <code>block</code>\uff0c\u81ea\u52a8\u52a0\u5165 <code>waiting list</code></li> <li>\u7ebf\u7a0b\u9000\u51fa <code>synchronized</code> \u5757\u7684\u65f6\u5019\uff0c\u91ca\u653e<code>monitor</code></li> </ul>"},{"location":"Tutorial/Java/Java12/#1248-volatile-modifier","title":"12.4.8 volatile modifier","text":"<ul> <li> <p>\u4fdd\u8bc1\u4e86\u7ebf\u7a0b\u4e4b\u95f4\u7684\u53ef\u89c1\u6027 (Visibility)</p> <p>\u5f53\u4e00\u4e2a\u7ebf\u7a0b\u4fee\u6539\u4e86<code>volatile</code> \u53d8\u91cf\u7684\u503c\uff0c\u5176\u4ed6\u7ebf\u7a0b\u80fd\u7acb\u523b\u770b\u5230\u8fd9\u4e2a\u66f4\u65b0</p> </li> <li> <p>\u9632\u6b62\u6307\u4ee4\u7684\u91cd\u6392 (Reordering)</p> <p>\u5c31\u50cf\u5728\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u7ebf\u7a0b\u4e4b\u95f4\u7684\u540c\u6b65\u7684\u65f6\u5019\u6240\u8bf4\uff0c\u6709\u65f6\u5019\u7f16\u8bd1\u5668(\u8fd9\u91cc\u5e94\u8be5\u662f CPU &amp;&amp; JVM) \u4f1a\u5bf9\u6307\u4ee4\u8fdb\u884c\u91cd\u62cd\uff0c\u5bfc\u81f4\u4f1a\u51fa\u73b0\u4e00\u4e9b\u4e0a\u9501\u7684\u9519\u8bef</p> </li> </ul>"},{"location":"Tutorial/Java/Java12/#1249-final-variables","title":"12.4.9 Final Variables","text":"<p>There is one situation that we no use <code>lock</code> or the <code>volatile</code> modifier, that it is safe to access a shared field when We use <code>final</code>.</p> <p><code>final var accounts = new HashMap&lt;String, Double&gt;()</code></p> <p>\u5982\u679c\u6ca1\u6709 <code>final</code> \u8fd9\u4e2a\u91cf\u8bcd\uff0c\u6211\u4eec\u65e0\u6cd5\u4fdd\u8bc1\u591a\u7ebf\u7a0b\u53ef\u4ee5\u5b89\u5168\u7684\u770b\u89c1 <code>accounts</code> \u7684\u66f4\u65b0\u3002</p>"},{"location":"Tutorial/Java/Java12/#12410-atomics","title":"12.4.10 Atomics","text":"<p>\u64cd\u4f5c\u7684\u539f\u5b50\u6027 \u64cd\u4f5c\u7cfb\u7edf\u4e2d\u6709\u4ecb\u7ecd\uff0c\u4e0d\u505a\u8fc7\u591a\u8d58\u8ff0</p>"},{"location":"Tutorial/Java/Java12/#12411-deadlocks","title":"12.4.11 Deadlocks","text":"<p>\u6b7b\u9501 \u64cd\u4f5c\u7cfb\u7edf\u4e2d\u6709\u4ecb\u7ecd\uff0c\u4e0d\u505a\u8fc7\u591a\u7684\u8d58\u8ff0</p>"},{"location":"Tutorial/Java/Java12/#125-thread-safe-collections","title":"12.5 Thread-safe collections","text":""},{"location":"Tutorial/Java/Java12/#1251-blocking-queues","title":"12.5.1 Blocking Queues","text":"<p><code>blocking queue</code> \u963b\u585e\u961f\u5217\u662fJava\u63d0\u4f9b\u7684\u4e00\u79cd\u7ebf\u7a0b\u5b89\u5168\u7684\u6570\u636e\u7ed3\u6784\u3002\u4e3b\u8981\u662f\u7528\u4e8e\u89e3\u51b3\u591a\u7ebf\u7a0b\u73af\u5883\u4e0b\u7684\u751f\u4ea7\u8005-\u6d88\u8d39\u8005\u95ee\u9898\u3002</p> <ul> <li> <p><code>Block queue push</code>     \u5f53\u961f\u5217\u5df2\u7ecf\u6ee1\u7684\u65f6\u5019\uff0c\u751f\u4ea7\u8005\uff08\u8bd5\u56fe\u5f80\u961f\u5217\u4e2d\u6dfb\u52a0\u5143\u7d20\u7684\u5bf9\u8c61\uff09\u4f1a\u8fdb\u5165<code>block</code>\u72b6\u6001\uff0c\u7b49\u5230\u961f\u5217\u672a\u6ee1\u7684\u65f6\u5019\u518d\u8fdb\u884c\u586b\u5165\u3002</p> </li> <li> <p><code>Block queue pop</code>     \u5f53\u961f\u5217\u7a7a\u7684\u65f6\u5019\uff0c\u6d88\u8d39\u8005\uff08\u8bd5\u56fe\u5f80\u961f\u5217\u4e2d\u53d6\u51fa\u5143\u7d20\u7684\u5bf9\u8c61\uff09\u4f1a\u8fdb\u5165<code>block</code>\u72b6\u6001\uff0c\u7b49\u5230\u961f\u5217\u4e2d\u6709\u5143\u7d20\u7684\u65f6\u5019\u624d\u4f1a\u586b\u5165\u3002</p> </li> </ul>"},{"location":"Tutorial/Java/Java12/#advantages","title":"Advantages","text":"<ul> <li><code>Producers and Consumers</code><ol> <li>\u751f\u4ea7\u8005\u7ebf\u7a0b\u5c06\u6570\u636e\u653e\u5165\u961f\u5217\uff0c\u6d88\u8d39\u8005\u7ebf\u7a0b\u4ece\u961f\u5217\u4e2d\u53d6\u6570\u636e</li> <li><code>blocking queue</code> \u53ef\u4ee5\u81ea\u52a8\u7684\u5e73\u8861\u6570\u636e\u6d41\uff0c\u5728\u751f\u4ea7\u8005\u8fc7\u5feb\uff0c\u6d88\u8d39\u8005\u8fc7\u6162\u70b9\u65f6\u5019\u5f62\u6210\u4e00\u4e2a<code>balance</code>.</li> </ol> </li> </ul>"},{"location":"Tutorial/Java/Java12/#1252-efficient-maps-sets-and-queues","title":"12.5.2 Efficient Maps, Sets and Queues","text":"<p>\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 <code>java.util.concurrent</code> \u5305\u4e2d\u7684\u4e00\u4e9b\u6570\u636e\u7ed3\u6784 <code>ConcurrentHashMap</code>,<code>ConcurrentSkipListSet</code>,<code>ConcurrentLinkedQueue</code>.</p> <p>The concurrent hash map can efficiently support a large number of readers and a bounded number of writers.</p>"},{"location":"Tutorial/Java/Java12/#1253-atomic-update-of-map-entries","title":"12.5.3 Atomic update of map entries","text":"<p>\u5f15\u5165\u4e86 <code>map.compute(word,(k,v)-&gt;v == null ? 1 : v+1)</code> \u7684\u539f\u5b50\u64cd\u4f5c\uff0c\u907f\u514d\u4e86\u65e7\u7248\u672c\u7684 <code>replace</code> \u7684\u4f7f\u7528.</p>"},{"location":"Tutorial/Java/Java12/#126-threads-pool","title":"12.6 Threads Pool","text":"<p>\u7ebf\u7a0b\u6c60</p> <p>\u6211\u4eec\u8003\u8651\u4e00\u4e2a\u5f88\u73b0\u5b9e\u7684\u95ee\u9898\uff0c\u5bf9\u4e8e\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u8fdb\u7a0b\u662f\u4e00\u4ef6\u5f88\u9ebb\u70e6\u7684\u65f6\u5019\uff0c\u56e0\u4e3a\u4f60\u9700\u8981\u8ddf\u64cd\u4f5c\u7cfb\u7edf\u8fdb\u884c\u4ea4\u4e92\u3002\u4f46\u662f\u6211\u4eec\u53c8\u4f1a\u7ecf\u5e38\u7684\u9047\u5230\u90a3\u79cd\u5177\u6709\u5f88\u5927\u6570\u91cf\u7684<code>short-lived</code> \u7ebf\u7a0b\uff0c\u8fd9\u79cd\u65f6\u5019\u6211\u4eec\u5c31\u9009\u62e9\u4e86\u4e00\u79cd\u53eb\u505a\u7ebf\u7a0b\u6c60\u7684\u65b9\u5f0f\u3002</p>"},{"location":"Tutorial/Java/Java12/#introduce","title":"Introduce","text":"<p>\u7ebf\u7a0b\u6c60\u4e2d\u5b58\u5728\u5f88\u591a\u9884\u7559\u7684\u7ebf\u7a0b\u7b49\u5f85\u8c03\u5ea6\u548c\u8fd0\u884c\uff0c\u5e76\u4e14\u63d0\u4f9b\u7ed9\u5b83\u4e00\u4e2a <code>Runnable</code> \u63a5\u53e3\uff0c\u53ea\u8981<code>run</code>\u65b9\u6cd5\u5b58\u5728\uff0c\u90a3\u4e48\u8fd9\u4e2a\u7ebf\u7a0b\u5c31\u4e0d\u4f1a\u6d88\u4ea1\uff0c\u53ea\u662f\u5728\u961f\u5217\u4e2d\u7b49\u5f85\u88ab\u8c03\u5ea6\u3002</p>"},{"location":"Tutorial/Java/Java4/","title":"Chapter4 Objects and classes","text":""},{"location":"Tutorial/Java/Java4/#41-introduce","title":"4.1 Introduce","text":""},{"location":"Tutorial/Java/Java4/#42-predefined-classes","title":"4.2 Predefined Classes","text":""},{"location":"Tutorial/Java/Java4/#421-objects-and-object-variables","title":"4.2.1 Objects and object variables","text":""},{"location":"Tutorial/Java/Java4/#constructor-function","title":"constructor function","text":"<p>constructor function is a special method whose purpose is to construct and initialize objects. \u6784\u5efa\u548c\u521d\u59cb\u5316\u5bf9\u8c61</p> <p>[Tips] All the objects constructed in the heap in Java,which means that you can only use <code>new</code> to create a object.</p> <p>[Tips]  What is the <code>toString</code> means? It is a special method in represent this object in String type.</p>"},{"location":"Tutorial/Java/Java4/#422-create-a-object","title":"4.2.2 Create a object","text":"<p><pre><code>    Date deadline; // deadline doesn't refer to a object now;\n    s = deadline.toString();\n</code></pre> The above will cause a compiler-time error; - Method1 : You should use the constructor function to let <code>to String</code> represents a object.</p> <ul> <li>Method2 : You can also let deadline refers to an existing object;</li> </ul> <p></p> <p>The above is the difference between C++ and Java in the object referrence.</p>"},{"location":"Tutorial/Java/Java4/#423-mutator-and-access-methods","title":"4.2.3 Mutator and Access Methods","text":"<p>\u4fee\u6539\u65b9\u6cd5\u548c\u83b7\u53d6\u65b9\u6cd5.</p> <p>\u5f88\u597d\u7406\u89e3 \u5b57\u9762\u610f\u601d\u3002\u524d\u8005\u662f\u4f1a\u8ba9\u67d0\u4e2a\u5bf9\u8c61\u8fdb\u884c\u66f4\u6539/\u4fee\u9970\uff0c\u4f46\u662f\u540e\u8005\u662f\u76f4\u63a5\u83b7\u53d6\u4e86\u4e00\u4e2a\u65b0\u7684\u4fee\u6539\u4e4b\u540e\u7684\u5bf9\u8c61\uff0c\u4f46\u662f\u539f\u5bf9\u8c61\u4e0d\u53d8\u3002 <pre><code>    LocalDate aThousandDayLater = newYearsEve.plusDays(1000);\n\n    someDay.add(Calendar.DAY_OF_MONTH,1000);\n</code></pre> \u7b2c\u4e00\u4e2a\u662f \\(Access Method\\) \u4f46\u540e\u8005\u662f\\(Mutator Method\\)\u539f\u6765\u7684\u5bf9\u8c61\u53d1\u751f\u4e86\u6539\u53d8\u3002</p>"},{"location":"Tutorial/Java/Java4/#43-multiple-source-usage","title":"4.3 Multiple source usage","text":""},{"location":"Tutorial/Java/Java4/#432-use-of-multiple-source-files","title":"4.3.2 Use of Multiple Source Files","text":"<p>\u6211\u4eec\u8fd9\u91cc\u5148\u8003\u8651\u4e00\u4e0b\u7c7bUnix\u7cfb\u7edf\u4e2d\u7684<code>make</code>\u7684\u903b\u8f91\uff0c\u5728\u4e4b\u524d\u5199<code>makefile</code>\u6587\u4ef6\u4e2d\u7684\u65f6\u5019\uff0c\u5b66\u4e60\u4e86\u4e00\u4e0b<code>make</code>\u7684\u903b\u8f91\uff0c\u662f\u5c06\u6307\u5b9a\u7684\u4e00\u4e9b<code>.h</code>,<code>.c</code>\u7b49\u76ee\u6807\u5f85\u6587\u4ef6\u7f16\u8bd1\u6587\u4ef6\u653e\u5728\u4e00\u8d77\uff0c\u7b49\u5f85\u5982\u679c\u67d0\u4e9b<code>.h/.c</code>\u6587\u4ef6\u53d1\u751f\u6539\u52a8\u7684\u65f6\u5019\uff0c\u5c31\u4f1a\u5355\u72ec\u7684\u91cd\u65b0\u5c06\u8fd9\u4e9b\u6587\u4ef6\u7f16\u8bd1\u8fdb\uff0c\u800c\u4e0d\u662f\u6574\u4f53\u7f16\u8bd1\u3002\u6709\u70b9\u7c7b\u4f3c<code>cache</code>\u7684\u4f5c\u7528\u3002\u5c31\u662f\u4e3a\u4e86\u8282\u7ea6\u6027\u80fd\uff0c\u5df2\u7ecf\u7f16\u8bd1\u8fc7\u7684\u672a\u6539\u53d8\u7684\u5185\u5bb9\u4e0d\u53d8\u3002</p> <p>\u6211\u4eec\u5728\u8003\u8651Java\u7684\u7f16\u8bd1\u7684\u65f6\u5019\uff0c\u5176\u5b9e\u5df2\u7ecf\u53ef\u4ee5\u611f\u53d7\u5230\u4e86Java\u4e2d\u5185\u7f6e\u4e86<code>make</code>\u3002\u600e\u4e48\u5462\uff1f\u9996\u5148\uff0c\u4f5c\u4e3a\u5178\u578b\u7684OOP\u8bed\u8a00\uff0c\u6211\u4eec\u662f\u5c06\u5404\u4e2a\u7c7b\u5199\u5728\u5404\u81ea\u7684\u6587\u4ef6\u4e2d\uff0c\u90a3\u4e48\u5047\u8bbe\u6211\u4eec\u6709\u4e24\u4e2a\u7c7b\uff0c<code>Employee.java</code>\u548c<code>EmployeeTest.java</code>\u51fd\u6570\uff0c\u6211\u4eec\u5728\u540e\u8005\u4e2d\u4f7f\u7528\u5230\u4e86\u524d\u8005\u8fd9\u4e2a\u7c7b\uff0c\u90a3\u4e48\u7f16\u8bd1\u5668\u5728\u7f16\u8bd1\u7684\u65f6\u5019\u5c31\u4f1a\u4f18\u5148\u5bfb\u627e\u6709\u65e0<code>Employee.class</code>\u8fd9\u4e2a\u6587\u4ef6\u5b58\u5728\u4fbf\u4e8e\u65e0\u4fee\u6539\u7684\u91cd\u590d\u5229\u7528\uff0c\u548c\u4e0a\u8ff0\u7684 make \u8fdb\u884c\u547c\u5e94\u4e86\uff0c\u5982\u679c\u6ca1\u6709\u627e\u5230\u7684\u8bdd\u5c31\u4f1a\u9009\u62e9\u5bfb\u627e<code>Employee.java</code>\u5e76\u4e14\u8fdb\u884c\u7f16\u8bd1\u3002\u5982\u679c\u5b9e\u5728\u6ca1\u6709\u627e\u5230\u7684\u8bdd\u5c31\u4f1a\u5728<code>EmployeeTest.java</code>\u4e2d\u5bfb\u627e\uff0c\u7136\u540e\u62a5\u9519\u3002</p>"},{"location":"Tutorial/Java/Java4/#433-dissecting-the-employee-class","title":"4.3.3 Dissecting the Employee Class","text":"<p>Several Key Words</p> <ul> <li>Public : The keyword public means that any method in any class can call this method.     \u6240\u6709\u4efb\u4f55\u7c7b\u7684\u4efb\u4f55\u65b9\u6cd5\u90fd\u53ef\u4ee5\u8c03\u7528\u8fd9\u4e2a\u65b9\u6cd5\u3002</li> <li>private : The keyword Make sure that the only methods that can access these instance fields are the methods of the inner class itself.No outside method can read or write to these method,including the Derivative class(\u884d\u751f\u7c7b)</li> <li>protected : The keyword Make sure that the methods can be accessed by any class in the same package\uff0calso including the Derivative class.</li> </ul>"},{"location":"Tutorial/Java/Java4/#435-declaring-local-variabale-with-var","title":"4.3.5 Declaring Local Variabale with var","text":"<p><code>var</code> key word is used to provided their type can be inferred from the initial value.</p> <p><code>Employee harry = new Employee(....);</code> You can use the <code>var</code> key word that make the following code; <code>var harry = new Employee(....)</code> Which,you can avoid typing the type again.</p>"},{"location":"Tutorial/Java/Java4/#435-be-careful-with-null","title":"4.3.5 Be careful with <code>null</code>!","text":"<p>null represents absence of an object.</p> <p>If you apply a method into the <code>null</code> object, you will run across a <code>NullPointerException</code> error. It is a serious error, if you haven't catch it,it will terminated. So we should always care about the <code>null</code> error.</p>"},{"location":"Tutorial/Java/Java4/#4311-final-instance-fields","title":"4.3.11 <code>Final</code> Instance Fields","text":"<p><code>Final</code> key word's meaning is as the same as final.</p> <p>Which means that, this field must be initialized when the object is constructed, the value can't be change again! <code>immutable</code> !</p>"},{"location":"Tutorial/Java/Java4/#44-static-fields-and-methods","title":"4.4 Static Fields and Methods","text":"<p>Simply understand is that the static method can be only one in a class. It is belong to a class, but not any individual object.</p> <p>So when you access them, you must <code>Class.xxx</code> But not <code>object.xxx</code> </p> <p>So, combine the <code>final</code> key word, you can know that <code>static final</code>. When you use <code>Math.PI</code> as a constant, at the same time that it means <code>public static final double PI = 3.14....</code></p> <p> <code>Native Method</code> can bypass the acess control mechanisms of the Java Language.</p>"},{"location":"Tutorial/Java/Java4/#445-the-static-main-method","title":"4.4.5 The static Main method","text":"<p>In fact that The <code>main</code> method does not operate on any objects.In fact,when a program starts, there aren't objects yet.The static <code>main</code> method executes, and constructs the object that the program needs.</p>"},{"location":"Tutorial/Java/Java4/#45-method-parameters","title":"4.5 Method Parameters","text":"<ul> <li> call by value : which means that the method gets just the value that the caller provides.</li> <li>call by reference : which means that the method gets the location of the variable that the caller provides.</li> </ul> <p>Obviously, Java choose the call by value. That means that the method gets a copy of all parameter values.The method cannot modify the contents of any parameter variable passed to it.</p> <ul> <li>Two kinds of method parameters:</li> <li>Primitive types(numbers,boolean value)</li> <li>Object references \u5bf9\u8c61\u5f15\u7528 \u5f88\u663e\u7136\uff0c\u539f\u59cb\u7c7b\u578b\u7684\u503c\u662f\u65e0\u6cd5\u6539\u53d8\u7684\uff0c\u56e0\u4e3a\u503c\u8c03\u7528\u7684\u539f\u56e0\uff0c\u65b9\u6cd5\u65e0\u6cd5\u66f4\u6539\u4f20\u5165\u7684\u503c\u672c\u8eab\uff0c\u56e0\u4e3a\u4f20\u5165\u7684\u662fprimitive types\u7684\u4e00\u4e2acopy\u800c\u5df2\u3002\u4f46\u4f20\u5165\u7684\u662f\u5bf9\u8c61\u5f15\u7528\u5c31\u4e0d\u4e00\u6837\u4e86\u3002 <p>Actually, both the original and the copy refer to the same object!</p> </li> </ul> <p> Java\u672c\u8eab\u662f\u4f20\u503c\u7684\uff0c\u6211\u4eec\u6240\u8c13\u7684\u53ef\u80fd\u51fa\u73b0\u7684\u66f4\u6539\u5f15\u7528\u7684\u662f\u7531\u4e8e\u4e00\u4e2a\u5f88\u7b80\u5355\u7684\u903b\u8f91\u3002\u5f15\u7528\u548c\u88ab\u5f15\u7528\u8005\u90fd\u6307\u5411\u540c\u4e00\u4e2a\u5bf9\u8c61\uff0c\u4ed6\u4eec\u4f20\u5165method\u53ef\u4ee5\u5bf9\u8fd9\u4e2a\u5bf9\u8c61\u8fdb\u884c\u4fee\u6539\uff0c\u4f46\u662f\u6211\u4eec\u7531\u4e8e\u5728\u65b9\u6cd5\u4e2d\u4f20\u5165\u7684\u662fcopy of reference\uff0c\u90a3\u4e48\u4fee\u6539\u526f\u672c\u6240\u6307\u5411\u7684\u5bf9\u8c61\u662f\u4e0d\u80fd\u6539\u53d8\u88ab\u5f15\u7528\u8005\u672c\u8eab\u539f\u5148\u6307\u5411\u7684\u5bf9\u8c61\u7684\u3002\u56e0\u6b64\uff0cswap\u51fd\u6570\u5c31\u663e\u5f97\u4e0d\u50cfC++\u4e2d\u90a3\u6837\u8fdb\u884c\u6307\u9488\u6307\u5411\u7684\u66f4\u6539\u4e86\u3002</p>"},{"location":"Tutorial/Java/Java4/#46-objective-constructor","title":"4.6 Objective Constructor","text":""},{"location":"Tutorial/Java/Java4/#461-overloading","title":"4.6.1 OverLoading","text":"<p>some classes have more than one constrctor.This capability is called <code>overloading</code> </p> <ul> <li>Definition: Overloading means that if several method shares the same name, but different parameters.</li> </ul> <p>The compiler sort out the correct method with the correct types of the values. If it can't find the correct method that, it will cause <code>compile-time error</code></p> <p>The process of finding a match is called <code>overloading resolution</code> \u91cd\u8f7d\u89e3\u6790</p>"},{"location":"Tutorial/Java/Java4/#468-object-destruction-and-finalize-method","title":"4.6.8 Object Destruction and <code>finalize</code> Method","text":"<p>Many OOP Language have need the destructor function, but because of Java have automatic garbage collection, manual memory reclamation is not needed!</p> <p>But in the real case that, some objects utilize a resource other than memory, like a file. In this case that, a <code>close()</code> method is important to cleanup.</p>"},{"location":"Tutorial/Java/Java4/#47-package","title":"4.7 Package","text":""},{"location":"Tutorial/Java/Java4/#471-package-names","title":"4.7.1 Package Names","text":"<p>The main reason for using package is to guarantee the uniqueness of class name.</p> <ul> <li> <p>Why use the Internet domain name as the name of package? Because of the reason that we assume the domain name could be unique.</p> </li> <li> <p>Also there is no relations between two packages, they are independent!</p> </li> </ul>"},{"location":"Tutorial/Java/Java4/#473-static-imports","title":"4.7.3 Static Imports","text":"<ul> <li>A form of the <code>import</code> statement permits the importing of the static methods and fields, not just classes. </li> </ul>"},{"location":"Tutorial/Java/Java4/#474-addition-of-a-class-into-a-package","title":"4.7.4 Addition of a class into a package","text":"<p>Package \u5173\u952e\u5b57\u7684\u76ee\u7684\u5c31\u662f\u628a\u67d0\u4e2aclass\u6587\u4ef6\u5f52\u5c5e\u5230\u4e00\u4e2a\u5305\u4e2d\uff0c\u4e0d\u7136\u7684\u8bdd\uff0c\u8fd9\u4e2ajava\u6587\u4ef6\u5c31\u96b6\u5c5e\u4e8eunnamed package\u4e86\u3002</p> <p> \u867d\u7136\u53ef\u4ee5\u7f16\u8bd1\uff0c\u4f46\u662f\u5728<code>JVM</code>\u4e0a\u8fd0\u884c\u5c31\u4f1a\u51fa\u9519\uff0c\u9700\u8981\u6211\u4eec\u624b\u52a8\u7684\u628a\u6587\u4ef6\u653e\u5728\u90a3\u4e2apackage\u7684\u76ee\u5f55\u4e0b\u3002</p>"},{"location":"Tutorial/Java/Java4/#48-jar-java","title":"4.8 Jar\u6587\u4ef6 Java\u5b58\u6863\u6587\u4ef6","text":"<p>What is a JAR file (Java Archive File) - A JAR file contains multiple <code>class</code> file,and other files like image and sound files which have been compiled and compressed using the familiar Zip compression format, only when you need to use/include them, the <code>JVM</code> will add them into your program. \u8fd9\u91cc\u548cpackage\u533a\u5206\u4e00\u4e0b\uff0cpackage\u4e2d\u662f\u4e00\u5806<code>.java</code>\u6587\u4ef6\uff0c\u4f46\u662fJAR\u5305\u4e2d\u5305\u542b\u7684\u662f\u5df2\u7ecf\u7f16\u8bd1\u597d\u7684<code>class</code>\u6587\u4ef6,\u548c\u5176\u4ed6\u7684\u955c\u50cf\u6587\u4ef6\u7b49\u88ab\u6253\u5305\u6210\u4e86\u4e00\u4e2azip\u683c\u5f0f\u7684\u6587\u4ef6\u3002</p> <p>when you package your application,you want to give your user a single file, not a directory structure filled with class file.</p>"},{"location":"Tutorial/Java/Java4/#481-creating-jar-files","title":"4.8.1 Creating JAR files","text":"<p>using the <code>jar</code> tool to make JAR files.(In the default JDK installation,it's in the <code>jdk/bin</code> directory)</p>"},{"location":"Tutorial/Java/Java4/#482","title":"4.8.2","text":"<p>The Manifest </p> <p>In addition to class files, each JAR file contains a <code>manifest</code> file describes special features of the archive. Like the README.md file. It is called <code>MANIFEST.MF</code> is located in a special <code>META-INF</code> subdirectory of the <code>JAR</code> file.</p>"},{"location":"Tutorial/Java/Java4/#49-documetation-comments","title":"4.9 Documetation Comments","text":"<p>A JDK contains a very useful tool, called <code>javadoc</code>, which generates HTML documentation from your source files.</p>"},{"location":"Tutorial/Java/Java5/","title":"Chapter5 Inheritance","text":"<p>\u7ee7\u627f</p> <p>[tips] \u5b66\u5b8c\u53cd\u5c04\u4e4b\u540e\uff0c\u4e66\u672c\u7ed9\u4e86\u4e00\u53e5\u5f88\u5173\u952e\u7684\u8bdd Don't reuse Reflection \u4e0d\u8981\u6ee5\u7528reflection The reflection mechanism lets you write programs with amazing generality, by detecting fields and methods at runtime. This capability can beextremely useful for systems programming, but it is usually not appropriate in applications. Reflection is fragile\u2014with it, the compiler cannot help you find programming errors. Any errors are found at runtime and result in exceptions.</p> <p>\u53cd\u5c04\u662f\u8106\u5f31\u7684\uff0c\u7f16\u8bd1\u5668\u65e0\u6cd5\u6b63\u786e\u7684\u5e2e\u4f60\u627e\u5230\u9519\u8bef\uff01</p> <p>The idea behind inheritance is that you can create new classes that are built on existing classes(It is the natural of the Inheritance). When you inherit from an existing class, you reuse (or inherit) its methods, and you can add new methods and fields to adapt your new class to new situation. This technique is essential in Java Programming.</p> <p>The Inheritance chapter also introduce the mechanism of reflection, the ability to find out more about classes and their properties in a running program.It is a critical feature of Java</p>"},{"location":"Tutorial/Java/Java5/#51-classes-superclasses-and-subclasses","title":"5.1 Classes, Superclasses, and Subclasses","text":"<p>A sentence to conclue is that a manager is a Employee.   (is-a relation)</p>"},{"location":"Tutorial/Java/Java5/#511-defining-subclasses","title":"5.1.1 Defining Subclasses","text":"<p>use the key word extends</p> <pre><code>public class Manager extends Employee{\n    //added methods and fileds;\n}\n</code></pre> <ul> <li>A design principle is that : you place the most general methods in th superclass and more specialized methods in its subclasses.</li> </ul>"},{"location":"Tutorial/Java/Java5/#512-overriding-methods","title":"5.1.2 overriding methods","text":"<p>\u5982\u679c\u8bf4\u5b50\u7c7b\u7ee7\u627f\u4e86\u7236\u7c7b\u7684\u4e00\u4e9b\\(fields\\)\u548c\\(methods\\)\u3002\u5982\u679c\u6709\u4e9b\u7236\u7c7b\u4e0d\u5177\u5907\u7684\\(methods/fields\\)\uff0c\u4f60\u53ef\u4ee5\u76f4\u63a5\u6dfb\u52a0\u3002\u4f46\u4e5f\u6709\u4e00\u79cd\u60c5\u51b5\u662f\uff0c\u5b50\u7c7b\u4e2d\u7684\u67d0\u4e9b\u65b9\u6cd5\u662f\u9700\u8981\u91cd\u5199\u7684\uff0c\u6216\u8005\u8bf4\u662f\u5b9e\u73b0\u65b9\u5f0f\u4e0d\u4e00\u6837\uff0c\u90a3\u4e48\u5c31\u9700\u8981\u5229\u7528 override \u5173\u952e\u5b57\u6765\u5b9e\u73b0\u8fd9\u4e2a\u65b9\u6cd5\u7684\u91cd\u5199</p> <p></p>"},{"location":"Tutorial/Java/Java5/#super","title":"super \u5173\u952e\u5b57","text":"<p>\u5f88\u597d\u7406\u89e3 <code>super</code> \u5173\u952e\u5b57\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a\u7236\u7c7b\u7684\u5f15\u7528\uff0c\u53ef\u4ee5\u7c7b\u6bd4\u4e00\u4e0b\u6211\u4eec\u4e4b\u524d\u4e00\u76f4\u4f7f\u7528\u7684<code>this</code> \u5173\u952e\u5b57</p> <p>\u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c<code>Salary</code>\u5c31\u662f <code>Employee</code> \u7c7b\u4e2d\u7684<code>private fileds</code> \u56e0\u6b64\u6211\u4eec\u5c31\u9700\u8981\u5229\u7528<code>super</code>\u6765\u83b7\u53d6\u8fd9\u4e2a\u7c7b\u4e2d\u7684<code>fields</code>.</p> <p>[tips] Java only support that many to one Inheritance\u4e5f\u5c31\u662f\u53ea\u80fd\u5141\u8bb8\u5355\u7ee7\u627f\uff0c\u4e0d\u5141\u8bb8\u591a\u7ee7\u627f</p>"},{"location":"Tutorial/Java/Java5/#516-method-call","title":"5.1.6 Method call","text":"<ul> <li>Static Binding : \u9759\u6001\u7ed1\u5b9a If the method is private, static, final or a constructor, then the compiler knows exactly which method to call.\u56e0\u4e3a\u4e0a\u9762\u8fd9\u4e9bmethods\u7684\u5c5e\u6027\u90fd\u662f\u786e\u5b9a\u7684\uff0c\u4e0d\u6d89\u53ca\u53ef\u80fd\u8de8\u7c7b\u7684\u8c03\u7528\uff0c\u90a3\u4e48\u7f16\u8bd1\u5668\u5c31\u53ef\u4ee5\u65b9\u4fbf\u76f4\u63a5\u7684\u9759\u6001\u7ed1\u5b9a\u3002\u4f46\u53cd\u4e4b\uff0c<code>public</code>\u6216\u8005\u8bf4\u662f<code>protected</code>\u8fd9\u79cd\u53ef\u4ee5\u8de8\u7c7b\uff0c\u8de8package\u7684\uff0c\u4f60\u4e0d\u77e5\u9053\u4ec0\u4e48\u65f6\u5019\u4f1a\u7528\u5230\uff0c\u5c31\u9700\u8981\u52a8\u6001\u7ed1\u5b9a(Dynamic binding)\u4e86.  <p>Dynamic binding has a very important property: It makes programs extensible without the need for modifying existing code.</p> </li> </ul>"},{"location":"Tutorial/Java/Java5/#517-prevent-inheritance-final","title":"5.1.7 prevent Inheritance <code>final</code>","text":"<p>every methods in <code>final</code> or <code>final class</code> will not been overridden!</p>"},{"location":"Tutorial/Java/Java5/#518-casting","title":"5.1.8 Casting","text":"<p>\u7c7b\u578b\u8f6c\u5316</p> <p>\u8bb0\u4f4f\uff0cJava\u662f\u5f3a\u7c7b\u578b\u7684\u8bed\u8a00\uff0c\u4e5f\u5c31\u662f\u8bf4\u4e0d\u652f\u6301\u50cfC++\u90a3\u6837\u7684\u9690\u578b\u8f6c\u5316\u3002</p> <ul> <li>use <code>instanceof</code> \u662f\u4e00\u4e2a\u597d\u4e60\u60ef\uff0c\u907f\u514d\u51fa\u73b0<code>catch exception(ClasscastException)</code>\u7684\u60c5\u51b5</li> <li>Use instanceof to check before casting from a superclass to a subclass.</li> </ul>"},{"location":"Tutorial/Java/Java5/#52-object-the-cosmic-superclass","title":"5.2 object: the cosmic Superclass","text":"<p>object is the ultimate ancestor - every class in Java <code>extends</code> object.</p>"},{"location":"Tutorial/Java/Java5/#522-the-equals-method-important","title":"5.2.2 The equals Method Important","text":""},{"location":"Tutorial/Java/Java5/#why-do-you-need-to-override-equal-method","title":"Why do you need to override <code>equal</code> method?","text":"<p>\u662f\u56e0\u4e3a Object \u7c7b\u9ed8\u8ba4\u7684equals()\u65b9\u6cd5\u5b9e\u73b0\u7684\u662f\u6bd4\u8f83\u5bf9\u8c61\u7684\u5185\u5b58\u5730\u5740\uff08\u5373\u662f\u5426\u4e3a\u540c\u4e00\u4e2a\u5bf9\u8c61\uff09\uff0c\u800c\u4e0d\u662f\u6bd4\u8f83\u5bf9\u8c61\u7684\u5185\u5bb9</p>"},{"location":"Tutorial/Java/Java5/#523-hashcode-method","title":"5.2.3 <code>hashCode</code> method","text":"<p>The <code>hashCode</code> method is defined in the <code>Object</code> class.Therefore, every object has a defualt hash code.The hash code is derived from the object's memory address.</p> <p></p> <ul> <li>Note that the strings s and t have the same hash code, because for strings, the hash code are derived from its content. here <code>String s = \"OK\"</code>,<code>String t = new String(\"OK\")</code>,so their hash code is the same.</li> <li>But for other object, which <code>hashCode</code> has not been defined for the class that it will only use the default <code>hashCode</code> defined in the <code>Object</code> class, which derives the <code>memory address</code>.</li> </ul> <p>Important: Why do you need to <code>override</code> the <code>hashCode</code> method after you <code>override</code> the <code>equals</code> method?</p> <p>\u8fd9\u662f\u56e0\u4e3a\u5728\u4f7f\u7528\u6563\u5217\u6570\u636e\u7ed3\u6784\u7684\u65f6\u5019\uff0c\u6bd4\u5982\u54c8\u5e0c\u8868\uff0c\u6211\u4eec\u5e0c\u671b\u76f8\u7b49\u7684\u5bf9\u8c61\u5177\u6709\u76f8\u7b49\u7684\u54c8\u5e0c\u7801\uff01\u5728Java\u4e2d\uff0c\u54c8\u5e0c\u8868\u4f7f\u7528\u54c8\u5e0c\u7801\u6765\u786e\u5b9a\u5b58\u50a8\u5151\u73b0\u8fc7\u7684\u4f4d\u7f6e\uff0c\u5982\u679c\u4e24\u4e2a\u76f8\u540c\u7684\u5bf9\u8c61\u5177\u6709\u4e0d\u540c\u7684\u54c8\u5e0c\u7801\uff0c\u90a3\u4e48\u4ed6\u4eec\u5c31\u4f1a\u88ab\u5b58\u5728\u54c8\u5e0c\u8868\u4e2d\u7684\u4e0d\u540c\u4f4d\u7f6e\uff0c\u4f1a\u5bfc\u81f4\u65e0\u6cd5\u6b63\u786e\u7684\u67e5\u627e\u8fd9\u4e9b\u5bf9\u8c61\u3002</p> <p></p>"},{"location":"Tutorial/Java/Java5/#53-generic-array-lists","title":"5.3 Generic Array Lists","text":"<p>\u901a\u7528\u6570\u7ec4\u5217\u8868</p> <p>In C/C++ you have to fix the sizes of all arrays at compile time.But it is awful in sometime.Althogh Java could set size of an array at runtime like <pre><code>int acutalSize = ...;\nvar staff = new Employee[actualSize];\n</code></pre> \u4f46\u4e0a\u9762\u7684\u4ee3\u7801\u4e0d\u80fd\u5b8c\u5168\u89e3\u51b3\u52a8\u6001\u4fee\u6539\u6570\u7ec4\u5927\u5c0f\u7684\u95ee\u9898\u3002\u4e00\u65e6\u786e\u5b9a\u4e86\u6570\u7ec4\u7684\u5927\u5c0f\uff0c\u90a3\u4e48\u5c31\u662f\u4e0d\u5bb9\u6613\u66f4\u6539\u7684\u3002\u6240\u4ee5\u6211\u4eec\u8003\u8651\u4e86 <code>ArrayLists</code></p> <p>ArrayList class is similar to an array, but it automatically adjusts its capacity as you add and remove elements,without any additional code.</p>"},{"location":"Tutorial/Java/Java5/#531-declaring-array-lists","title":"5.3.1 Declaring Array Lists","text":"<p><code>ArrayList&lt;Employee&gt; staff = new ArrayList&lt;Employee&gt;()</code></p> <ul> <li><code>ensureCapacity(size)</code> method allocates an internal array of size objects, that you haven't involve any costly reallocation to <code>add</code> method.</li> </ul>"},{"location":"Tutorial/Java/Java5/#54-object-wrappers-and-autoboxing","title":"5.4 Object Wrappers and Autoboxing","text":"<ul> <li> <p>The type parameter inside the angle brackets cannot be a primitive type <code>ArrayList&lt;int&gt;</code> is not allowed.</p> </li> <li> <p>Because you define it must use the wrapper class, so actually it is slower obviously that <code>int[] array</code>.</p> </li> </ul>"},{"location":"Tutorial/Java/Java5/#55-methods-with-a-variable-number-of-parameters","title":"5.5 Methods with a variable number of parameters","text":"<p>\u6211\u4eec\u8fd9\u91cc\u5c31\u5f88\u597d\u7406\u89e3\u4e86\uff0c\u5f88\u81ea\u7136\u7684\u56e0\u4e3a\u6240\u6709\u7684\u7c7b\u578b\u90fd\u662f<code>Object class</code> \u7684 subclass,\u6240\u4ee5\u6211\u4eec\u4f20\u5165\u7684\u53c2\u6570\u4e8b\u5b9e\u4e0a\u5c31\u662f<code>Object[]</code>. \u6211\u4eec\u4e0b\u9762\u4ee5<code>printf</code>\u4e3a\u4f8b\u5b50\u3002 <pre><code>public class PrintStream{\n    public PrintStream printf(String fmt, Object... args){\n        return format(fmt,args);\n    }\n}\n</code></pre> [tips] : \u8fd9\u91cc\u7684<code>...</code> \u4e5f\u662fJava\u4ee3\u7801\u4e2d\u7684\u4e00\u90e8\u5206\uff0c\u8fd9\u4e2a\u8868\u793a\u4e86\u8fd9\u4e2a\u65b9\u6cd5\u53ef\u4ee5\u6536\u83b7\u8bb8\u591a\u7684<code>objects</code>\u3002</p> <p>[\u4f8b\u5b50] <pre><code>public static double max(double... values){\n    double largest = Double.NEGATIVE_INFINITY;\n    for(double v:values){\n        if(v&gt;largest){\n            largest = v;\n        }\n    }\n    return largest;\n}\n</code></pre></p>"},{"location":"Tutorial/Java/Java5/#56-enumeration-classes","title":"5.6 Enumeration Classes","text":"<p>here we introduce an example: <pre><code>public enum Size{\n    SMALL,\n    MEDIUM,\n    LARGE,\n    EXTRA_LARGE\n}\n</code></pre> you are not need to use <code>equals</code> method,because there is only \\(4\\) instances in the enumeral class. You can simply use <code>==</code> to identify whether these 2 are the same.</p> <pre><code>public enum Day {\n    MONDAY(\"Workday\"),\n    TUESDAY(\"Workday\"),\n    WEDNESDAY(\"Workday\"),\n    THURSDAY(\"Workday\"),\n    FRIDAY(\"Workday\"),\n    SATURDAY(\"Weekend\"),\n    SUNDAY(\"Weekend\");\n\n    private String type;\n\n    // \u6784\u9020\u51fd\u6570\n    private Day(String type) {\n        this.type = type;\n    }\n\n    // \u83b7\u53d6type\u5c5e\u6027\u7684\u65b9\u6cd5\n    public String getType() {\n        return type;\n    }\n}\n\n\npublic class Main {\n    public static void main(String[] args) {\n        // \u83b7\u53d6\u679a\u4e3e\u5e38\u91cf\u548c\u5c5e\u6027\n        for (Day day : Day.values()) {\n            System.out.println(day + \" is a \" + day.getType());\n        }\n    }\n}\n</code></pre> <p>\u6211\u4eec\u4e3e\u4e86\u4e0a\u9762\u7684\u4f8b\u5b50\uff0c<code>MONDAY</code>...\u90a3\u4e9b\u90fd\u662fDay\u7684\u5b9e\u4f8binstance.\u7136\u540e\u5728\u5b9a\u4e49\u7684\u65f6\u5019\uff0c\u987a\u4fbf\u8c03\u7528\u4e86<code>Day</code>\u4e2d\u7684<code>construct function</code> <code>public Day(String type){ this.type = type;}</code> \u56e0\u4e3a\u5df2\u7ecf\u5728<code>Day</code>\u8fd9\u4e2a\u7c7b\u4e2d\u5b9a\u4e49\u4e86 <code>private String type;</code> <code>type</code>\u8fd9\u4e2afield. \u90a3\u4e48\u4e0a\u9762\u7684\u7ed3\u679c\u8f93\u51fa\u51fa\u6765\u5c31\u662f <pre><code>MONDAY is a Workday\nTUESDAY is a Workday\nWEDNESDAY is a Workday\nTHURSDAY is a Workday\nFRIDAY is a Workday\nSATURDAY is a Weekend\nSUNDAY is a Weekend\n</code></pre></p>"},{"location":"Tutorial/Java/Java5/#57-reflection","title":"5.7 Reflection","text":"<p>\u7ec8\u4e8e\u5230Reflection\u4e86 \u8fd9\u4e2aJava\u7684\u7279\u6027 - GPT\u5982\u662f\u8bf4  - \u600e\u4e48\u4ed4\u7ec6\u7406\u89e3<code>reflection</code>\uff1f \u4e3a\u4ec0\u4e48\u53eb\u505a\u53cd\u5c04\uff1f \u8fd9\u4e2a\u662f\u4e00\u4e2a\u6765\u81ea\u7269\u7406\u5b66\u4e2d\u7684\u6982\u5ff5\uff0c\u53cd\u5c04\u7684\u672c\u8d28\u662f\"\u770b\u5230\u81ea\u5df1\u7684\u6837\u5b50\",\u800cJava\u4e2d\u7684\u53cd\u5c04\uff08Reflection\uff09\u673a\u5236\u4e5f\u7c7b\u4f3c\uff0c\u5b83\u5141\u8bb8\u7a0b\u5e8f\u5728\u8fd0\u884c\u7684\u65f6\u5019\u201c\u67e5\u770b\u201d\u81ea\u5df1\u7684\u7ed3\u6784\uff0c\u901a\u8fc7\u53cd\u5c04\uff0c\u7a0b\u5e8f\u53ef\u4ee5\u5728\u4e0d\u660e\u786e\u77e5\u9053\u81ea\u5df1\u5305\u542b\u54ea\u4e9b\u7c7b\u3001\u65b9\u6cd5\u3001\u5c5e\u6027\u7684\u60c5\u51b5\u4e0b\uff0c\u52a8\u6001\u5730\u68c0\u67e5\u64cd\u63a7\u81ea\u8eab\u7684\u5185\u90e8\u4fe1\u606f\u3002</p>"},{"location":"Tutorial/Java/Java5/#571-the-class-class","title":"5.7.1 The <code>Class</code> class","text":"<p>While your program is running, the Java runtime system always maintains what is called <code>runtime type identification</code> on all objects. This information keeps track of the class to which each object belongs.Runtime type information is used by the cirtual machine to select the correct methods to execute.</p> <ul> <li> <p>Just like an <code>Employee</code> object describes the properties of a particular employee,a <code>Class</code> object describes the properties of a particular class.</p> </li> <li> <p>If the class is a package, the package name is part of the class name.</p> </li> </ul> <pre><code>var generator = new Random();\nClass cl = generator.getClass();\nString name = cl.getName(); // name is set to \"java.util.Random\"\n</code></pre> <ul> <li>You can obtain a class object corresponding to a class name by using the static <code>forName</code> method.</li> </ul> <pre><code>String className = \"java.util.Random\";\nClass cl = Class.forName(className);// to obtain this class instance.\n</code></pre> <ul> <li><code>Class cl = Random.class</code></li> <li><code>Class cl = int.class</code> </li> </ul> <p>Another method to get the class instance.</p> <ul> <li>if(e.getClass() == Employee.class) \u8fd9\u4e2a\u6d4b\u8bd5\u4f1a\u629b\u51faException\uff0c\u5f53e\u662fEmployee\u7684subclass.\u4e5f\u5c31\u662f\u8bf4\uff0c\u8fd9\u4e2agetClass()\u8fd4\u56de\u7684\u7c7b\u578b\u662f\u5f3a\u7c7b\u578b\u7684\uff0c\u4e0d\u5305\u542b\u7ee7\u627f\u7684\u8f6c\u5316\uff0c\u5f97\u5230\u7684\u662f\u4ec0\u4e48\u90a3\u4e48\u5c31\u662f\u4ec0\u4e48\u3002</li> </ul>"},{"location":"Tutorial/Java/Java5/#572-a-primer-on-declaring-exception","title":"5.7.2 A primer on Declaring Exception","text":"<p>When an error occurs at runtime,a program can \"throw an Exception\"</p> <p>If you don't provide a \"handle\" (\"catches\" the exception and deals with it),the program will terminate and prints a message to the console.</p>"},{"location":"Tutorial/Java/Java5/#573-resources","title":"5.7.3 Resources","text":"<p>Classes often have associated data files, such as: - Image and sound files - Text files with message strings and button labels.</p>"},{"location":"Tutorial/Java/Java5/#574-using-reflection-to-analyze-the-capabilities-of-classes","title":"5.7.4 Using Reflection to Analyze the capabilities of classes.","text":"<ul> <li>First, there are 3 classes in the \\(java.lang.reflect\\) packages</li> <li>\\(Field\\)</li> <li>\\(Method\\)</li> <li>\\(Constructor\\) they describe the fields, methods, and constructors of a class respectively.</li> </ul> <p>\u5176\u5b9e\u53cd\u5c04\u7684\u8fd9\u4e2a\u529f\u80fd\u5f88\u597d\u7406\u89e3\uff0c\u4e5f\u5c31\u662f\u83b7\u53d6\u8fd9\u4e2aclass\u4e2d\u7684\u4e00\u4e9bfields,methods,constructor\u7684\u5143\u4fe1\u606f\u3002 - <code>getName</code>  return the name of the item - <code>getType</code> return the type Class - <code>getModifiers</code> return an integer with various bits turned on and off, describes the modifiers used,such as \\(public\\) and \\(static\\) - <code>getFileds</code>/<code>getMethods</code>/<code>getConsstructors</code> return arrays of the public fields,methods,and constructors that the class support.</p>"},{"location":"Tutorial/Java/Java5/#575-using-reflection-to-analyze-objects-at-runtime","title":"5.7.5 Using Reflection to Analyze Objects at Runtime","text":"<p>The obove Session we saw how find out the <code>names</code> and <code>types</code>.The following part, we will go one step further and actually look at the contents of the fields.</p> <p> Reflection lets you look at fields of objects that were not known at compile time.</p> <ul> <li><code>getDeclaredFiled</code>\u662f\u53ef\u4ee5\u8bbf\u95ee\u79c1\u6709\u5b57\u6bb5\u7684\u3002</li> </ul> <p>\u4e0a\u9762\u7684\u4ee3\u7801\u6bb5\u600e\u4e48\u7406\u89e3\u5462\uff1f\u5c31\u662f\u53ef\u4ee5\u628a\u4ed6\u60f3\u6210\u662fExcel\u7684\u5f62\u5f0f\uff0c\u6211\u4eec\u9996\u5148<code>Class cl = harray.getClass()</code> \u8fd4\u56de\u4e86\u4e00\u4e2a<code>Class</code>\u7c7b\u7684\u5b9e\u4f8b<code>Employee</code>\u3002 <code>Fields f = cl.getDeclaredField(\"name\")</code> \u8fd9\u4e2a<code>f</code>\u4e5f\u5c31\u662f\u83b7\u5f97\u4e86\u6709\u5173<code>name</code>\u5b57\u6bb5\u7684\u6240\u6709\u5185\u5bb9\uff0c\u4e5f\u5c31\u662f\u8bf4\u662f\u50cf\u6570\u636e\u5e93\u4e2d\u7684\u83b7\u53d6\u4e86\u67d0\u4e2a\u5217\u7684\u6240\u6709\u5185\u5bb9\uff0c\u6211\u4eec\u7684<code>Object v = f.get(harry)</code>,<code>Object v</code> \u5c31\u83b7\u5f97\u7684\u662f<code>String</code>\u7c7b\u578b\u7684<code>Harry Hacker</code>\u4e5f\u5c31\u662f\u8fd9\u4e00\u5217name\u5b57\u6bb5\u4e2d\uff0c\u5c5e\u4e8e<code>harry</code>\u7684name\u3002</p> <p>but the code above has a problem -- The machanism of Java lets you find out what fields an object has,but it won't let you read and write the values of the fields, unless you have permission.</p> <p><code>field.setAccessible(true) // \u7ed5\u8fc7\u9650\u5236\u8bbf\u95ee</code></p> <p>\u5177\u4f53\u600e\u4e48\u7406\u89e3 \"Reflection lets you look at fields of objects that were not known at compile time.\" \u8fd9\u53e5\u8bdd\u5462\uff1f \u6211\u4eec\u62ff\u5e8f\u5217\u5316\u6765\u4e3e\u4f8b</p> <p><pre><code>import java.lang.reflect.Field;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class ObjectSerializer {\n\n    public static Map&lt;String, Object&gt; serialize(Object obj) throws IllegalAccessException {\n        Map&lt;String, Object&gt; result = new HashMap&lt;&gt;();\n        Class&lt;?&gt; cl = obj.getClass();\n\n        for (Field field : cl.getDeclaredFields()) {\n            field.setAccessible(true);  // \u7ed5\u8fc7\u8bbf\u95ee\u9650\u5236\n            result.put(field.getName(), field.get(obj));\n        }\n\n        return result;\n    }\n\n    public static void main(String[] args) throws IllegalAccessException {\n        Employee emp = new Employee(\"Alice\", 75000, 12, 5, 1990);\n        Map&lt;String, Object&gt; serializedData = serialize(emp);\n        System.out.println(serializedData);\n    }\n}\n</code></pre> \u8f93\u51fa\u7ed3\u679c <pre><code>{name=Alice, salary=75000, hireMonth=12, hireDay=5, hireYear=1990}\n</code></pre></p> <p>\u4e0a\u9762\u7684\u4f8b\u5b50\u5176\u5b9e\u5c31\u662f\u5f88\u597d\u7684\u53cd\u5e94\u4e86\u901a\u8fc7Java\u7684\u53cd\u5c04\u673a\u5236\uff0c\u6211\u4eec\u53ef\u4ee5\u52a8\u6001\u7684\u8bbf\u95ee\u8fd9\u4e9b\u5b57\u6bb5\u5e76\u4e14\u83b7\u53d6\u4ed6\u4eec\u7684\u503c\u3002\u5728serialize\u65b9\u6cd5\u7528\u4e8e\u4e0d\u540c\u7c7b\u578b\u7684\u5bf9\u8c61\u7684\u65f6\u5019\uff0c\u5b83\u4f9d\u7136\u53ef\u4ee5\u5de5\u4f5c\uff0c\u800c\u4e0d\u9700\u8981\u4e3a\u6bcf\u4e00\u79cd\u5bf9\u8c61\u90fd\u5b9a\u4e49\u5355\u72ec\u7684\u63a5\u6536/\u5224\u65ad\u673a\u5236\u3002\u56e0\u4e3a\u5b83\u4eec\u9700\u8981\u652f\u6301\u591a\u79cd\u4e0d\u540c\u7684\u5bf9\u8c61\u7ed3\u6784\uff01</p>"},{"location":"Tutorial/Java/Java5/#576-using-reflection-to-write-generic-array-code","title":"5.7.6 Using Reflection to write generic Array Code","text":"<p>\u8fd9\u91cc\u6709\u4e00\u4e2a\u8981\u6ce8\u610f\u7684\u70b9\u662f \u6587\u4e2d\u63d0\u53ca\u4e86\u8fd9\u4e00\u4e2apoint\uff1a</p> <p>It is legal to cast an Employee[ ] temporarily to an Object[ ] array and then cast it back,but an array that started its life as an Object[ ] array can never be cast into an Employee[ ] array. \u6240\u4ee5\u6211\u4eec\u9700\u8981\u5229\u7528\u5230Reflection Package</p> <ul> <li>First : get the class object of <code>a</code></li> <li>Confirm that a it is indeed an array</li> <li>Use the <code>getComponentType</code> method of the Class (which is defined only for class objects that represent arrays) to find the right type for the array.</li> </ul>"},{"location":"Tutorial/Java/Java5/#577-invoking-arbitrary-methods-and-constructors","title":"5.7.7 Invoking Arbitrary Methods and Constructors","text":"<p>Because Java has no function pointer that, it can't like C / C++ you can execute an arbitrary function. But the following sessions we will introduce a new way to invoke the function.</p> <p>\u5176\u5b9e\u8ddf\u4e0a\u9762\u7684\u9053\u7406\u4e00\u6837\uff0c\u6211\u4eec\u6709<code>getMethod</code> \u548c<code>getConstructor</code> method\u6765\u83b7\u53d6\u5bf9\u5e94\u7684Method\u548cConstructor\u7684\u4e3b\u4f53\u3002 \u4e0b\u9762\u662f\u51e0\u4e2a\u4f8b\u5b50 - Example for Constructor  \u90a3\u4e48<code>cons</code>\u5c31\u7c7b\u4f3c\u4e8e\u4e00\u4e2amethod pointer\u4e86</p> <ul> <li>Example for Method  \u4e0a\u9762\u7684<code>square</code>\u548c<code>sqrt</code>\u5c31\u4ee3\u8868\u7740\u7c7b\u4f3cmethod pointer.</li> </ul>"},{"location":"Tutorial/Java/Java6/","title":"Chapter6 Interface","text":"<p>This chapter is about several advanced techniques that are commonly used. Despite their less obvious nature, you will need to master them to complete your Java tool chest.</p> <p>The Interfaces is a way of describing what classes should do, without specifying how they should do it.  \u600e\u4e48\u7406\u89e3\u5462\uff1f\u63a5\u53e3\u5c31\u662f\u63cf\u8ff0\u4e86\u8fd9\u4e2a\u7c7b\u9700\u8981\u505a\u4ec0\u4e48\uff0c\u4f46\u6ca1\u6709\u8be6\u7ec6\u8bb2\u6e05\u695a\u4ed6\u4eec\u600e\u4e48\u505a\u3002</p>"},{"location":"Tutorial/Java/Java6/#61-interface","title":"6.1 Interface","text":"<p>Typically, the supplier of some service states: \"If your class conforms to a particular interface, then I'll perform the service.\" \u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u67d0\u4e2a\u7c7b\u7b26\u5408\u63d0\u4f9b\u7684\u63a5\u53e3\u6807\u51c6\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e2a\u63a5\u53e3\u3002</p> <pre><code>// An example of interface;\npublic interface Comparable{\n    int compareTo(Object other);\n}\n</code></pre> <ul> <li>This means that every class which want to implements the interface must have this method <code>compareTo</code>, and the method must take an <code>Object</code> parameter and return an integer.</li> <li>All methods of an interface must be <code>public</code>, so you have not need to add the public into the method.</li> <li>An interface can have multiple methods.</li> <li>Interfaces never have instance fields.</li> </ul>"},{"location":"Tutorial/Java/Java6/#611-implement-the-interface","title":"6.1.1 Implement the interface","text":"<ul> <li> <p>Step1: declare that your class intends to implement the given interface. <code>class Employee implements Comparable</code></p> </li> <li> <p>Step2 : supply definitions for all methods in the interface</p> </li> </ul> <pre><code>public interface Comparable{\n    int compareTo(Object other);\n}\n\nclass Employee implements Comparable&lt;Employee&gt;{\n    public int compareTo(Object otherObject){\n        Employee other = (Employee) otherObject;\n        return Double.compare(salary,other.salary);\n    }\n}\n</code></pre> <p>You see that why can't the Employee class simply provide a <code>compareTo</code> method without implementing the <code>Comparable</code> interface?</p> <p>The reason is that the Java Programming language is strongly typed(\u5f3a\u7c7b\u578b),when making a method calling, the compiler needs to be able to check that the method actually exists. \u4e5f\u5c31\u662f\u8bf4\u5176\u5b9eJava\u56e0\u4e3a\u662f\u5f3a\u7c7b\u578b\u7684\uff0c</p> <p>- GPT \u5982\u662f\u8bf4\uff1a\u4e3a\u4ec0\u4e48\u8981\u4f7f\u7528\u63a5\u53e3 </p>"},{"location":"Tutorial/Java/Java6/#612-the-properties-of-interfaces","title":"6.1.2 The properties of Interfaces","text":"<p>Interfaces are not classes. In particular, you can never use <code>new</code> operator to instantiate an interface.</p> <pre><code>Comparable x; // OK\nx = new Employee(...);// OK provided Employee implements Comparable.\n</code></pre> <ul> <li>Just as the same as you can build hierarchies of classes, you can <code>extend</code> interfaces.  \u8fd9\u91cc <code>extends</code>\u8fd9\u4e2a\u5173\u952e\u8bcd\u5c31\u51fa\u73b0\u4e86\uff0c\u50cfJava\u7c7b\u90a3\u6837\u53ef\u4ee5\u6709\u7ee7\u627f\uff0c\u5bf9\u4e8e\u63a5\u53e3\u6765\u8bf4\u4e5f\u53ef\u4ee5\u6709\u62d3\u5c55\uff0c\u4e5f\u5c31\u662f<code>extends</code>.</li> </ul> <pre><code>public interface powered extends Moveable{\n    double milesPerGallon();\n}\n\npublic interface powered extends Moveable{\n    double milesPerGallon();\n    double SPEED_LIMIT = 95;\n    // a public static final constant;\n}\n</code></pre> <ul> <li>each class can implemet many interfaces.   the designer of Java chose not to support multiple inheritance, because it makes the language either <code>complex</code> and <code>less efficient</code>.</li> </ul>"},{"location":"Tutorial/Java/Java6/#614-static-and-private-methods","title":"6.1.4 Static and Private Methods","text":"<p>As of Java 8, you are allowed to add static methods to interfaces.</p> <p>As of Java 9, methods in an interface can be <code>private</code>. A private method can be static or an instance method. Since private methods can only be used in the methods of the interface itself, their use is limited to being helper methods for the other methods of the interface.</p>"},{"location":"Tutorial/Java/Java6/#615-default-methods","title":"6.1.5 Default Methods","text":"<p>It is a modifier. Actually, it is not very useful because of the reason that you may override it many times. But in the iterator, <code>remove()</code> method is very useful.</p> <p>\u5176\u5b9e\u4e5f\u5c31\u662f\u8bf4\uff0c\u5bf9\u4e8e\u63a5\u53e3\uff0c\u5f88\u597d\u7406\u89e3\uff0c\u6709\u4e9b\u65b9\u6cd5\u662f\u53ef\u4ee5\u4e0d\u7528\u91cd\u5199\u7684\uff0c\u90a3\u4e48\u67d0\u4e2a\u7c7b\u5982\u679c\u7b26\u5408\u8fd9\u4e2a\u63a5\u53e3\u7684\u8981\u6c42\u5c31\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\uff0c\u800c\u4e14\u6709\u4e86 <code>default</code>\u5173\u952e\u5b57\uff0c\u90a3\u4e9b\u4e0d\u4f9d\u8d56\u7c7b\u5b9e\u73b0\u672c\u8eab\u7ec6\u8282\u7684\u65b9\u6cd5\u5c31\u4e0d\u7528\u91cd\u5199\uff0c\u76f4\u63a5\u8c03\u7528\u5373\u53ef\u3002</p> <pre><code>public interface Iterator&lt;E&gt;{\n    // E is the type of the element;\n    boolean hasNext();\n    E next();\n    default void remove(){\n        throw new UnsupportedOperationException(\"remove\");\n    }\n}\n</code></pre> <p>\u8fd8\u6709\u4e00\u4e2a\u73b0\u5b9e\u7684\u95ee\u9898\uff0c\u5c31\u662f\u5f88\u5e38\u89c1\u7684<code>interface evolution</code>\uff0c\u6bd4\u5982\u6211\u4eec\u8003\u8651\u4e00\u4e2a<code>Collection</code>\u63a5\u53e3\uff0c\u7528\u4e86\u5f88\u591a\u5e74\u4e86\uff0c\u7136\u540e\u6211\u4eec\u6709\u4e2a\u7c7b\u8c03\u7528\u4e86\u8fd9\u4e2a\u63a5\u53e3\u3002\u4f46\u662f\u968f\u7740\u7248\u672c\u7684\u66f4\u65b0\uff0c\u6211\u4eec\u5728<code>Collection</code>\u8fd9\u4e2a\u63a5\u53e3\u4e2d\u6dfb\u52a0\u4e86\u4e00\u4e2a\u65b9\u6cd5\uff0c\u4f46\u662f\u5982\u679c\u4e0d\u6dfb\u52a0<code>Default</code>\u5173\u952e\u5b57\u7684\u8bdd\uff0c\u5c31\u4f1a\u5bfc\u81f4\u4e00\u4e2a\u95ee\u9898\uff0c\u65e0\u6cd5\u7f16\u8bd1\u5e76\u4e14\u4f1a\u629b\u51fa\u9519\u8bef\u3002\u90a3\u4e48\u5bf9\u4e8e\u5927\u9879\u76ee\u7684\u8bdd\u5c31\u76f4\u63a5gg\u3002\u6240\u4ee5\u6dfb\u52a0<code>Default</code>\u5173\u952e\u5b57\u53ef\u4ee5\u89c4\u907f\u8fd9\u4e2a\u95ee\u9898\u3002\u53ef\u4ee5\u5b89\u5fc3\u7684\u7ed9\u63a5\u53e3\u6dfb\u52a0\u65b0\u7684methods\u6216\u8005methods\u66f4\u6539\u4e86\u3002</p>"},{"location":"Tutorial/Java/Java6/#616-resolving-the-default-method-conflicts","title":"6.1.6 Resolving the Default Method conflicts","text":"<p>\u5f53\u4e00\u4e2a\u65b9\u6cd5\u5b9a\u4e49\u4ee5<code>default</code>\u5728\u4e00\u4e2a\u63a5\u53e3\u4e2d,\u7136\u540e\u53c8\u540c\u6837\u7684\u5b9a\u4e49\u5728\u4e00\u4e2a\u8d85\u96c6\u4e2d(superclass)\uff0c\u90a3\u4e48Java\u662f\u5982\u4f55\u89e3\u51b3\u8fd9\u6837\u7684\u51b2\u7a81\u5462\uff1f</p> <ul> <li>\u7236\u7c7b\u8d62\u3002If a superclass provides a concrete method, default methods with the same name and parameter types are simply ignored.</li> <li>Interface Clash.(\u540c\u4e00\u4e2a\u65b9\u6cd5\u51fa\u73b0\u5728\u4e86\u4e24\u4e2a\u63a5\u53e3\u4e2d)\u90a3\u4e48\u5c31\u9700\u8981<code>override</code>\u6765\u91cd\u5199\u8fd9\u4e2a\u65b9\u6cd5\u4e86\u3002\u53ef\u4ee5\u907f\u514d\u51fa\u73b0conflict\u7684\u60c5\u51b5\u3002</li> </ul>"},{"location":"Tutorial/Java/Java6/#617-interfaces-and-callbacks","title":"6.1.7 Interfaces and callbacks","text":"<p><code>callback</code>, represents that you specify the action that should occure whenever a particular event happens. \u4e5f\u5c31\u662f\u6709\u4e2a\u53cd\u9988\u673a\u5236\u3002</p> <p>\u4e0b\u9762\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5c31\u662f\u5173\u4e8e <code>ActionListener</code> <pre><code>// here offer an interface;\npublic interface ActionListener{\n    void actionPerformed(ActionEvent event);\n}\n\n// We call the interface;\nclass TimePrinter implements ActionListener{\n    // override the interface;\n    /**\n     * @param event the description of the event;\n     */\n    public void actionPerformed(ActionEvent event){\n        // \n        System.out.println(\"At the tone,the time is \"+Instant.ofEpochMilli(event.getWhen()));\n        Toolkit.getDefaultToolkit().beep();\n    }\n}\n</code></pre></p>"},{"location":"Tutorial/Java/Java6/#618-the-comparator-interface","title":"6.1.8 The Comparator Interface","text":"<p>\u4e0a\u9762\u5c31\u662f\u4e00\u4e2aJava\u7684sort\u4f17\u591a\u91cd\u8f7d<code>overloading</code>\u65b9\u6cd5\u4e2d\u7684\u4e00\u4e2a,\u53ef\u4ee5\u4f20\u5165\u6bd4\u8f83\u5668</p> <pre><code>var comp = new lengthComaprator();\nif(comp.compare(words[i],words[j])&gt;0)...\n\n// method2 \nString[] friends = {\"1\",\"2\"};\n// \u8fd9\u91cc\u5c31\u662f\u5bf9\u5e94\u4e0a\u9762\u7684 sort(T[] a,Comparator&lt;? super T&gt;c)\nArray.sort(friends,new lengthComparator());\n</code></pre>"},{"location":"Tutorial/Java/Java6/#619-object-cloning","title":"6.1.9 Object Cloning","text":"<p>here introduce an interface that about the object cloning;</p> <p>\u6211\u4eec\u8fd9\u91cc\u8981\u533a\u5206\u4e00\u4e0b <code>shallow clone</code> \u548c <code>deep clone</code> \uff1a - <code>shallow clone</code>:\u662f\u8fd0\u7528\u5230 immutable \u4e0d\u53ef\u53d8\u7684\u8bdd\uff0c\u90a3\u4e48\u662f\u53ef\u4ee5\u5229\u7528\u6d45\u514b\u9686\u7684.\u53ea\u590d\u5236\u5bf9\u8c61\u7684\u7b2c\u4e00\u5c42\u6570\u636e\uff0c\u5bf9\u4e8e\u5f15\u7528\u7c7b\u578b\u7684\u5b57\u6bb5\uff0c\u5b83\u53ea\u590d\u5236\u5f15\u7528\u5730\u5740\uff0c\u800c\u4e0d\u4f1a\u590d\u5236\u5f15\u7528\u5bf9\u8c61\u672c\u8eab\u3002 \u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u539f\u59cb\u5bf9\u8c61\u7684\u5f15\u7528\u7c7b\u578b\u5b57\u6bb5\u6307\u5411\u4e86\u4e00\u4e2a\u5bf9\u8c61\uff0c\u90a3\u4e48\u6d45\u62f7\u8d1d\u540e\u7684\u8be5\u5b57\u6bb5\u5c06\u6307\u5411\u540c\u4e00\u4e2a\u5bf9\u8c61\uff0c\u56e0\u6b64\uff0c\u4fee\u6539\u62f7\u8d1d\u5bf9\u8c61\u4e2d\u7684\u5f15\u7528\u7c7b\u578b\u7684\u5b57\u6bb5\uff0c\u539f\u6765\u7684\u4e5f\u4f1a\u8fdb\u884c\u6539\u53d8\u3002 - <code>deep clone</code> : \u662f\u8fd0\u7528\u6df1\u62f7\u8d1d\uff0c\u4e00\u4e2a\u8bcd\u6765\u5f62\u5bb9 \u5b8c\u5168\u72ec\u7acb\uff0c\u56e0\u4e3a\u6211\u4eec\u662f\u9012\u5f52\u7684\u62f7\u8d1d\u5176\u5305\u542b\u7684\u5168\u90e8\u5f15\u7528\u5bf9\u8c61\uff0c\u5e76\u4e14\u521b\u9020\u51fa\u5168\u65b0\u7684\u5b9e\u4f8b\u3002\u4e0d\u4f1a\u51fa\u73b0\u4e0a\u9762\u7684\u60c5\u51b5\u3002 <pre><code>// shallow clone\nclass ShallowCloneExample implements Cloneable {\n    int value;\n    int[] array;\n\n    public ShallowCloneExample(int value, int[] array) {\n        this.value = value;\n        this.array = array;\n    }\n\n    @Override\n    protected Object clone() throws CloneNotSupportedException {\n        return super.clone(); // \u4ec5\u590d\u5236\u7b2c\u4e00\u5c42\n    }\n}\n\n// \u4f7f\u7528\u6d45\u62f7\u8d1d\nShallowCloneExample original = new ShallowCloneExample(10, new int[]{1, 2, 3});\nShallowCloneExample clone = (ShallowCloneExample) original.clone();\n\n\n// deep clone\nclass DeepCloneExample implements Cloneable {\n    int value;\n    int[] array;\n\n    public DeepCloneExample(int value, int[] array) {\n        this.value = value;\n        this.array = array.clone(); // \u9012\u5f52\u62f7\u8d1d\u5f15\u7528\u7c7b\u578b\n    }\n\n    @Override\n    protected Object clone() throws CloneNotSupportedException {\n        DeepCloneExample deepClone = (DeepCloneExample) super.clone();\n        deepClone.array = array.clone(); // \u624b\u52a8\u514b\u9686\u6bcf\u4e2a\u5f15\u7528\u7c7b\u578b\n        return deepClone;\n    }\n}\n\n// \u4f7f\u7528\u6df1\u62f7\u8d1d\nDeepCloneExample original = new DeepCloneExample(10, new int[]{1, 2, 3});\nDeepCloneExample clone = (DeepCloneExample) original.clone();\n</code></pre> \u867d\u7136<code>deep clone</code>\u53ef\u4ee5\u5b8c\u5168\u72ec\u7acb\u539f\u59cb\u7684\u5bf9\u8c61\uff0c\u4f46\u6548\u7387\u6bd4\u8f83\u4f4e\uff0c\u56e0\u4e3a\u5f53\u4e00\u4e2a\u7c7b\u4e2d\u6240\u5305\u542b\u7684\u5b57\u6bb5\u592a\u591a\u7684\u65f6\u5019\uff0c\u90a3\u4e48\u9012\u5f52\u7684\u62f7\u8d1d\u5c31\u4f1a\u5bfc\u81f4\u6548\u7387\u4f4e\u4e0b\u3002</p>"},{"location":"Tutorial/Java/Java6/#62-lambda-expressions","title":"6.2 Lambda expressions","text":"<p>Why use the Lambda expressions? - A lambda expression is a block of code that you can pass around so it can be executed later, once or multiple times. \u4e00\u4e2a\u4ee3\u7801\u6bb5\uff0c\u4f60\u53ef\u4ee5\u7acb\u523b\u6267\u884c\uff0c\u5e76\u4e14\u6267\u884c\u5f88\u591a\u6b21</p> <p>\u53ef\u80fd\u4f60\u4f1a\u60f3\uff0c\u90a3\u4f60\u8c03\u7528\u51fd\u6570\u591a\u6b21\u4e0d\u4e5f\u662f\u4e00\u6837\u7684\u5417\uff1f\u8fd8\u771f\u4e0d\u4e00\u6837\uff0c\u56e0\u4e3aJava\u662fOOP\u8bed\u8a00\uff0c\u4e5f\u5c31\u662f\u8bf4\u6240\u6709\u7684<code>method</code>\u90fd\u662f\u57fa\u4e8e<code>class/instance</code>\u7684\uff0c\u90a3\u4e48\u5982\u679c\u4f60\u8c03\u7528\u4e00\u4e2a\u51fd\u6570\u591a\u6b21\uff0c\u4e5f\u5c31\u662f\u8bf4\u4f60\u9700\u8981\u91cd\u590d\u521b\u5efa\u5b9e\u4f8b\uff0c\u6700\u597d\u60f3\u5230\u7684\u4f8b\u5b50\u5c31\u662f<code>sort</code>\u4e2d\u7684<code>comparator</code>.\u800c<code>lambda expressions</code>\u5c31\u5f88\u5bb9\u6613\u7684\u89e3\u51b3\u4e86\u8fd9\u4e2a\u95ee\u9898\u3002 \u8003\u8651\u4e8b\u60c5\u7684\u672c\u8d28\uff1a\u5176\u5b9e\u5c31\u662f\u8ddf\u8bed\u8a00\u7684\u7279\u6027\u606f\u606f\u76f8\u5173\u7684\uff0cJava\u662f\u6700\u5178\u578b\u7684OOP\u8bed\u8a00\uff0c\u90a3\u4e48\u4f60\u7684\u6240\u6709\u65b9\u6cd5\u90fd\u662f\u57fa\u4e8eclass/instance\u7684\uff0c\u4f60\u8c03\u7528\u65b9\u6cd5\u5c31\u8981\u8003\u8651\u521b\u5efa\u5bf9\u8c61\u7684\u5f00\u9500</p>"},{"location":"Tutorial/Java/Java6/#622-the-syntax-of-lambda-expressions","title":"6.2.2 The syntax of Lambda Expressions","text":"<ul> <li>we want to compute <code>first.length() - second.length()</code></li> <li>\u7136\u540e\u6211\u4eec\u8003\u8651,<code>first</code>\u548c<code>second</code>\u90fd\u662f<code>String</code>\u7c7b\u578b\u7684\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5199\u6210\u8fd9\u6837 <code>(String first,String second) -&gt;first.length()-second.length()</code></li> </ul> <p>\u6bd4\u8f83\u672c\u8d28\u7684\u8868\u8fbe\u5c31\u662f  parameters , the <code>-&gt;</code> arrow, and an expression - Another case is that our expression is a code block  <pre><code>// lambda expression;\n(String first,String second)-&gt;{\n    if(first.length()&lt;second.length())\n        return -1;\n    else if(first.length()&gt;second.length())\n        return 1;\n    return 0;\n}\n</code></pre></p> <ul> <li>if the lambda expression has no parameters that you still supply empty parentheses. <pre><code>()-&gt;{\n    for (int i=0;i&lt;100;i++)\n        System.out.println(i);\n}\n</code></pre></li> </ul> <p></p>"},{"location":"Tutorial/Java/Java6/#623-functional-interfaces","title":"6.2.3 Functional Interfaces","text":"<p>you'd better think of a lambda expression as a function, not an object, and to accept that it can be passed to a functional interface.</p> <p><code>@FunctionalInterface</code>  \u8fd9\u4e2a\u6ce8\u91ca\u7684\u76ee\u7684\u5c31\u662f\u663e\u5f0f\u58f0\u660e\u4e00\u4e2a\u63a5\u53e3\u662f\u51fd\u6570\u5f0f\u63a5\u53e3\u3002\u5982\u679c\u4e00\u4e2a\u63a5\u53e3\u4f7f\u7528\u4e86\u8fd9\u4e2a\u6ce8\u91ca\uff0c\u7f16\u8bd1\u5668\u4f1a\u786e\u4fdd\u5b83\u53ea\u5305\u542b\u5230\u4e00\u4e2a<code>method</code>.</p> <ul> <li>You can supply a lambda expression whenever an object of an interface with a single abstract method is expected.</li> </ul> <pre><code>var timer = new Timer(1000,event-&gt;{\n    System.out.println(\"At the tone\"+Instance.ofEpochMilli(event.getWhen()));\n});\n</code></pre> <p>Actually,conversion to a functional interfaceis the only thing that you can do with a lambda expression in Java.</p>"},{"location":"Tutorial/Java/Java6/#624-method-references","title":"6.2.4 Method References","text":"<ul> <li>Example 1 :   Sometimes, you may call <code>var timer = new Tiemr(1000,event -&gt; System.out.println(event))</code></li> <li>Example 2:   \u8fd9\u4e2a\u65f6\u5019\uff0c\u65b9\u6cd5\u7684\u5f15\u7528\u5c31\u51fa\u6765\u4e86   <code>var timer = new Timer(1000,System.out::println)</code>   This is called Method Reference,It directs the compiler to produce an instance of a functional interface,overriding the single abstract method of the interface to call the given method. </li> <li>\u53ef\u80fd\u6709\u65f6\u5019\uff0c\u4e00\u4e2a\u51fd\u6570\u7b7e\u540d\u6709\u591a\u4e2a<code>overloading</code>\u7684\u60c5\u51b5\uff0c\u90a3\u4e48\u4f7f\u7528<code>method reference</code>\u5c31\u53ef\u4ee5\u8ba9\u7f16\u8bd1\u5668\u53bb\u5e2e\u4f60\u5bfb\u627e\u53ef\u4ee5\u4f7f\u7528\u7684\uff0c\u4f8b\u5982 <code>Max</code>\u5c31\u6709\u4e24\u79cd<code>for integer</code>\u548c<code>for double</code></li> </ul>"},{"location":"Tutorial/Java/Java6/#625-constructor-references","title":"6.2.5 Constructor References","text":"<p>\u50cf Method Reference \u4e00\u6837\uff0c\u5176\u5b9e\u5c31\u662f\u6784\u9020\u51fd\u6570\u7684\u5f15\u7528\u3002</p> <p>\u6211\u4eec\u4f7f\u7528<code>Person[] people = stream.toArray(Person[]::new)</code> \u56e0\u4e3a<code>Person::new</code>\u5c31\u662fconstructor reference.</p>"},{"location":"Tutorial/Java/Java6/#626-variable-scope","title":"6.2.6 Variable Scope","text":"<p>\u5728Lambda\u533f\u540d\u51fd\u6570\u4e2d\uff0c\u7ecf\u5e38\u4f1a\u51fa\u73b0\u4e00\u79cd\u60c5\u51b5\uff0c\u5c31\u662f\u4f60\u4f1a\u8fd0\u7528\u5230\u8fd9\u4e2amethod\u57df\u4e2d\u7684\u4f20\u5165\u7684parameters.</p> <p>\u4e0b\u9762\u662f\u4e24\u4e2a\u4f8b\u5b50 <pre><code>// legal\npublic static void reapeatMessage(String text,int delay){\n    ActionListener listener = event -&gt;{\n        System.out.println(text);\n        Toolkit.getDefaultToolkit().beep();\n    };\n    new Timer(delay,listener).start();\n}\n\n// illegal\npublic static void countDown(int start,int delay){\n    ActionListener listener = event -&gt;{\n        start -- ; // error;\n        System.out.println(start);\n    };\n    new Timer(delay,listener).start();\n}\n</code></pre></p> <p>\u6211\u4eec\u770b\u4e0b\u9762\u8fd9\u4e2a\u4f8b\u5b50\u5c31\u662f\u975e\u6cd5\u7684\uff0c\u867d\u7136Java\u53ef\u4ee5\u6355\u6349\u5230\u65b9\u6cd5\u4e2d\u4f20\u5165\u7684\u53c2\u6570\uff0c\u4f46\u5fc5\u987b\u662f\u4e0d\u53ef\u53d8\u7684\u3002\u5c31\u50cf\u8fd9\u4e2a\u4f20\u5165\u7684<code>start</code>\uff0c\u662f\u4e0d\u53ef\u53d8\u7684\u3002</p> <p>The rule is that any captured variable in a lambda expression must be <code>effectively final</code>.</p>"},{"location":"Tutorial/Java/Java6/#63-inner-class","title":"6.3 Inner class","text":"<p>An inner class is a class that is defined inside another class.</p> <ul> <li>Inner class can be hidden from other class in the same package.</li> <li>Inner class methods can access the data from the scope in which they are defined - include the data that would otherwise be private.</li> </ul>"},{"location":"Tutorial/Java/Java6/#64-service-loaders","title":"6.4 Service Loaders","text":"<p>JDK offers a simple machanism for loading services.</p>"},{"location":"Tutorial/Java/Java7/","title":"Chapter7 Exception","text":"<p>It is time to turn to the mechanisms the Java programming language has for dealing with the real world of bad data and buggy code.</p> <ul> <li>Notify the user of an error</li> <li>Save all work</li> <li>Allow user to gracefully exit the program</li> </ul> <p>Java uses a form of error handling <code>exception handling</code>.</p> <p>When an error occurs that, you might want to 2 cases: - Return to a safe state and enable the user to execute other commands; - Allow the user to save all the works and terminate the program gracefully.</p> <p>\u5f53\u7136\uff0c\u4ee5\u4e0a\u7684\u4e24\u79cd\u60c5\u51b5\u5e76\u4e0d\u5bb9\u6613\uff0c\u56e0\u4e3a\u4fa6\u67e5\u53d1\u751f\u9519\u8bef\u7684\u4ee3\u7801\u548c\u5b9e\u9645\u4e0a\u53d1\u751f\u9519\u8bef\u7684\u4ee3\u7801\u76f8\u53bb\u751a\u8fdc\uff0c\u90a3\u4e48<code>exception handling</code>\u7684\u4f7f\u547d\u5c31\u662f\u5c06\u9519\u8bef\u53d1\u751f\u7684\u63a7\u5236\u6743\u8f6c\u79fb\u5230\u80fd\u591f\u5904\u7406\u9519\u8bef\u7684\u7a0b\u5e8f\u4e0a\u3002\u6240\u4ee5\u4f60\u5e94\u8be5\u63d0\u524d\u7684\u9884\u8ba1\u9519\u8bef\u7684\u53d1\u751f\u3002</p> <p>\u5f88\u591a\u65f6\u5019\uff0c\u6211\u4eec\u603b\u662f\u5bc4\u5e0c\u671b\u4e8e\u8ba9\u9519\u8bef\u5f97\u5230<code>return</code>,\u6bd4\u5982\u5728\u6d4f\u89c8\u6587\u4ef6\u7684\u672b\u5c3e\u7684\u65f6\u5019\uff0c\u4f1a\u8fd4\u56de<code>-1</code>\u3002\u4f46\u4e8b\u5b9e\u4e0a\u5f88\u591a\u65f6\u5019\uff0c\u5e76\u6ca1\u6709\u9519\u8bef\u4f1a\u8fd4\u56de\u3002\u6211\u4eec\u4e5f\u65e0\u4ece\u800c\u77e5\u3002\u5728Chapter5\u4e2d\u7684\u65f6\u5019\uff0c\u6211\u4eec\u77e5\u9053\u4e86Java\u4e3a\u6bcf\u4e00\u4e2a<code>method</code>\u63d0\u4f9b\u4e86\u4e00\u4e2a\u53ef\u4ee3\u66ff\u7684\u51fa\u53e3\uff0c\u5f53\u5b83\u65e0\u6cd5\u6b63\u5e38\u7684\u5b8c\u6210\u5b83\u7684\u4efb\u52a1\u7684\u65f6\u5019\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5b83\u5e76\u4e0d\u4f1a\u8fd4\u56de\u4e00\u4e2a<code>expectation value</code>\uff0c\u800c\u662f\u4f1a<code>throws</code>\u4e00\u4e2a\u5bf9\u8c61-&gt;\u5c06\u9519\u8bef\u7684\u4fe1\u606f\u5c01\u88c5\u7684<code>object</code>. \u5f53<code>throws</code>\u4e86\u4e00\u4e2a\u9519\u8bef\u7684\u5bf9\u8c61\u7684\u65f6\u5019\uff0c\u4e0d\u4f1a\u91cd\u65b0\u5f00\u59cb\u7a0b\u5e8f\uff0c\u4f46\u8fd9\u65f6\u5019<code>expection handling</code>\u4f1a\u5bfb\u627e\u53ef\u4ee5\u89e3\u51b3\u8fd9\u4e2a<code>object</code>\u7684<code>exception handler</code>.</p>"},{"location":"Tutorial/Java/Java7/#throwable-class","title":"Throwable Class","text":"<p>\u4e8b\u5b9e\u4e0a\uff0c\u6211\u4eec\u629b\u51fa\u7684<code>exception</code>\u5bf9\u8c61\u662f\u4e00\u4e2a\u6765\u81ea\u4e8e<code>Throwable</code>\u7c7b\u7684\u5b9e\u4f8b </p> <p>\u4e0a\u9762\u7684\u7c7b\u5206\u6210\u4e86\u4e24\u90e8\u5206\uff0c\u6211\u4eec\u91cd\u70b9\u8003\u8651\u7684\u662f<code>Exception</code>\uff0c\u9996\u5148\uff0c\u8fd9\u91cc\u7684<code>Error</code>\u5176\u5b9e\u5927\u6982\u7387\u662f\u4e0d\u7528\u8003\u8651\u7684\uff0c\u5b83\u66f4\u591a\u662f\u6765\u81ea\u5185\u5728\u7684\u9519\u8bef\uff0c\u4ea6\u6216\u8005\u8bf4\u662f\u6765\u81ea<code>Java runtime System</code>\u4e2d\u7684\u9519\u8bef\u3002\u800c<code>Exception</code>\u4e2d\u7684<code>RuntimeException</code>\u624d\u662f\u6211\u4eec\u771f\u6b63\u5e73\u65f6\u7f16\u7801\u65f6\u5019\u53d1\u751f\u7684\u9519\u8bef\u3002 \u5bf9\u4e8e<code>RuntimeException</code>\u53d1\u751f\u7684\u4e00\u4e9b\u5e38\u89c1\u7684\u9519\u8bef\uff1a</p> <ul> <li>A bad cast \u7c7b\u578b\u8f6c\u5316\u9519\u8bef</li> <li>An out-of-bounds array access \u6570\u7ec4\u8fb9\u754c\u8d8a\u754c</li> <li>A null pointer acess \u83b7\u53d6\u4e86\u4e00\u4e2a<code>null</code>\u5bf9\u8c61 \u800c <code>FileCoundNOTFind</code>\u8fd9\u79cd\u9519\u8bef\u5e76\u4e0d\u662f\u53d1\u751f\u5728\u4f60\u4ee3\u7801\u4e0a\u7684\u903b\u8f91/\u8bed\u6cd5\u9519\u8bef\uff0c\u800c\u662f\u5728\u5c1d\u8bd5\u6253\u5f00\u6587\u4ef6\u7684\u65f6\u5019\u5c31\u5df2\u7ecf\u53d1\u751f\u9519\u8bef\u4e86\u3002</li> </ul>"},{"location":"Tutorial/Java/Java7/#checked-or-unchecked","title":"checked or unchecked","text":"<p>\u6211\u4eec\u8fd9\u91cc\u8003\u8651<code>checked</code>\u7684\u542b\u4e49\uff0c\u5b83\u8868\u793a\u7684\u662f\u5728\u7a0b\u5e8f\u7f16\u8bd1\u8fd0\u884c\u524d\u5c31\u9700\u8981\u8fdb\u884c\u7684\u68c0\u67e5\uff0c\u5b98\u65b9\u7684\u5b9a\u4e49\u662f\uff1a</p> <p>The Java Language Specification calls any exception that derives from the class <code>Error</code> or the class <code>RuntimeException</code> an <code>unchecked</code> exception.All other exceptions are called <code>checked</code> exceptions.</p> <p>\u5f88\u660e\u663e\uff0c\u4f60\u5728\u8fd0\u884cJava\u4ee3\u7801\u4e4b\u524d\uff0c\u4f60\u5e76\u4e0d\u77e5\u9053\u4f60\u4f1a\u9047\u5230\u4ec0\u4e48\u9519\u8bef\uff0c\u8fd9\u4e2a\u662f\u65e0\u6cd5\u88ab<code>checked</code>.\u4f46\u6709\u4e9b\u9519\u8bef\uff0c\u7c7b\u4f3c\u4e8eIO/\u6587\u4ef6\u8bfb\u5165...\u7b49\u9519\u8bef\u662f\u9700\u8981\u5728\u7f16\u8bd1\u524d\u5c31\u53d1\u73b0\u7684\uff0c\u5e76\u4e0d\u662f\u4ee3\u7801\u672c\u8eab\u7684\u903b\u8f91\u53d1\u751f\u7684\u9519\u8bef\uff0c\u8fd9\u4e9b\u9519\u8bef\u662f\u8981<code>checked</code>.</p>"},{"location":"Tutorial/Java/Java7/#declaring-checked-exception","title":"Declaring Checked Exception","text":"<p>The idea is that : a method will not only tell the Java compiler what values it can return, It is also going to tell the compiler what can go wrong. \u63d0\u524d\u544a\u8bc9Java\u53ef\u80fd\u51fa\u9519\u7684\u5730\u65b9\u3002</p> <p><pre><code>public FileInputStream(String name) throws FileNotFoundException;\n</code></pre> \u4e0a\u9762\u8fd9\u4e2a\u4f8b\u5b50\u5c31\u662f\u63d0\u793a\u4e86\u7f16\u8bd1\u5668\uff0c\u6211\u4eec\u4f1a\u5bf9\u6587\u4ef6\u8fdb\u884c\u64cd\u4f5c\uff0c\u53ef\u80fd\u4f1a\u53d1\u751f\u6240\u9700\u8981\u8bfb\u53d6\u7684\u6587\u4ef6\u4e0d\u5b58\u5728\u7684\u9519\u8bef\u3002-&gt; Tell the compiler what can go wrong.</p> <p> \u4ee5\u4e0a\u5c31\u662f\u53ef\u80fd\u51fa\u73b0\u7684\u56db\u79cd\u60c5\u51b5\uff0c\u6211\u4eec\u9700\u8981\u7262\u8bb0;</p> <p>If the superclass throws no Exceptions,the subclass must not throw the Exception!</p>"},{"location":"Tutorial/Java/Java7/#catch-the-exception","title":"Catch the Exception","text":"<ul> <li>If any Exception happened in the <code>try</code> block</li> <li>skip the remainder code in the <code>try</code> block and do the <code>catch</code> clause</li> <li>If no exception -&gt;skip</li> </ul> <p>You can catch more than one Exception in the <code>catch</code> clause. <pre><code>try{\n    //access the database\n}catch(SQLException original){\n    throw new ServletException(\"database error: \"+e.getMessage());\n}catch(FileCoundNotFoundException e){\n    System.out.print(e);\n}\n</code></pre></p> <p>\u4e0a\u9762\u663e\u793a\u4e86\u53ef\u4ee5<code>catch</code>\u591a\u4e2a<code>Exceptions</code>; \u4e5f\u53ef\u4ee5<code>rethrow</code>;</p>"},{"location":"Tutorial/Java/Java7/#the-finally-clause","title":"The finally Clause","text":"<p>\u9996\u5148\uff0c\u6211\u4eec\u77e5\u9053\u5f53\u9047\u5230<code>Exception</code>\u7684\u65f6\u5019\uff0c\u6211\u4eec\u4f1a\u505c\u6b62\u8fd9\u4e2a<code>method</code>\u4e2d\u7684\u8fdb\u7a0b\uff0c\u7136\u540e\u9000\u51fa\u8fd9\u4e2a\u65b9\u6cd5\u3002\u4f46\u8fd9\u91cc\u6709\u4e2a\u95ee\u9898\uff0c\u5982\u679c\u4f60\u5728<code>method</code>\u4e2d\u8fdb\u884c\u4e86\u8d44\u6e90\u7684\u83b7\u53d6\uff0c\u4f46\u4f60\u9000\u51fa\u8fd9\u4e2a\u4ee3\u7801\u7684\u65f6\u5019\uff0c\u9700\u8981\u628a\u8fd9\u4e9b\u8d44\u6e90\u7ed9\u91ca\u653e\u6389\uff0c\u4f46\u662f\u53ea\u6709\u4f60\u5728\u539f\u6765\u7684\u65b9\u6cd5\u4e2d\u624d\u77e5\u9053\u8fd9\u4e9b\u3002\u8fd9\u6837<code>finally</code>\u5b50\u53e5\u7684\u76ee\u7684\u5c31\u662f\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002</p> <pre><code>var in = new FileInputStream(...);\ntry{\n    //1\n}catch(Exception e){//2\n //3\n\n}finally{//4\n    // remember to close the FileInputStream;\n    in.close(); //5\n}\n</code></pre> <p>\u50cf\u4e0a\u8ff0\u7684\uff0c\u5018\u82e5\u6ca1\u6709\u9047\u5230\u95ee\u9898\uff0c\u5728\u5b8c\u6210<code>try clause</code>\u4e2d\u7684\u5185\u5bb9\u7684\u65f6\u5019\uff0c\u4f1a\u81ea\u52a8\u8df3\u8fc7<code>2,3</code>\u7684\u90e8\u5206\uff0c\u76f4\u63a5\u5b8c\u6210<code>finally</code>\u90e8\u5206\u7684\u5185\u5bb9\u3002\u4e5f\u5c31\u662f\u7ed3\u675f\u8d44\u6e90\u3002 </p> <p>Whether it encounters the <code>Exception</code> -&gt; we all need to execute the <code>finally</code> clause.</p>"},{"location":"Tutorial/Java/Java7/#try-with-resource-satement","title":"try-with-resource satement","text":"<p>\u8fd9\u4e2a\u8bed\u53e5\u662f\u7528\u4e8e\u81ea\u52a8\u7ba1\u7406\u8d44\u6e90\uff08\u6587\u4ef6/\u6570\u636e\u5e93\u8fde\u63a5\u7b49\uff09\u7684\u7ed3\u6784</p> <p>\u4f7f\u7528 <code>try-with-resource</code>\u8bed\u53e5\uff0c\u53ef\u4ee5\u786e\u4fdd\u5728\u8bed\u53e5\u7ed3\u675f\u7684\u65f6\u5019\u81ea\u52a8\u5173\u95ed\u8d44\u6e90\uff0c\u907f\u514d\u8d44\u6e90\u6cc4\u6f0f\u3002</p> <p><pre><code>import java.io.BufferedReader;\nimport java.io.FileReader;\nimport java.io.IOException;\n\npublic class TryWithResourcesExample {\n    public static void main(String[] args) {\n        try (BufferedReader reader = new BufferedReader(new FileReader(\"example.txt\"))) {\n            String line;\n            while ((line = reader.readLine()) != null) {\n                System.out.println(line);\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}\n\n\n// pattern\ntry(ResourceType resource = new ResourceType()){\n    // \u4f7f\u7528\u8d44\u6e90\u7684\u4ee3\u7801\n}catch(Exception e){\n    // \u5f02\u5e38\u5904\u7406\uff1b\n}\n</code></pre> \u4ee5\u4e00\u8a00\u9274\u4e4b\uff0c\u4e5f\u5c31\u662f\u5728\u4f7f\u7528<code>try</code>\u8bed\u53e5\u7684\u65f6\u5019\u6211\u4eec\u8c03\u7528\u4e86\u83b7\u53d6\u8d44\u6e90\u7684\u8bed\u53e5\uff0c\u5c24\u5176\u662f\u4e00\u4e9b\u8fdb\u884c\u9700\u8981\u663e\u6027\u5173\u95ed\u8d44\u6e90\u7684\u8bed\u53e5\uff0c\u53ef\u4ee5\u8fdb\u884c\u81ea\u52a8\u7684\u8d44\u6e90\u7ba1\u7406\u3002\u65e0\u8bba\u4f1a\u4e0d\u4f1a\u5b8c\u6210\u540e\u7eed\u7684<code>catch</code>,\u90fd\u4f1a\u76f4\u63a5\u7684\u5b8c\u6210<code>close()</code></p>"},{"location":"Tutorial/Java/Java8/","title":"Chapter8 Generic Programming","text":"<p>Why Generic Programming?</p> <p>It means writing code that can be reused for objects of many different types; </p> <p>\u6cdb\u578b\u7f16\u7a0b \u76ee\u7684\u662f\u8ba9\u4ee3\u7801\u53ef\u4ee5\u5177\u6709\u9ad8\u590d\u7528\u6027</p>"},{"location":"Tutorial/Java/Java8/#81-introduce","title":"8.1 Introduce","text":""},{"location":"Tutorial/Java/Java8/#_1","title":"\u4f8b\u5b50","text":"<p><pre><code>public class ArrayList{\n    private Object[] elementData;\n    ...\n    public Object get(int i);\n    public void add(Objct o);\n}\n\n// If we want to use the ArrayList;\nArrayList files = new ArrayList();\nString filename = (String)files.get(0);\nfiles.add(new File(\"...\"));\n\n\n// But with Generic Programming\nvar files = new ArrayList&lt;String&gt;();\n\n// Another way to write;\nArrayList&lt;String&gt; files = new ArrayList&lt;&gt;();\n</code></pre> View the above Code block, that you will see the advantages of Generic Programming:</p> <ol> <li>You can make your code read easier;</li> <li>You can tell right away that this particular array List contains <code>String</code> objects;</li> </ol>"},{"location":"Tutorial/Java/Java8/#82-definite-a-simple-generic-class","title":"8.2 definite a simple generic class","text":"<p>Here is the example code: <pre><code>public class Pair&lt;T&gt;\n{\n private T first;\n private T second;\n\n public Pair() { first = null; second = null; }\n public Pair(T first, T second) { this.first = first; this.second = second; }\n\n public T getFirst() { return first; }\n public T getSecond() { return second; }\n\n public void setFirst(T newValue) { first = newValue; }\n public void setSecond(T newValue) { second = newValue; }\n}\n</code></pre> The <code>Pair</code> class introduces a type variable <code>T</code>, enclosed in angle bracket<code>&lt;&gt;</code>,after the class name. It also allows you to put more than one type name in the bracket. Like :  <code>public class Pair&lt;T,U&gt;{...}</code></p>"},{"location":"Tutorial/Java/Java8/#83-generic-methods","title":"8.3 Generic Methods","text":"<p>You can define generic methods both inside ordinary classes and inside generic classes.</p> <pre><code>class ArrayAlg{\n    public static &lt;T&gt; getMiddle(T .. a){\n        return a[a.length/2];\n    }\n}\n\n// Option 1\nString middle = ArrayAlg.&lt;String&gt;getMiddle(\"John\",\"Q.\",\"Public\");\n\n// Option 2\nString middle = ArrayAlg.getMiddle(\"John\",\"Q.\",\"Public\");\n</code></pre> <p>The above code block is the example</p>"},{"location":"Tutorial/Java/Java8/#84-bounds-for-type-variables","title":"8.4 Bounds for type variables","text":"<p>When you achieve the generic methods with like <code>comparable</code> part, you must give a <code>bound</code> for the type variable <code>T</code>.</p> <pre><code>class ArrayAlg\n{\n    public static &lt;T&gt; T min(T[] a) // almost correct\n    {\n        if (a == null || a.length == 0) \n            return null;\n        T smallest = a[0];\n        for (int i = 1; i &lt; a.length; i++)\n            if (smallest.compareTo(a[i]) &gt; 0) \n                smallest = a[i];\n        return smallest;\n    }\n}\n\n// The above part has a bug that you must define the method like the following\n    public static &lt;T extends Comparable&gt; T min(T[] a);\n// We use an interface to let the type T's params can have the ability to comparable;\n</code></pre>"},{"location":"Tutorial/Java/Java8/#85-generic-code-and-the-virtual-machine","title":"8.5 Generic Code and the virtual machine","text":""},{"location":"Tutorial/Java/Java8/#851-type-erasure","title":"8.5.1 Type Erasure","text":"<p>If the type <code>T</code> has no bounds that it raw type can be the <code>Object</code>. <pre><code>public class Pair\n{\n    private Object first;\n    private Object second;\n    public Pair(Object first, Object second)\n    {\n        this.first = first;\n        this.second = second;\n    }\n    public Object getFirst() { return first; }\n    public Object getSecond() { return second; }\n    public void setFirst(Object newValue) { first = newValue; }\n    public void setSecond(Object newValue) { second = newValue; }\n}\n\n// If we extends the interfaces, the raw type will be interfaces\npublic class Interval&lt;T extends Comparable &amp; Serializable&gt; implements Serializable\n{\n    private T lower;\n    private T upper;\n    . . .\n    public Interval(T first, T second)\n    {\n        if (first.compareTo(second) &lt;= 0){ \n        lower = first; \n        upper = second; \n        }else { \n        lower = second; \n        upper = first; \n        }\n    }\n}\n\npublic class Interval implements Serializable\n{\n private Comparable lower;\n private Comparable upper;\n . . .\n public Interval(Comparable first, Comparable second) { . . . }\n}\n</code></pre> \u6cdb\u578b\u65b9\u6cd5\u5728\u7f16\u8bd1\u524d\u540e\uff0c\u53ea\u4f1a\u7559\u4e0b\u4e00\u4e2a\u65b9\u6cd5\uff0c\u7c7b\u578b\u7528<code>Object</code>\u6216\u8005 <code>Comparable</code> \u8fb9\u754c\u7c7b\u578b\u66ff\u6362\uff0c\u4f46\u662f\u8fd9\u6837\u5c31\u4f1a\u5bfc\u81f4\u4e00\u4e9b\u5f71\u54cd:</p> <ol> <li>\u7c7b\u578b\u64e6\u9664\u540e\uff0c\u8303\u578b\u4fe1\u606f\u4f1a\u5728\u5b57\u8282\u7801\u79cd\u4e22\u5931 (\u56e0\u4e3a\u865a\u62df\u673a\u4e2d\u6ca1\u6709\u6cdb\u578b\u8fd9\u4e2a\u6982\u5ff5)</li> <li>\u6240\u6709\u6cdb\u578b\u76f8\u5173\u7684\u64cd\u4f5c\u53ea\u80fd\u4f9d\u8d56\u8fd0\u884c\u65f6\u5019\u7684\u7c7b\u578b\u4fe1\u606f</li> </ol>"},{"location":"Tutorial/Java/Java8/#with-bridge-methods","title":"\u6cdb\u578b\u7c7b\u578b\u64e6\u9664\u4e0e\u65b9\u6cd5\u51b2\u7a81 (with Bridge Methods)","text":"<p>\u4ec0\u4e48\u662f\u6cdb\u578b\u7c7b\u578b\u64e6\u9664\u65f6\u5019\u7684\u65b9\u6cd5\u51b2\u7a81\uff1f</p> <p><code>public void setSecond(LocalData second)</code>  \u5728\u7c7b<code>DataInterval</code>\u4e2d\u53ea\u6709\u4e00\u4e2a\u65b9\u6cd5\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u662f\u4ece<code>Pair&lt;LocalData&gt;</code> \u4e2d\u7ee7\u627f\u7684\uff0c\u4f46\u6211\u4eec\u6709\u989d\u5916\u7684\u58f0\u660e\uff0c\u90a3\u5c31\u662f \u8fd9\u4e2a\u65b9\u6cd5\u7684\u4f5c\u7528\u662f\u4e3a\u5bf9\u8c61\u8bbe\u7f6e\u7b2c\u4e8c\u4e2a\u65e5\u671f\u503c\uff0c\u540c\u65f6\u786e\u4fdd\u7b2c\u4e8c\u4e2a\u4e0d\u5c0f\u4e8e\u7b2c\u4e00\u4e2a\u503c\uff0c\u4f46\u662f\u5728\u7c7b\u578b\u7684\u64e6\u9664\u7684\u65f6\u5019\uff0c\u65b9\u6cd5\u4f1a\u53d1\u751f\u6cdb\u578b\u51b2\u7a81\u3002</p> <p><code>public void setSecone(Object second)</code>.\u56e0\u6b64\uff0c\u5728\u7c7b\u578b\u64e6\u9664\u540e\uff0c<code>DateInterval</code> \u7c7b\u4f1a\u6709\u4e24\u4e2a <code>setSecond</code> \u65b9\u6cd5\uff1a</p> <ul> <li>\u4e00\u4e2a\u662f\u5b50\u7c7b\u4e2d\u5b9a\u4e49\u7684\uff1a<code>public void setSecond(LocalDate second)</code></li> <li>\u4e00\u4e2a\u662f\u4ece\u7236\u7c7b\u4e2d\u7ee7\u627f\u7684\uff1a<code>public void setSecond(Object second)</code></li> </ul> <p>\u8fd9\u91cc\u4ecb\u7ecd\u4e00\u4e0b <code>Bridge Methods</code> \u6865\u63a5\u65b9\u6cd5 \u4e3a\u4e86\u89e3\u51b3\u4e0a\u8ff0\u56e0\u4e3a\u6cdb\u578b\u64e6\u51fa\u8fc7\u540e\u4ea7\u751f\u7684\u591a\u6001\u95ee\u9898\uff0c\u7f16\u8bd1\u5668\u4f1a\u751f\u6210\u4e00\u4e2a<code>\u6865\u63a5\u65b9\u6cd5</code> <pre><code>public void setSecond(Object second) {\n    setSecond((LocalDate) second);\n}\n\nPair&lt;LocalDate&gt; pair = new DateInterval();\npair.setSecond(aDate);\n</code></pre> - \u7531\u4e8e <code>pair</code> \u662f <code>Pair&lt;LocalDate&gt;</code> \u7c7b\u578b\uff0c\u56e0\u6b64\u8c03\u7528\u7684\u662f <code>setSecond(Object)</code> \u65b9\u6cd5\u3002 - \u4f46\u5b9e\u9645\u8fd0\u884c\u65f6\uff0c<code>pair</code> \u5f15\u7528\u7684\u662f <code>DateInterval</code> \u5bf9\u8c61\u3002 - \u865a\u62df\u673a\u4f1a\u8c03\u7528 <code>DateInterval.setSecond(Object)</code>\uff0c\u5373\u6865\u63a5\u65b9\u6cd5\u3002 - \u6865\u63a5\u65b9\u6cd5\u5185\u90e8\u4f1a\u5c06 <code>Object</code>\u53c2\u6570\u5f3a\u5236\u8f6c\u6362\u4e3a <code>LocalDate</code>\uff0c\u5e76\u8c03\u7528\u771f\u6b63\u7684 <code>DateInterval.setSecond(LocalDate)</code> \u65b9\u6cd5\u3002</p> <p>Summary : </p> <ol> <li>\u6cdb\u578b\u5728\u865a\u62df\u673a\u4e2d\u4e0d\u5b58\u5728\uff0c\u6cdb\u578b\u53ea\u662f\u7f16\u8bd1\u5668\u7684\u4e00\u4e2a\u8bed\u6cd5\u7cd6</li> <li>\u7c7b\u578b\u53c2\u6570\u4f1a\u88ab\u8fb9\u754c\u53c2\u6570\u66ff\u4ee3</li> <li>\u6865\u63a5\u65b9\u6cd5\u6765\u89e3\u51b3\u51b2\u7a81\u7684\u95ee\u9898</li> </ol>"},{"location":"Tutorial/Java/Java8/#syntactic-sugar","title":"Syntactic Sugar \u8bed\u6cd5\u7cd6","text":"<p>Here is the wiki reference: In computer science, syntactic sugar is syntax within a programming language that is designed to make things easier to read or to express. It makes the language \"sweeter\" for human use: things can be expressed more clearly, more concisely, or in an alternative style that some may prefer. Syntactic sugar is usually a shorthand for a common operation that could also be expressed in an alternate, more verbose, form: The programmer has a choice of whether to use the shorter form or the longer form, but will usually use the shorter form since it is shorter and easier to type and read.</p> <p>For example, many programming languages provide special syntax for referencing and updating array elements. Abstractly, an array reference is a procedure of two arguments: an array and a subscript vector, which could be expressed as <code>get_array(Array, vector(i,j))</code>. Instead, many languages provide syntax such as <code>Array[i,j]</code>. Similarly an array element update is a procedure consisting of three arguments, for example <code>set_array(Array, vector(i,j), value)</code>, but many languages also provide syntax such as <code>Array[i,j] = value</code>.</p> <p>A construct in a language is syntactic sugar if it can be removed from the language without any effect on what the language can do: functionality and expressive power will remain the same.</p> <p>Language processors, including compilers and static analyzers, often expand sugared constructs into their more verbose equivalents before processing, a process sometimes called \"desugaring\".</p> <p>\u7b80\u800c\u8a00\u4e4b\uff0c\u5c31\u662f\u8bed\u6cd5\u7cd6\u662f\u7f16\u8bd1\u8bed\u8a00\u65b0\u589e\u7684\u7279\u6027\uff0c\u6307\u7684\u662f\u4e00\u4e9b\u5bf9\u5f00\u53d1\u8005\u66f4\u52a0\u53cb\u597d\u3001\u66f4\u6613\u4e8e\u4e66\u5199\u6216\u7406\u89e3\u7684\u8bed\u6cd5\uff0c\u4e0d\u4f1a\u589e\u52a0\u8bed\u8a00\u672c\u8eab\u7684\u529f\u80fd\uff0c\u8fd9\u4e9b\u8bed\u6cd5\u7279\u6027\u5728\u7f16\u8bd1\u6216\u8fd0\u884c\u7684\u65f6\u5019\u7edf\u7edf\u4f1a\u5457\u8f6c\u5316\u4e3a\u66f4\u52a0\u5e95\u5c42\u7684\u3001\u66f4\u57fa\u7840\u7684\u8bed\u8a00\u7ed3\u6784\u3002 \u4ee5\u4e00\u8a00\u853d\u4e4b\uff0c\u8bed\u6cd5\u7cd6\uff0c\u5c31\u662f\u8ba9\u4ee3\u7801\u66f4\u52a0\u4f18\u96c5\uff0c\u66f4\u7b80\u4fbf\u7684\u5c01\u88c5\u3002</p> <p>\u4e0a\u9762\u6cdb\u578b\u7684\u4f8b\u5b50\u5176\u5b9e\u5c31\u662f\uff0c\u5728Java\u7684\u865a\u62df\u673a\u4e2d\u4e0d\u5b58\u5728\u6cdb\u578b\uff0c\u53ea\u5b58\u5728\u666e\u901a\u7684\u7c7b\u548c\u65b9\u6cd5\uff0c\u56e0\u6b64\u8fd9\u4e2a\u6cdb\u578b\u5c31\u53d8\u6210\u4e86\u5bf9\u4e8e\u5f00\u53d1\u8005\u66f4\u53cb\u597d\u7684\u4e00\u79cdJava\u7684\u7279\u6027\uff0c\u4ec5\u6b64\u800c\u5df2\u3002</p>"},{"location":"Tutorial/Java/Java8/#86-restrictions-and-limitations","title":"8.6 Restrictions and Limitations","text":"<ol> <li> <p>Type parameters cannot be instantiated with <code>primitive types</code>, only can be used <code>wrapper types</code>.</p> <ol> <li><code>Pair&lt;Double&gt;</code> \u4e0d\u80fd\u88ab\u5199\u6210<code>Pair&lt;double&gt;</code> </li> </ol> </li> <li> <p>Runtime type inquiry only works with raw type</p> </li> <li> <p>You cannot Create Arrays of Parameterized Types</p> <p>What you can do, is to used the <code>ArrayList</code> to replace the <code>Array</code>.</p> </li> <li> <p>Varargs Warnings</p> </li> <li>Type Variables are not Valid in StaticContexts of Generic Classes</li> </ol> <p>... \u8fd8\u6709\u5f88\u591a\u9650\u5236 \u5c31\u4e0d\u4e00\u4e00\u7f57\u5217\u4e86</p>"},{"location":"Tutorial/Java/Java8/#87-inheritance-rules-for-generic-types","title":"8.7 Inheritance Rules for Generic Types","text":"<p>In general, there is no relationship between <code>Pair&lt;S&gt;</code> and <code>Pair&lt;T&gt;</code>, no matter how <code>S</code> and <code>T</code> are related.</p> <p>The following is an illegal code: <pre><code>Manager[] topHonchos = ... ;\nPair&lt;Employee&gt; result = ArrayAlg.minmax(topHonchos); // error\n</code></pre></p> <p>The <code>minmax</code> returns a <code>Pair&lt;Manager&gt;</code>, not a <code>Pair&lt;Employee&gt;</code> </p>"},{"location":"Tutorial/Java/Java8/#88-wildcard-types","title":"8.8 Wildcard Types \u901a\u914d\u7b26\u7c7b\u578b","text":"<p>\u5728 Java \u4e2d\uff0c\u901a\u914d\u7b26\u7c7b\u578b<code>\uff08Wildcard Types\uff09</code> \u662f\u6cdb\u578b\u7684\u4e00\u90e8\u5206\uff0c\u7528\u4e8e\u63d0\u9ad8\u6cdb\u578b\u7684\u7075\u6d3b\u6027\u3002\u901a\u914d\u7b26\u7684\u4f5c\u7528\u662f\u5bf9\u6cdb\u578b\u7684\u7c7b\u578b\u53c2\u6570\u8fdb\u884c\u4e00\u5b9a\u7a0b\u5ea6\u7684\u201c\u6a21\u7cca\u5339\u914d\u201d\uff0c\u4ee5\u9002\u5e94\u66f4\u591a\u7684\u573a\u666f\u3002\u4ee5\u4e0b\u662f\u5bf9\u901a\u914d\u7b26\u7c7b\u578b\u7684\u8be6\u7ec6\u4ecb\u7ecd\uff1a </p>"},{"location":"Tutorial/Java/Java8/#_2","title":"\u901a\u914d\u7b26\u7684\u5206\u7c7b","text":""},{"location":"Tutorial/Java/Java8/#_3","title":"\u65e0\u754c\u901a\u914d\u7b26 <code>?</code>","text":"<p>\u8868\u793a\u7684\u662f\u4efb\u610f\u7c7b\u578b\uff0c\u6ca1\u6709\u9650\u5236\uff0c\u5c24\u5176\u662f\u4f60\u53ea\u5173\u7cfb\u5176\u6570\u636e\uff0c\u800c\u4e0d\u662f\u7c7b\u578b\u7684\u65f6\u5019,\u53ea\u9700\u8981\u8bfb\u53d6\u6570\u636e\uff0c\u800c\u4e0d\u662f\u5f80\u96c6\u5408\u4e2d\u5199\u5165\u6570\u636e\u3002 <pre><code>public void printList(List&lt;?&gt; list){\n    for(Object obj : list){\n        System.out.println(obj);\n    }\n}\n</code></pre></p>"},{"location":"Tutorial/Java/Java8/#_4","title":"\u6709\u754c\u901a\u914d\u7b26","text":""},{"location":"Tutorial/Java/Java8/#extends-t","title":"\u4e0a\u754c\u901a\u914d\u7b26 <code>? extends T</code>","text":"<p>\u8868\u793a\u7684\u662f\u901a\u914d\u7b26\u662f\u67d0\u4e2a\u7c7b\u578b<code>T</code>\u7684\u5b50\u7c7b\uff08\u5305\u62ec<code>T</code>\u672c\u8eab\uff09</p> <pre><code>public void processNUmbers(List&lt;? extends Number&gt; list){\n    for(Number number : list){\n        System.out.println(number.doubleValue());\n    }\n}\n</code></pre> <ul> <li><code>List&lt;? extends Number&gt;</code>\u8868\u793a\u53ef\u4ee5\u63a5\u53d7 <code>List</code> \u7684\u6cdb\u578b\u7c7b\u578b\u4e3a <code>Number</code> \u6216 <code>Number</code> \u7684\u5b50\u7c7b\uff0c\u4f8b\u5982 <code>List&lt;Integer&gt;</code> \u6216 <code>List&lt;Double&gt;</code>\u3002</li> <li>\u8bfb\u53d6\uff1a \u53ef\u4ee5\u5b89\u5168\u5730\u8bfb\u53d6\u6570\u636e\uff0c\u7c7b\u578b\u4fdd\u8bc1\u662f <code>Number</code> \u6216\u5176\u5b50\u7c7b\u3002</li> <li>\u5199\u5165\uff1a \u4e0d\u80fd\u5b89\u5168\u5730\u5199\u5165\uff0c\u9664\u4e86 <code>null</code>\u3002</li> </ul>"},{"location":"Tutorial/Java/Java8/#super-t","title":"\u4e0b\u754c\u901a\u914d\u7b26  &lt;? super T&gt;","text":"<p>\u8868\u793a\u7684\u662f\u67d0\u4e2a\u7c7b\u578b<code>T</code>\u7684\u7236\u7c7b\uff0c(\u5305\u62ec<code>T</code>\u672c\u8eab) \u548c\u4e0a\u8ff0\u540c\u7406\uff0c\u4e0d\u518d\u8d58\u8ff0\u3002</p> <p>\u5728\u4e0a\u9762\u4ecb\u7ecd\u4e86\u51e0\u79cd\u901a\u914d\u7b26\uff0c\u5f88\u81ea\u7136\u7684\u5c31\u77e5\u9053\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u4e0a\u754c\u901a\u914d\u7b26\u7528\u4e8e\u53ea\u8bfb\u7684\u64cd\u4f5c\uff0c\u800c\u5bf9\u4e8e\u4e0b\u754c\u901a\u914d\u7b26\u7684\u65f6\u5019\uff0c\u8fdb\u884c\u53ea\u5199\u7684\u64cd\u4f5c\uff08\u4e0b\u754c\u901a\u914d\u7b26\u4fdd\u8bc1\u4e86\u5199\u5165\u7684\u7c7b\u578b\u4e00\u5b9a\u662f\u672c\u8eab\u6216\u8005\u7236\u7c7b\u7684\u60c5\u51b5\uff09\u3002</p>"},{"location":"Tutorial/Java/Java8/#89-reflection-and-generics","title":"8.9 Reflection and Generics","text":"<p>Reflection lets you anaylyze arbitrary objects at runtime, but if the objects are instances of generic classes, you don't get much information about the generic type parameters because they have been erased.</p>"},{"location":"Tutorial/Java/Java8/#_5","title":"\u53cd\u5c04\u5982\u4f55\u83b7\u5f97\u6cdb\u578b\u7684\u4fe1\u606f","text":""},{"location":"Tutorial/Java/Java8/#1","title":"1. \u83b7\u53d6\u7c7b\u7684\u6cdb\u578b\u4fe1\u606f","text":"<p>\u53ef\u4ee5\u901a\u8fc7\u53cd\u5c04\u4e2d\u7684 <code>Type</code> \u548c <code>ParameterizedType</code>\u63a5\u53e3\u6765\u83b7\u53d6\u6cdb\u578b\u7684\u5177\u4f53\u7c7b\u578b</p>"},{"location":"Tutorial/Java/Java8/#2","title":"2. \u53ef\u4ee5\u83b7\u53d6\u5b57\u6bb5\u7684\u6cdb\u578b\u7c7b\u578b","text":""},{"location":"Tutorial/Java/Java8/#3","title":"3. \u53ef\u4ee5\u83b7\u53d6\u65b9\u6cd5\u7684\u6cdb\u578b\u4fe1\u606f","text":"<p>\u53ef\u4ee5\u901a\u8fc7\u53cd\u5c04\u83b7\u53d6\u65b9\u6cd5\u7684\u8fd4\u56de\u503c\u3001\u53c2\u6570\u6216\u58f0\u660e\u7684\u6cdb\u578b\u7c7b\u578b</p>"},{"location":"Tutorial/Java/Java9/","title":"Chapter9 Collections","text":"<p>\u96c6\u5408\u7c7b \uff1a\u611f\u89c9\u6709\u70b9\u50cf <code>Cpp</code> \u4e2d\u7684 <code>stl</code> \u4e0b\u9762\u662f\u5b98\u65b9\u7684\u5b9a\u4e49 \uff1a</p> <p>The java library can help you accomplish the traditional data structuring needed for serious programming. \u5176\u5b9e\u5c31\u662f\u4e00\u4e2a\u5e93\u65b9\u4fbf\u6211\u4eec\u6765\u8c03\u7528\u4f20\u7edf\u7684\u6570\u636e\u7ed3\u6784\u3002 </p>"},{"location":"Tutorial/Java/Java9/#introduce","title":"Introduce","text":"<p>\u6211\u4eec\u8fd9\u91cc\u533a\u5206\u4e24\u4e2a\u6982\u5ff5 <code>Collection</code> \u548c <code>Collections</code></p> <ul> <li><code>Collection</code> : \u8868\u793a\u7684\u662fJava\u96c6\u5408\u6846\u67b6\u7684\u4e00\u4e2a\u63a5\u53e3\uff0c\u5b83\u662f\u6240\u6709\u96c6\u5408\u7c7b\u7684\u57fa\u7840\u63a5\u53e3\u3002\u5b83\u5b9a\u4e49\u4e86\u4e00\u7ec4\u901a\u7528\u7684\u64cd\u4f5c\u548c\u65b9\u6cd5\uff0c\u5982\u6dfb\u52a0\u3001\u5220\u9664\u3001\u904d\u5386\u7b49\uff0c\u7528\u4e8e\u7ba1\u7406\u4e00\u7ec4\u5bf9\u8c61\u3002<code>Collection</code> \u63a5\u53e3\u6709\u8bb8\u591a<code>Implementations</code> \u5982 <code>List</code>,<code>Set</code>\u548c<code>Queue</code>.</li> <li><code>Collections</code> : \u8868\u793a\u7684\u662fJava\u63d0\u4f9b\u7684\u4e00\u4e2a\u5de5\u5177\u7c7b\uff0c\u4f4d\u4e8e<code>java.util</code>\u5305\u4e2d\u3002\u5b83\u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217\u7684\u9759\u6001\u65b9\u6cd5\uff0c\u7528\u4e8e\u5bf9\u96c6\u5408\u8fdb\u884c\u64cd\u4f5c\u548c\u7b97\u6cd5\u3002<code>Collections</code>\u4e2d\u5305\u542b\u7684\u5305\u62ec<code>Sorting</code>,<code>Search</code>,<code>Reverse</code>...\u7b49\u7b97\u6cd5\uff0c\u8fd9\u4e9b\u65b9\u6cd5\u7b49\u5b9e\u73b0\u4e86<code>Collection</code>\u63a5\u53e3\u96c6\u5408\u7684\u7b97\u6cd5\u3002</li> </ul> <p>\u63a5\u7740\uff0c\u6211\u4eec\u533a\u5206\u4e24\u4e2a\u6982\u5ff5 <code>\u6570\u7ec4</code> \u548c <code>\u96c6\u5408</code>\u3002\u4e8c\u8005\u7684\u533a\u522b\uff1a</p> <ul> <li>\u6570\u7ec4\u662f\u56fa\u5b9a\u7684\u957f\u5ea6\u7684\u6570\u636e\u7ed3\u6784\uff0c\u4e00\u65e6\u521b\u5efa\u957f\u5ea6\u5c31\u65e0\u6cd5\u6539\u53d8\uff0c\u800c\u96c6\u5408\u662f\u52a8\u6001\u957f\u5ea6\u7684\u6570\u636e\u7ed3\u6784\uff0c\u53ef\u4ee5\u52a8\u6001\u7684\u8c03\u6574\u957f\u5ea6\u3002 </li> <li>\u6570\u7ec4\u53ef\u4ee5\u5305\u542b <code>primitive type</code> \u548c <code>Object</code>\uff0c\u96c6\u5408\u4e2d\u53ea\u80fd\u5305\u542b<code>Object</code>\u3002</li> <li>\u6570\u7ec4\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\u5143\u7d20\uff0c\u96c6\u5408\u9700\u8981\u901a\u8fc7\u8fed\u4ee3\u5668\u6216\u8005\u5176\u4ed6\u65b9\u6cd5\u8bbf\u95ee\u5143\u7d20\u3002</li> </ul> <p></p>"},{"location":"Tutorial/Java/Java9/#91-the-java-collections-framework","title":"9.1 The Java Collections Framework","text":""},{"location":"Tutorial/Java/Java9/#911-collection-interfaces-and-implementation","title":"9.1.1 Collection Interfaces and Implementation","text":"<p>\u533a\u5206\u63a5\u53e3\u548c\u5b9e\u73b0\u7c7b</p> <ul> <li><code>\u63a5\u53e3</code> : \u5b9a\u4e49\u4e86\u96c6\u5408\u7684\u884c\u4e3a\u548c\u64cd\u4f5c</li> <li><code>\u5b9e\u73b0\u7c7b</code> : \u63d0\u4f9b\u4e86\u63a5\u53e3\u7684\u5177\u4f53\u5b9e\u73b0\uff0c\u51b3\u5b9a\u4e86\u96c6\u5408\u7684\u5b58\u50a8\u65b9\u5f0f\u548c\u6027\u80fd</li> </ul> <p>\u6211\u4eec\u770b\u4e0a\u56fe\uff0c\u5728<code>Collection</code>\u4e0b\u9762\u7684\u90a3\u4e00\u5c42 <code>List</code> \u3001<code>Set</code> \u3001<code>Queue</code> \u3001<code>Map</code>\u5c31\u662f\u4e3a\u63a5\u53e3\u800c\u4e0b\u9762\u7684\u5185\u5bb9\u5c31\u662f\u57fa\u4e8e\u4ee5\u4e0a\u63a5\u53e3\u7684\u5177\u4f53\u5b9e\u73b0\u7c7b\u3002</p>"},{"location":"Tutorial/Java/Java9/#collection","title":"Collection","text":"<p>\u9996\u5148\u662f <code>Collection</code> \u63a5\u53e3\uff0c\u5b83\u662f\u96c6\u5408\u6846\u67b6\u7684\u9876\u5c42\u63a5\u53e3\uff0c\u5b83\u5b9a\u4e49\u4e86\u57fa\u672c\u7684\u96c6\u5408\u64cd\u4f5c</p> <ol> <li><code>add(E e)</code></li> <li><code>remove(Object o)</code></li> <li><code>iterator()</code> </li> </ol>"},{"location":"Tutorial/Java/Java9/#list","title":"List","text":"<p><code>List</code> \u662f\u6709\u5e8f\u7684Collection\uff0c\u4f7f\u7528\u6b64\u63a5\u53e3\u53ef\u4ee5\u7cbe\u51c6\u7684\u63a7\u5236\u6bcf\u4e2a\u5143\u7d20\u7684\u63d2\u5165\u4f4d\u7f6e\uff0c\u7528\u6237\u80fd\u6839\u636e\u7d22\u5f15\u8bbf\u95ee<code>List</code>\u4e2d\u7684\u5143\u7d20\uff0c\u5c5e\u4e8e<code>List</code>\u7684\u57fa\u672c\u64cd\u4f5c</p> <ul> <li><code>get(int index)</code> \u83b7\u5f97 <code>this.index = index</code> \u4f4d\u7f6e\u4e0a\u7684\u5143\u7d20</li> <li><code>add(int index, E element)</code> \u5728\u6307\u5b9a\u4f4d\u7f6e\u63d2\u5165\u5143\u7d20</li> <li><code>set(int index, E element)</code> \u66ff\u6362\u6307\u5b9a\u7d22\u5f15\u7684\u5143\u7d20</li> </ul> <p>\u5e38\u89c1\u7684 <code>List</code> \u7684\u5b9e\u73b0\u7c7b\u6709\uff1a 1. <code>ArrayList</code> 2. <code>LinkedList</code> 3. <code>Vector</code> (\u8fc7\u65f6\uff0c\u4f46\u662f\u7ebf\u7a0b\u5b89\u5168)</p>"},{"location":"Tutorial/Java/Java9/#set","title":"Set","text":"<p><code>Set</code> \u8868\u793a\u7684\u662f\u4e00\u4e2a\u65e0\u5e8f\u7684\u96c6\u5408\uff0c\u4f46\u662f\u4e0d\u5141\u8bb8\u91cd\u590d\u5143\u7d20</p> <p>\u5e38\u89c1\u7684<code>Set</code>\u7684\u5b9e\u73b0\u7c7b\u6709\uff1a</p> <ol> <li><code>HashSet</code> \u57fa\u4e8e\u54c8\u5e0c\u8868\u5b9e\u73b0</li> <li><code>LinkedHashSet</code> \u57fa\u4e8e\u54c8\u5e0c\u8868\uff0c\u7ef4\u62a4\u63d2\u5165\u987a\u5e8f</li> <li><code>TreeSet</code> \u57fa\u4e8e\u7ea2\u9ed1\u6811\uff0c\u800c\u4e14\u5143\u7d20\u6709\u5e8f</li> </ol>"},{"location":"Tutorial/Java/Java9/#map","title":"Map","text":"<p><code>Map</code> \u662f\u4e00\u4e2a\u72ec\u7acb\u7684\u63a5\u53e3\uff0c\u5e76\u4e0d\u7ee7\u627f<code>Collection</code>\u63a5\u53e3\u3002<code>Map</code>\u8868\u793a\u952e\u503c\u5bf9(KV)\u6a21\u578b\u7684\u6620\u5c04\uff0c\u5141\u8bb8\u6211\u4eec\u5b58\u50a8\u548c\u64cd\u4f5c\u57fa\u4e8e\u952e\u7684\u5143\u7d20\u96c6\u5408 \uff08\u952e\u4e0d\u80fd\u91cd\u590d\uff0c\u4f46\u662f\u503c\u53ef\u4ee5\u91cd\u590d\uff09</p> <p>\u5e38\u89c1\u7684\u64cd\u4f5c \uff1a </p> <ol> <li>\u589e\u52a0\u952e\u503c\u5bf9 <code>put(K key,V value)</code></li> <li>\u6839\u636e\u952e\u67e5\u503c <code>get(Object key)</code></li> <li>\u5220\u9664\u952e\u503c\u5bf9 <code>remove(Object key)</code></li> </ol> <p>\u5e38\u89c1\u7684<code>Map</code>\u7684\u5b9e\u73b0\u7c7b</p> <ol> <li><code>HashMap</code></li> <li><code>LinkedHashMap</code></li> <li><code>TreeMap</code> </li> </ol>"},{"location":"Tutorial/Java/Java9/#queue","title":"Queue","text":"<p>\u961f\u5217\u662f\u57fa\u4e8e<code>Collection</code>\u63a5\u53e3\u7684\u7ee7\u627f\u63a5\u53e3,\u5e38\u89c1\u7684\u64cd\u4f5c\u6709 :</p> <p>\u8868\u793a\u4e00\u4e2a\u961f\u5217\uff0c\u9075\u5faa<code>FIFO</code>\u5148\u8fdb\u5148\u51fa\u7684\u539f\u5219</p> <p>\u65b9\u6cd5 \uff1a </p> <ul> <li><code>add(E e)/offer(E e)</code> \u5411\u961f\u5217\u5c3e\u90e8\u6dfb\u52a0\u5143\u7d20</li> <li><code>poll()</code> \u4ece\u961f\u5934\u83b7\u53d6\u5e76\u79fb\u9664\u5143\u7d20</li> <li><code>peek()</code> \u4ece\u961f\u5934\u83b7\u53d6\u4f46\u4e0d\u79fb\u9664</li> </ul> <p>\u8fd9\u91cc\u7684 <code>poll()</code> \u548c <code>peek()</code> \u5176\u5b9e\u6709\u70b9\u7c7b\u4f3c <code>top()</code> \u548c <code>pop()</code> \u533a\u522b\u662f\u5426\u79fb\u9664\u9876\u90e8\u5143\u7d20</p> <p>\u5e38\u89c1\u7684\u5b9e\u73b0\u7c7b \uff1a  - <code>PriorityQueue</code>  - <code>LinkedList</code> \u540c\u65f6\u5b9e\u73b0\u4e86 <code>List</code> \u548c <code>Queue</code></p>"},{"location":"Tutorial/Java/Feature/Proxy/","title":"\u4ee3\u7406","text":"<p>\u4ee3\u7406\u662fJava\u4e2d\u5f88\u5e38\u89c1\u7684\u4e00\u4e2a\u8bbe\u8ba1\u6a21\u5f0f\uff0c\u5b83\u662f\u4e00\u79cd\u7ed3\u6784\u578b\u8bbe\u8ba1\u6a21\u5f0f\u3002\u4ee3\u7406\u6a21\u5f0f\u4e3a\u5176\u4ed6\u5bf9\u8c61\u63d0\u4f9b\u4e00\u79cd\u4ee3\u7406\u4ee5\u63a7\u5236\u5bf9\u8fd9\u4e2a\u5bf9\u8c61\u7684\u8bbf\u95ee\u3002\u4ee3\u7406\u6a21\u5f0f\u5b9a\u4e49\u4e86\u4e00\u4e2a\u4ee3\u7406\u5bf9\u8c61\uff0c\u4ee3\u7406\u5bf9\u8c61\u53ef\u4ee5\u5728\u5ba2\u6237\u7aef\u548c\u76ee\u6807\u5bf9\u8c61\u4e4b\u95f4\u8d77\u5230\u4e2d\u4ecb\u7684\u4f5c\u7528\u3002\u4ee3\u7406\u6a21\u5f0f\u6700\u5e38\u89c1\u7684\u5e94\u7528\u573a\u666f\u662f\uff1a\u8fdc\u7a0b\u4ee3\u7406\u3001\u865a\u62df\u4ee3\u7406\u3001\u4fdd\u62a4\u4ee3\u7406\u3001\u7f13\u5b58\u4ee3\u7406\u3001\u667a\u80fd\u5f15\u7528\u7b49\u3002</p>"},{"location":"Tutorial/Java/Feature/Proxy/#rpc","title":"RPC\u4e2d\u7684\u4ee3\u7406","text":"<p>\u6211\u4eec\u5148\u4ecb\u7ecd\u4e00\u4e0bRPC\u6846\u67b6\u4e2d\u7684\u51fa\u73b0\u7684\u4ee3\u7406</p> <p>\u4ee3\u7406\uff0c\u987e\u540d\u601d\u4e49\u5c31\u662f \u4ee3\u66ff \u548c \u670d\u52a1\u3002\u6211\u4eec\u5728\u5b9e\u73b0RPC\u6846\u67b6\u7684\u65f6\u5019\uff0c\u4f7f\u7528\u5230\u4e86\u4ee3\u7406\u6a21\u5f0f\u3002\u4e5f\u5c31\u662f\u4e3a\u8fdc\u7a0b\u7684\u8c03\u7528\u63a5\u53e3\u63d0\u4f9b\u4e86\u4e00\u4e2a\u4ee3\u7406\u5bf9\u8c61\uff0c\u8fd9\u4e2a\u4ee3\u7406\u5bf9\u8c61\u53ef\u4ee5\u5728\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u7aef\u4e4b\u95f4\u8d77\u5230\u4e2d\u4ecb\u7684\u4f5c\u7528\u3002\u8fd9\u6837\u7684\u597d\u5904\u5c31\u662f\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u5ba2\u6237\u7aef\u8c03\u7528\u8fdc\u7a0b\u670d\u52a1\u7684\u65f6\u5019\uff0c\u4e0d\u9700\u8981\u5173\u5fc3\u5e95\u5c42\u7684\u7f51\u7edc\u901a\u4fe1\u7ec6\u8282\uff0c\u53ea\u9700\u8981\u8c03\u7528\u4ee3\u7406\u5bf9\u8c61\u7684\u65b9\u6cd5\u5373\u53ef\u3002</p>"},{"location":"Tutorial/Java/Feature/Proxy/#_2","title":"\u4ee3\u7406\u7684\u5206\u7c7b","text":"<ol> <li>\u9759\u6001\u4ee3\u7406 : \u987e\u540d\u601d\u4e49\u5c31\u662f\u5728\u7f16\u8bd1\u65f6\u671f\u5c31\u5df2\u7ecf\u786e\u5b9a\u4e86\u4ee3\u7406\u5bf9\u8c61 </li> <li>\u52a8\u6001\u4ee3\u7406 : \u987e\u540d\u601d\u4e49\u5c31\u662f\u5728\u8fd0\u884c\u65f6\u671f\u624d\u786e\u5b9a\u4ee3\u7406\u5bf9\u8c61\uff0c\u4e5f\u5c31\u662f\u901a\u8fc7\u6211\u4eec\u4f20\u5165\u7684\u7c7b\u578b\uff0c\u6765\u52a8\u6001\u7684\u751f\u6210\u4ee3\u7406\u5bf9\u8c61\u3002</li> </ol> <p>\u4e0b\u9762\u662f\u4e00\u4e2a\u6709\u5173\u52a8\u6001\u4ee3\u7406\u7684\u4f8b\u5b50: <pre><code>public class ServiceProxyFactory {\n    public static &lt;T&gt; T getProxy(Class&lt;T&gt; serviceClass){\n        // By distinguishing the configuration,we can know whether to use the mock proxy or the real proxy;\n        if(Holder.getRpcConfig().getIsMock())\n            return getMockProxy(serviceClass);\n\n        return (T) Proxy.newProxyInstance(\n                serviceClass.getClassLoader(),\n                new Class[]{serviceClass},\n                new ServiceProxy());\n    }\n\n\n    public static &lt;T&gt; T getMockProxy(Class&lt;T&gt; serviceClass){\n        return (T) Proxy.newProxyInstance(\n                serviceClass.getClassLoader(),\n                new Class[]{serviceClass},\n                new MockServiceProxy());\n    }\n}\n</code></pre> \u6211\u4eec\u5229\u7528\u5de5\u5382<code>Factory</code>\u8fd9\u4e2a\u8bbe\u8ba1\u6a21\u5f0f\u6765\u8fdb\u884c\u52a8\u6001\u4ee3\u7406\u6709\u5173\u7684\u64cd\u4f5c\u3002</p>"},{"location":"Tutorial/Java/Feature/Proxy/#getproxy","title":"<code>getProxy</code> \u65b9\u6cd5","text":"<p>\u9996\u5148\uff0c\u6211\u4eec\u901a\u8fc7\u4f20\u5165\u4e00\u4e2a\u670d\u52a1\u7684\u63a5\u53e3\u7c7b\u578b\uff0c\u4ece\u800c\u6765\u8fd4\u56de\u4ee3\u7406\u5bf9\u8c61\u3002</p> <p>\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u5047\u8bbe\u6211\u4eec\u5229\u7528Java\u7684\u53cd\u5c04\u673a\u5236\u4f20\u5165\u7684\u662f\u4e00\u4e2a <code>UserService.class</code> \u7684\u63a5\u53e3\u670d\u52a1\u7c7b\u578b\uff0c\u7136\u540e\u6211\u4eec\u901a\u8fc7 <code>Proxy.newProxyInstance</code> \u6765\u751f\u6210\u4e00\u4e2a\u4ee3\u7406\u5bf9\u8c61\u3002\u8fd9\u4e2a\u4ee3\u7406\u5bf9\u8c61\u5b9e\u73b0\u4e86 <code>UserService</code> \u8fd9\u4e2a\u63a5\u53e3\uff0c\u540c\u65f6\u6211\u4eec\u8fd8\u4f20\u5165\u4e86\u4e00\u4e2a <code>ServiceProxy</code> \u7684\u5bf9\u8c61\uff0c\u8fd9\u4e2a\u5bf9\u8c61\u662f\u4ee3\u7406\u5bf9\u8c61\u7684\u903b\u8f91\u5b9e\u73b0\u3002</p> <p>\u4ed4\u7ec6\u770b\u4e0a\u9762\u7684\u4ee3\u7801\uff0c\u6211\u4eec\u8c03\u7528\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u4f20\u56de\u6765\u7684\u662f\u4e00\u4e2a\u52a8\u6001\u4ee3\u7406\u7684\u5b9e\u4f8b\u3002<code>Proxy.newProxyInstance</code>.\u8fd9\u4e2a\u8fd4\u56de\u7684\u4ee3\u7406\u5bf9\u8c61\u5177\u6709\u4ee5\u4e0b\u7684\u4e09\u4e2a\u7279\u70b9:</p> <ol> <li>\u6211\u4eec\u5177\u6709\u4e00\u4e2a\u7c7b\u52a0\u8f7d\u5668\uff0c\u7528\u4e8e\u4e13\u95e8\u52a0\u8f7d\u8fd9\u4e2a\u4ee3\u7406\u5bf9\u8c61\u4e2d\u4f20\u5165\u7c7b\u7684\u5b57\u8282\u7801\u3002</li> <li>\u6211\u4eec\u4f20\u5165\u7684\u63a5\u53e3\u7c7b\u578b\u7684\u6570\u7ec4\uff0c\u7528\u4e8e\u6307\u5b9a\u8fd9\u4e2a\u4ee3\u7406\u5bf9\u8c61\u5b9e\u73b0\u4e86\u54ea\u4e9b\u63a5\u53e3\u3002</li> <li>\u6211\u4eec\u4f20\u5165\u7684 <code>InvocationHandler</code> \u5bf9\u8c61\uff0c\u7528\u4e8e\u5b9e\u73b0\u4ee3\u7406\u5bf9\u8c61\u7684\u903b\u8f91\u3002</li> </ol> <p>\u5176\u5b9e\u5f88\u597d\u7406\u89e3\uff0c\u5c31\u662f\u7b80\u5355\u7684\u51e0\u4e2a\u95ee\u9898\uff0c\u5b83\u662f\u8c01(\u7b2c\u4e8c\u70b9)\uff0c \u5b83\u9700\u8981\u505a\u4ec0\u4e48(\u7b2c\u4e09\u70b9)\uff0c \u5b83\u9700\u8981\u600e\u4e48\u5b9e\u73b0(\u7b2c\u4e00\u70b9)\u3002</p>"},{"location":"Tutorial/Java/Feature/Proxy/#new-serviceproxy","title":"<code>new ServiceProxy</code> \u65b9\u6cd5","text":"<p>\u63a5\u4e0b\u6765\u4ed4\u7ec6\u6765\u770b\u6211\u4eec\u4f20\u5165\u7684\u5b9e\u73b0<code>InvocationHandler</code>\u7684\u5bf9\u8c61 <code>ServiceProxy</code>\u3002\u8fd9\u4e2a\u5bf9\u8c61\u5b9e\u73b0\u4e86 <code>InvocationHandler</code> \u8fd9\u4e2a\u63a5\u53e3\uff0c\u8fd9\u4e2a\u63a5\u53e3\u662fJava\u63d0\u4f9b\u7684\u4e00\u4e2a\u63a5\u53e3\uff0c\u7528\u4e8e\u5b9e\u73b0\u52a8\u6001\u4ee3\u7406\u7684\u903b\u8f91\u3002</p> <p>\u4e0b\u9762\u662f\u6211RPC\u6846\u67b6\u4e2d\u7684\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff0c\u4ec5\u4f9b\u53c2\u8003</p> <pre><code>@Override\n    public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n        /**\n         * \u603b\u7ed3\u4e00\u4e0b\n         * \u9996\u5148\uff0c\u6211\u4eec\u77e5\u9053\u5728invoke\u7684\u603b\u4f53\u903b\u8f91\u5c31\u662f\u901a\u8fc7\u4e00\u4e2a\u52a8\u6001\u4ee3\u7406\u6765\u5e2e\u52a9\u6211\u4eec\u8c03\u7528\u8fdc\u7a0b\u7684\u670d\u52a1\u3002\n         * \u6211\u4eec\u6240\u9700\u8981\u505a\u7684\u5c31\u662f\u6784\u9020\u4e00\u4e2a\u8bf7\u6c42\uff0c\u7136\u540e\u901a\u8fc7\u5728\u6ce8\u518c\u4e2d\u5fc3\u4e2d\u627e\u5230\u670d\u52a1\u7684\u65b9\u6cd5\uff0c\u5e76\u4e14\u8c03\u7528\u5b83\uff0c\u7136\u540e\u8fd4\u56de\u670d\u52a1\u65b9\u6cd5\u8fd0\u884c\u7684\u7ed3\u679c\u3002\u8fd9\u4e2a\u5c31\u662f\u6211\u4eec\u7684\u603b\u4f53\u903b\u8f91\u3002\n         *\n         * \u7ec6\u5206\u4e00\u4e0b\u5c31\u662f:\n         * Step1:\n         *  \u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u5e8f\u5217\u5316\u5668\u6765\u5e2e\u52a9\u6211\u4eec\u4f20\u8f93RpcRequest\u548cRpcResponse\u3002\n         *      \u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u5c31\u9700\u8981\u4eceSerializerFactory\u5de5\u5382\u4e2d\u6765\u83b7\u53d6\u5b9e\u4f8b\uff0c\u56e0\u4e3a\u6211\u4eec\u5047\u8bbe\u5728\u901a\u8fc7\u914d\u7f6e\u6587\u4ef6\u6307\u5b9a\u4e86\u4e00\u4e2a\u5e8f\u5217\u5316\u5668\u3002\u90a3\u4e48\u5c31\u9700\u8981\u4ece\u5e8f\u5217\u5316\u5de5\u5382\u4e2d\u627e\u5230\u5bf9\u5e94\u7684\u5e8f\u5217\u5316\u5668\u3002\n         * Step2:\n         *  \u6784\u9020 RpcRequest \u8bf7\u6c42\u3002\u8fd9\u4e2a\u662f\u6211\u4eec\u9700\u8981\u5229\u7528builder\u6765\u521b\u5efa\u4e00\u4e2aRpcRequest\u5bf9\u8c61\u3002\n         * Step3:\n         *  \u53d1\u9001\u8bf7\u6c42\u3002\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u9700\u8981\u4ece\u6ce8\u518c\u4e2d\u5fc3\u6765\u83b7\u53d6\u670d\u52a1\u63d0\u4f9b\u8005\u7684\u5730\u5740\uff0c\u7136\u540e\u53d1\u9001\u8bf7\u6c42\u3002\n         *    Step3.1 :\n         *      \u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u5e8f\u5217\u5316RpcRequest\u8bf7\u6c42\u3002\n         *    Step3.2 :\n         *      \u7136\u540e\uff0c\u6211\u4eec\u5148\u4ece\u5f53\u524d\u7684RpcConfig\u7684\u914d\u7f6e\u6587\u4ef6\u4e2d\u627e\u5230\u9700\u8981\u7684\u6ce8\u518c\u4e2d\u5fc3\u7684\u914d\u7f6e\u3002\n         *    Step3.3 :\n         *      \u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u5728\u6ce8\u518c\u4e2d\u5fc3\u5de5\u5382\u4e2d\u5bfb\u627e\u6211\u4eec\u7684\u6ce8\u518c\u4e2d\u5fc3\u5b9e\u4f8b\u3002\u5982\u679c\u6ca1\u6709\uff0c\u5c31\u76f4\u63a5\u7684\u5229\u7528\u9ed8\u8ba4\u7684\u6ce8\u518c\u4e2d\u5fc3\u3002\n         *    Step3.4 :\n         *      \u5728\u6ce8\u518c\u4e2d\u5fc3\u4e2d\u5bfb\u627e\u6211\u4eec\u9700\u8981\u7684\u670d\u52a1\u4e2d\u7684\u6240\u6709\u8282\u70b9\u3002\n         *    Step3.5 :\n         *      \u8fd9\u91cc\uff0c\u6211\u4eec\u9009\u62e9\u670d\u52a1\u4e2d\u7684\u7b2c\u4e00\u4e2a\u8282\u70b9\u6765\u8fdb\u884c\u8bf7\u6c42\u3002\n         * Step 4:\n         *  \u6211\u4eec\u627e\u5230\u4e86\u53ef\u4ee5\u63d0\u4f9b\u670d\u52a1\u7684\u8282\u70b9\u4e4b\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u53d1\u9001\u8bf7\u6c42\u4e86\u3002\u5f80\u627e\u5230\u7684\u670d\u52a1\u8282\u70b9\u4e2d\u53d1\u9001Request\u8bf7\u6c42\u3002\n         *\n         * Step5 :\n         * \u8fd4\u56de\u7ed3\u679c\u3002\n         *\n         */\n\n\n        // \u6307\u5b9a\u5e8f\u5217\u5316\u5668\n        Serializer serializer = SerializerFactory.getInstance(Holder.getRpcConfig().getSerializer());\n\n        // \u6784\u9020\u8bf7\u6c42\n        String serviceName = method.getDeclaringClass().getName();\n        RpcRequest rpcRequest = RpcRequest.builder()\n                .serviceName(method.getDeclaringClass().getName())\n                .methodName(method.getName())\n                .parameterTypes(method.getParameterTypes())\n                .args(args)\n                .build();\n\n\n        try {\n            // \u5e8f\u5217\u5316\n            byte[] bodyBytes = serializer.serialize(rpcRequest);\n            // \u4ece\u6ce8\u518c\u4e2d\u5fc3\u6765\u83b7\u53d6\u670d\u52a1\u63d0\u4f9b\u8005\u8bf7\u6c42\u5730\u5740\n            RpcConfig rpcConfig = Holder.getRpcConfig();\n            RegisterTry registerTry = RegisterFactory.getInstance(rpcConfig.getRegisterConfig().getRegisterType());\n\n            ServiceMetaInfo serviceMetaInfo = new ServiceMetaInfo();\n            serviceMetaInfo.setServiceName(serviceName);\n            serviceMetaInfo.setServiceVersion(RpcConstant.DEFUALT_SERVICE_VERSION);\n            System.out.println(serviceMetaInfo);\n            // \u627e\u5230\u6240\u6709\u63d0\u4f9b\u8be5\u670d\u52a1\u7684\u8282\u70b9;\n            List&lt;ServiceMetaInfo&gt; list = registerTry.serviceDiscovery(serviceMetaInfo.getServiceKey());\n            // \u6ca1\u6709\u8282\u70b9\u63d0\u4f9b\u8fd9\u6837\u7684\u670d\u52a1\uff1b\n            if(CollUtil.isEmpty(list))\n                throw new RuntimeException(\"\u6682\u65e0\u670d\u52a1\u5730\u5740\");\n            // \u6211\u4eec\u4f18\u5148\u9009\u53d6\u7b2c\u4e00\u4e2a\u670d\u52a1;\n            ServiceMetaInfo selectedServiceMetaInfo = list.get(0);\n            // \u5728\u627e\u5230\u53ef\u4ee5\u63d0\u4f9b\u670d\u52a1\u7684\u8282\u70b9\u4e4b\u540e\uff0c\u6211\u4eec\u8fdb\u884c\u53d1\u9001\u8bf7\u6c42;\n            try(HttpResponse httpResponse = HttpRequest.post(selectedServiceMetaInfo.getServiceAddress()).body(bodyBytes).execute()){\n                byte[] results = httpResponse.bodyBytes();\n                RpcResponse rpcResponse = serializer.deserialize(results, RpcResponse.class);\n                return rpcResponse.getData();\n            }\n\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n\n        return null;\n    }\n</code></pre>"},{"location":"Tutorial/Java/Feature/Proxy/#invoke","title":"<code>invoke</code> \u65b9\u6cd5","text":"<p>\u4f20\u5165\u7684\u53c2\u6570\u6709\u4e09\u4e2a,\u8fd9\u4e2a\u662f\u51fd\u6570\u7684\u7b7e\u540d <code>public Object invoke(Object proxy,Method method,Object[] args) throw Throwable</code> </p> <ul> <li><code>Object Proxy</code> : \u8fd9\u4e2a\u4ee3\u7406\u672c\u8eab</li> <li><code>Method method</code> : \u8fd9\u4e2a\u662f\u6211\u4eec\u9700\u8981\u8c03\u7528\u7684\u65b9\u6cd5</li> <li><code>Object[] args</code> : \u8fd9\u4e2a\u662f\u6211\u4eec\u8c03\u7528\u65b9\u6cd5\u7684\u53c2\u6570 </li> </ul>"},{"location":"Tutorial/Java/Feature/SPI/","title":"SPI","text":"<p>SPI(Service Provider Interface) \u662f Java \u63d0\u4f9b\u7684\u4e00\u79cd\u670d\u52a1\u63d0\u4f9b\u8005\u63a5\u53e3\uff0c\u7528\u4e8e\u5b9e\u73b0\u670d\u52a1\u7684\u6269\u5c55\u3002</p> <p><code>SPI</code> \u673a\u5236\u662f\u4e00\u79cd\u670d\u52a1\u53d1\u73b0\u673a\u5236\uff0c\u5b83\u901a\u8fc7\u5728 <code>META-INF/services</code> \u76ee\u5f55\u4e0b\u63d0\u4f9b\u4e00\u4e2a\u63a5\u53e3\u7684\u5b9e\u73b0\u7c7b\u6765\u5b9e\u73b0\u670d\u52a1\u7684\u6269\u5c55\u3002\u53ef\u80fd\u7406\u89e3\u8d77\u6765\u6bd4\u8f83\u62bd\u8c61\uff0c\u6211\u4eec\u8fd9\u91cc\u901a\u8fc7\u548c<code>API</code>\u6765\u8fdb\u884c\u5bf9\u6bd4\u6765\u7406\u89e3\u3002</p>"},{"location":"Tutorial/Java/Feature/SPI/#api-spi","title":"API \u4e0e SPI","text":"<p>\u4ec0\u4e48\u662fAPI?</p> <p><code>API</code> (Application Programming Interface)\u662f\u5e94\u7528\u7a0b\u5e8f\u63a5\u53e3\uff0c\u662f\u4e00\u79cd\u8f6f\u4ef6\u7684\u63a5\u53e3\uff0c\u7528\u4e8e\u4e0d\u540c\u8f6f\u4ef6\u4e4b\u95f4\u7684\u901a\u4fe1\u3002<code>API</code> \u901a\u5e38\u662f\u4e00\u7ec4\u9884\u5b9a\u4e49\u7684\u51fd\u6570\uff0c\u7c7b\u6216\u65b9\u6cd5\uff0c\u7528\u4e8e\u8bbf\u95ee\u8f6f\u4ef6\u7684\u529f\u80fd\u3002<code>API</code> \u53ef\u4ee5\u662f\u64cd\u4f5c\u7cfb\u7edf\u7684 <code>API</code>\uff0c\u5e93\u7684 <code>API</code>\uff0c\u6216\u8005\u662f <code>Web</code> \u670d\u52a1\u7684 <code>API</code>\u3002</p> <p>\u800c\u5bf9\u6bd4\u7684\u6765\u770b\uff0c<code>SPI</code> \u662f(Service Provider Interface). \u4ed6\u4eec\u7684\u4e3b\u4f53\u662f\u521a\u597d\u76f8\u53cd\u7684\u3002\u524d\u8005\u662f\u7531\u4f7f\u7528\u8005\u5b9a\u4e49\u7684\uff0c\u540e\u8005\u662f\u7531\u670d\u52a1\u63d0\u4f9b\u8005\u5b9a\u4e49\u7684\u3002</p> <p></p> <p>\u4e00\u4e2a\u5f88\u7b80\u5355\u7684\u4f8b\u5b50\uff0c\u6211\u4eec\u5728\u8003\u8651NASA\u5728\u62db\u52df\u5404\u4e2a\u516c\u53f8\u6765\u5b9e\u73b0\u4e00\u4e2a\u706b\u661f\u63a2\u6d4b\u5668\u7684\u8fd4\u56de\u5730\u7403\u7684\u540e\u7eed\u5de5\u7a0b\uff0c\u62db\u6807\u3002\u5047\u8bbe\uff0c\u6211\u4eec\u6709\u4e24\u5bb6\u516c\u53f8\u6765\u8fdb\u884c\u62db\u6807\u3002</p> <p>\u9996\u5148\u662fAPI : \u4e24\u5bb6\u516c\u53f8\uff0c\u5404\u81ea\u63d0\u4f9b\u4e86\u4e00\u4e2a\u63a5\u53e3\uff0c\u7528\u4e8e\u5b9e\u73b0\u706b\u661f\u63a2\u6d4b\u5668\u7684\u8fd4\u56de\u5730\u7403\u7684\u5de5\u7a0b\uff0c\u4f46\u662f\u63a5\u53e3\u662f\u7531\u4e24\u5bb6\u516c\u53f8\u6765\u63d0\u4f9b\u3002\u5018\u82e5NASA\u9009\u62e9\u4e86\u5176\u4e2d\u4e00\u5bb6\u516c\u53f8\uff0c\u90a3\u4e48NASA\u5c31\u9700\u8981\u4f7f\u7528\u8fd9\u5bb6\u516c\u53f8\u63d0\u4f9b\u7684\u63a5\u53e3\u6765\u5b9e\u73b0\u706b\u661f\u63a2\u6d4b\u5668\u7684\u8fd4\u56de\u5730\u7403\u7684\u5de5\u7a0b\u3002\u8ba9\u81ea\u8eab\u7684\u7cfb\u7edf\u4fee\u6539\u8fc7\u540e\u53ef\u4ee5\u9002\u914d\u9009\u4e2d\u7684\u8fd9\u5bb6\u516c\u53f8\u7684\u63a5\u53e3\u3002\u8981\u8fdb\u884c\u6bd4\u5bf9\u7684\u8bdd\uff0c\u5c31\u5fc5\u987b\u7684\u591a\u6b21\u4fee\u6539\u81ea\u5df1\u7684\u7cfb\u7edf\u6765\u9002\u914d\u5404\u4e2a\u516c\u53f8\u7684\u63a5\u53e3\u3002</p> <p></p> <p>\u5176\u6b21\u662fSPI : \u56e0\u4e3aNASA \u4f5c\u4e3a\u62db\u6807\u7684\u7532\u65b9\uff0c\u5b83\u5e76\u4e0d\u8ba4\u540c\u8fd9\u6837\u6765\u5b9e\u73b0\u3002\u800c\u53d8\u6210\u4e86\u8ba9\u5404\u4e2a\u62db\u6807\u516c\u53f8\u5728\u57fa\u4e8eNASA\u7684\u7ed9\u5b9a\u6807\u51c6\u4e0b\uff0c\u6765\u8fdb\u884c\u63a5\u53e3\u7684\u8bbe\u8ba1\u3002\u8fd9\u6837\u7684\u597d\u5904\u5c31\u662f\uff0cNASA\u53ea\u9700\u8981\u63d0\u4f9b\u4e00\u4e2a\u6807\u51c6\uff0c\u5176\u4ed6\u7684\u62db\u6807\u516c\u53f8\u5fc5\u987b\u6309\u7167\u8fd9\u4e2a\u6807\u51c6\u6765\u8fdb\u884c\u63a5\u53e3\u8bbe\u8ba1\u3002\u4e0d\u9700\u8981\u6bcf\u6b21\u7684\u4fee\u6539\u81ea\u5df1\u7684\u7cfb\u7edf\u6765\u9002\u914d\u5404\u4e2a\u516c\u53f8\u7684\u63a5\u53e3\u3002\u5f88\u5178\u578b\u7684\u4f8b\u5b50\u5c31\u662f\uff0cJava\u63d0\u4f9b\u7684 <code>JDBC</code> \u63a5\u53e3\uff0c\u5404\u4e2a\u6570\u636e\u5e93\u5382\u5546\u6765\u5b9e\u73b0\u8fd9\u4e2a\u63a5\u53e3\uff0c\u8fd9\u6837\u7684\u597d\u5904\u5c31\u662f\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4fee\u6539\u914d\u7f6e\u6587\u4ef6\uff0c\u5c31\u53ef\u4ee5\u5207\u6362\u4e0d\u540c\u7684\u6570\u636e\u5e93\u3002</p> <p></p>"},{"location":"Tutorial/Java/Feature/SPI/#rpc-spi","title":"RPC \u4e2d\u7684SPI\u673a\u5236","text":"<p>\u6211\u4eec\u5728\u5b9e\u73b0<code>RPC</code>\u6846\u67b6\u7684\u65f6\u5019\uff0c\u4e3e\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u5c31\u662f<code>Serializer</code>\u7684\u5b9e\u73b0\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528<code>SPI</code>\u673a\u5236\u6765\u5b9e\u73b0\u3002\u65e2\u53ef\u4ee5\u5728\u6846\u67b6\u5185\u90e8\u9009\u62e9\u5b9e\u73b0\u65e2\u5b9a\u63d0\u4f9b\u7684\u5e8f\u5217\u5316\u63a5\u53e3\uff0c\u540c\u65f6\u6211\u4eec\u4e5f\u53ef\u4ee5\u81ea\u5b9a\u4e49\u5b9e\u73b0\u5e8f\u5217\u5316\u63a5\u53e3\u3002</p>"},{"location":"Tutorial/Java/JVM/Memory/","title":"\u5185\u5b58\u4e0e\u5783\u573e\u56de\u6536","text":""},{"location":"Tutorial/Java/JVM/introduce/","title":"Introduce","text":""},{"location":"Tutorial/Java/JVM/introduce/#jvm","title":"\u4e3a\u4ec0\u4e48\u8981\u5b66\u4e60 JVM","text":"<p>\u7a0b\u5e8f\u5458\u592a\u5173\u6ce8\u4e0a\u5c42\uff0c\u4f46\u662f\u5ffd\u7565\u4e86\u4e0b\u5c42\u7684JVM. \u6211\u4eec\u628a\u4e0a\u5c42\u7684 <code>API</code> \u5e93\u7684\u8c03\u7528\u770b\u6210\u662f\u6570\u5b66\u516c\u5f0f\uff0c\u90a3\u4e48 <code>JVM</code> \u7684\u8c03\u7528\u5c31\u597d\u50cf\u662f\u6570\u5b66\u516c\u5f0f\u7684\u8ba1\u7b97\u8fc7\u7a0b\u3002 </p> <ol> <li>\u9762\u8bd5\u9700\u6c42</li> <li> <p>\u4e2d\u9ad8\u7ea7\u7a0b\u5e8f\u5458\u7684\u5fc5\u5907\u6280\u80fd</p> <p>\u9879\u76ee\u7ba1\u7406\uff0c\u8c03\u4f18\u9700\u8981</p> </li> <li> <p>\u8ffd\u6c42\u6781\u5ba2\u7cbe\u795e</p> <p>\u4e86\u89e3\u5e95\u5c42\u7684\u4e1c\u897f\uff0c\u624d\u80fd\u66f4\u597d\u7684\u7406\u89e3\u4e0a\u5c42\u7684\u4e1c\u897f\u3002</p> </li> </ol>"},{"location":"Tutorial/Java/JVM/introduce/#_1","title":"\u67b6\u6784\u5e08\u6bcf\u5929\u90fd\u5728\u5173\u5fc3\u4ec0\u4e48\uff1f","text":"<ul> <li>\u5e94\u8be5\u5982\u4f55\u8ba9\u6211\u4eec\u7684\u7cfb\u7edf\u66f4\u5feb</li> <li>\u5982\u4f55\u907f\u514d\u7cfb\u7edf\u51fa\u73b0\u5d29\u6e83/\u74f6\u9888</li> </ul>"}]}